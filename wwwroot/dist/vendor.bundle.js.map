{"version":3,"sources":["webpack:///../src/Observable.ts","webpack:///../../../../packages/core/src/di/injection_token.ts","webpack:///../../../../packages/core/src/util.ts","webpack:///../../../../packages/core/src/util/decorators.ts","webpack:///../../../../packages/core/src/metadata/di.ts","webpack:///../../../../packages/core/src/change_detection/constants.ts","webpack:///../../../../packages/core/src/metadata/directives.ts","webpack:///../../../../packages/core/src/metadata/ng_module.ts","webpack:///../../../../packages/core/src/metadata/view.ts","webpack:///../../../../packages/core/src/metadata.ts","webpack:///../../../../packages/core/src/version.ts","webpack:///../../../../packages/core/src/di/metadata.ts","webpack:///../../../../packages/core/src/di/forward_ref.ts","webpack:///../../../../packages/core/src/di/injector.ts","webpack:///../../../../packages/core/src/errors.ts","webpack:///../../../../packages/core/src/error_handler.ts","webpack:///../../../../packages/core/src/di/reflective_errors.ts","webpack:///../../../../packages/core/src/di/reflective_key.ts","webpack:///../../../../packages/core/src/type.ts","webpack:///../../../../packages/core/src/reflection/reflection_capabilities.ts","webpack:///../../../../packages/core/src/reflection/reflector.ts","webpack:///../../../../packages/core/src/reflection/reflection.ts","webpack:///../../../../packages/core/src/di/reflective_provider.ts","webpack:///../../../../packages/core/src/di/reflective_injector.ts","webpack:///../../../../packages/core/src/di.ts","webpack:///../../../../packages/core/src/util/lang.ts","webpack:///../../../../packages/core/src/application_init.ts","webpack:///../../../../packages/core/src/application_tokens.ts","webpack:///../../../../packages/core/src/console.ts","webpack:///../../../../packages/core/src/linker/compiler.ts","webpack:///../../../../packages/core/src/linker/component_factory.ts","webpack:///../../../../packages/core/src/linker/component_factory_resolver.ts","webpack:///../../../../packages/core/src/linker/ng_module_factory.ts","webpack:///../../../../packages/core/src/profile/wtf_impl.ts","webpack:///../../../../packages/core/src/profile/profile.ts","webpack:///../../../../packages/core/src/event_emitter.ts","webpack:///../../../../packages/core/src/zone/ng_zone.ts","webpack:///../../../../packages/core/src/testability/testability.ts","webpack:///../../../../packages/core/src/application_ref.ts","webpack:///../../../../packages/core/src/zone.ts","webpack:///../../../../packages/core/src/render/api.ts","webpack:///../../../../packages/core/src/linker/element_ref.ts","webpack:///../../../../packages/core/src/linker/ng_module_factory_loader.ts","webpack:///../../../../packages/core/src/linker/query_list.ts","webpack:///../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","webpack:///../../../../packages/core/src/linker/template_ref.ts","webpack:///../../../../packages/core/src/linker/view_container_ref.ts","webpack:///../../../../packages/core/src/linker/view_ref.ts","webpack:///../../../../packages/core/src/debug/debug_node.ts","webpack:///../../../../packages/core/src/change_detection/change_detection_util.ts","webpack:///../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","webpack:///../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","webpack:///../../../../packages/core/src/change_detection/differs/iterable_differs.ts","webpack:///../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","webpack:///../../../../packages/core/src/change_detection/change_detection.ts","webpack:///../../../../packages/core/src/change_detection.ts","webpack:///../../../../packages/core/src/platform_core_providers.ts","webpack:///../../../../packages/core/src/i18n/tokens.ts","webpack:///../../../../packages/core/src/application_module.ts","webpack:///../../../../packages/core/src/security.ts","webpack:///../../../../packages/core/src/view/types.ts","webpack:///../../../../packages/core/src/view/errors.ts","webpack:///../../../../packages/core/src/view/util.ts","webpack:///../../../../packages/core/src/view/element.ts","webpack:///../../../../packages/core/src/view/ng_module.ts","webpack:///../../../../packages/core/src/view/view_attach.ts","webpack:///../../../../packages/core/src/view/refs.ts","webpack:///../../../../packages/core/src/view/provider.ts","webpack:///../../../../packages/core/src/view/query.ts","webpack:///../../../../packages/core/src/view/ng_content.ts","webpack:///../../../../packages/core/src/view/pure_expression.ts","webpack:///../../../../packages/core/src/view/text.ts","webpack:///../../../../packages/core/src/view/view.ts","webpack:///../../../../packages/core/src/view/services.ts","webpack:///../../../../packages/core/src/view/entrypoint.ts","webpack:///../../../../packages/core/src/view/index.ts","webpack:///../../../../packages/core/src/animation/dsl.ts","webpack:///../../../../packages/core/src/animation/animation_metadata_wrapped.ts","webpack:///../../../../packages/core/src/core.ts","webpack:///../../../../packages/core/public_api.ts","webpack:///../src/Subscriber.ts","webpack:///./~/tslib/tslib.es6.js","webpack:///../../src/util/root.ts","webpack:///../../../../packages/platform-browser/src/dom/dom_adapter.ts","webpack:///../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","webpack:///../../../../packages/platform-browser/src/browser/browser_adapter.ts","webpack:///../../../../packages/platform-browser/src/dom/dom_tokens.ts","webpack:///../../../../packages/platform-browser/src/browser/location/browser_platform_location.ts","webpack:///../../../../packages/platform-browser/src/browser/meta.ts","webpack:///../../../../packages/platform-browser/src/browser/server-transition.ts","webpack:///../../../../packages/platform-browser/src/browser/testability.ts","webpack:///../../../../packages/platform-browser/src/browser/title.ts","webpack:///../../../../packages/platform-browser/src/dom/util.ts","webpack:///../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","webpack:///../../../../packages/platform-browser/src/dom/events/event_manager.ts","webpack:///../../../../packages/platform-browser/src/dom/shared_styles_host.ts","webpack:///../../../../packages/platform-browser/src/dom/dom_renderer.ts","webpack:///../../../../packages/platform-browser/src/dom/events/dom_events.ts","webpack:///../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","webpack:///../../../../packages/platform-browser/src/dom/events/key_events.ts","webpack:///../../../../packages/platform-browser/src/security/inert_body.ts","webpack:///../../../../packages/platform-browser/src/security/url_sanitizer.ts","webpack:///../../../../packages/platform-browser/src/security/html_sanitizer.ts","webpack:///../../../../packages/platform-browser/src/security/style_sanitizer.ts","webpack:///../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","webpack:///../../../../packages/platform-browser/src/browser.ts","webpack:///../../../../packages/platform-browser/src/browser/tools/browser.ts","webpack:///../../../../packages/platform-browser/src/browser/tools/common_tools.ts","webpack:///../../../../packages/platform-browser/src/browser/tools/tools.ts","webpack:///../../../../packages/platform-browser/src/dom/debug/by.ts","webpack:///../../../../packages/platform-browser/src/private_export.ts","webpack:///../../../../packages/platform-browser/src/version.ts","webpack:///../../../../packages/platform-browser/src/platform-browser.ts","webpack:///../../../../packages/platform-browser/public_api.ts","webpack:///../src/Subject.ts","webpack:///../src/Subscription.ts","webpack:///../../src/observable/EmptyObservable.ts","webpack:///../../../../packages/common/src/location/platform_location.ts","webpack:///../../../../packages/common/src/location/location_strategy.ts","webpack:///../../../../packages/common/src/location/location.ts","webpack:///../../../../packages/common/src/location/hash_location_strategy.ts","webpack:///../../../../packages/common/src/location/path_location_strategy.ts","webpack:///../../../../packages/common/src/location/index.ts","webpack:///../../../../packages/common/src/localization.ts","webpack:///../../../../packages/common/src/cookie.ts","webpack:///../../../../packages/common/src/directives/ng_class.ts","webpack:///../../../../packages/common/src/directives/ng_component_outlet.ts","webpack:///../../../../packages/common/src/directives/ng_for_of.ts","webpack:///../../../../packages/common/src/directives/ng_if.ts","webpack:///../../../../packages/common/src/directives/ng_switch.ts","webpack:///../../../../packages/common/src/directives/ng_plural.ts","webpack:///../../../../packages/common/src/directives/ng_style.ts","webpack:///../../../../packages/common/src/directives/ng_template_outlet.ts","webpack:///../../../../packages/common/src/directives/index.ts","webpack:///../../../../packages/common/src/pipes/invalid_pipe_argument_error.ts","webpack:///../../../../packages/common/src/pipes/async_pipe.ts","webpack:///../../../../packages/common/src/pipes/case_conversion_pipes.ts","webpack:///../../../../packages/common/src/pipes/intl.ts","webpack:///../../../../packages/common/src/pipes/number_pipe.ts","webpack:///../../../../packages/common/src/pipes/date_pipe.ts","webpack:///../../../../packages/common/src/pipes/i18n_plural_pipe.ts","webpack:///../../../../packages/common/src/pipes/i18n_select_pipe.ts","webpack:///../../../../packages/common/src/pipes/json_pipe.ts","webpack:///../../../../packages/common/src/pipes/slice_pipe.ts","webpack:///../../../../packages/common/src/pipes/index.ts","webpack:///../../../../packages/common/src/common_module.ts","webpack:///../../../../packages/common/src/dom_tokens.ts","webpack:///../../../../packages/common/src/version.ts","webpack:///../../../../packages/common/src/common.ts","webpack:///../../../../packages/common/public_api.ts","webpack:///./~/base64-js/index.js?b6d9","webpack:///./~/buffer/index.js?b8d7","webpack:///./~/css-loader/lib/css-base.js?ae8b","webpack:///./~/ieee754/index.js?42c6","webpack:///./~/isarray/index.js?2e45","webpack:///../src/OuterSubscriber.ts","webpack:///../../src/observable/ArrayObservable.ts","webpack:///../../src/operator/map.ts","webpack:///../../src/operators/mergeAll.ts","webpack:///../../src/operators/mergeMap.ts","webpack:///../../src/symbol/iterator.ts","webpack:///../../src/symbol/observable.ts","webpack:///../../src/symbol/rxSubscriber.ts","webpack:///../../src/util/EmptyError.ts","webpack:///../../src/util/isArray.ts","webpack:///../../src/util/subscribeToResult.ts","webpack:///../../../../packages/http/src/backends/browser_xhr.ts","webpack:///../../../../packages/http/src/enums.ts","webpack:///../../../../packages/http/src/headers.ts","webpack:///../../../../packages/http/src/base_response_options.ts","webpack:///../../../../packages/http/src/interfaces.ts","webpack:///../../../../packages/http/src/http_utils.ts","webpack:///../../../../packages/http/src/url_search_params.ts","webpack:///../../../../packages/http/src/body.ts","webpack:///../../../../packages/http/src/static_response.ts","webpack:///../../../../packages/http/src/backends/browser_jsonp.ts","webpack:///../../../../packages/http/src/backends/jsonp_backend.ts","webpack:///../../../../packages/http/src/backends/xhr_backend.ts","webpack:///../../../../packages/http/src/base_request_options.ts","webpack:///../../../../packages/http/src/static_request.ts","webpack:///../../../../packages/http/src/http.ts","webpack:///../../../../packages/http/src/http_module.ts","webpack:///../../../../packages/http/src/version.ts","webpack:///../../../../packages/http/src/index.ts","webpack:///../../../../packages/http/public_api.ts","webpack:///../../../../packages/router/src/events.ts","webpack:///../../../../packages/router/src/shared.ts","webpack:///../../../../packages/router/src/config.ts","webpack:///../../../../packages/router/src/utils/collection.ts","webpack:///../../../../packages/router/src/url_tree.ts","webpack:///../../../../packages/router/src/apply_redirects.ts","webpack:///../../../../packages/router/src/utils/tree.ts","webpack:///../../../../packages/router/src/router_state.ts","webpack:///../../../../packages/router/src/create_router_state.ts","webpack:///../../../../packages/router/src/create_url_tree.ts","webpack:///../../../../packages/router/src/recognize.ts","webpack:///../../../../packages/router/src/route_reuse_strategy.ts","webpack:///../../../../packages/router/src/router_config_loader.ts","webpack:///../../../../packages/router/src/url_handling_strategy.ts","webpack:///../../../../packages/router/src/router.ts","webpack:///../../../../packages/router/src/directives/router_link.ts","webpack:///../../../../packages/router/src/directives/router_link_active.ts","webpack:///../../../../packages/router/src/router_outlet_context.ts","webpack:///../../../../packages/router/src/directives/router_outlet.ts","webpack:///../../../../packages/router/src/router_preloader.ts","webpack:///../../../../packages/router/src/router_module.ts","webpack:///../../../../packages/router/src/version.ts","webpack:///../../../../packages/router/src/private_export.ts","webpack:///../../../../packages/router/public_api.ts","webpack:///../src/Observer.ts","webpack:///../../src/observable/PromiseObservable.ts","webpack:///../../src/observable/ScalarObservable.ts","webpack:///../../src/observable/fromPromise.ts","webpack:///../../src/operators/refCount.ts","webpack:///../../src/util/ObjectUnsubscribedError.ts","webpack:///../../src/util/errorObject.ts","webpack:///../../src/util/isArrayLike.ts","webpack:///../../src/util/isFunction.ts","webpack:///../../src/util/isObject.ts","webpack:///../../src/util/isPromise.ts","webpack:///../../src/util/isScheduler.ts","webpack:///../../src/util/pipe.ts","webpack:///../../../packages/compiler/src/version.js","webpack:///../../../packages/compiler/src/template_parser/template_ast.js","webpack:///../../../packages/compiler/src/aot/static_symbol.js","webpack:///../../../packages/compiler/src/ml_parser/tags.js","webpack:///../../../packages/compiler/src/ml_parser/html_tags.js","webpack:///../../../packages/compiler/src/selector.js","webpack:///../../../packages/compiler/src/util.js","webpack:///../../../packages/compiler/src/compile_metadata.js","webpack:///../../../packages/compiler/src/compile_reflector.js","webpack:///../../../packages/compiler/src/config.js","webpack:///../../../packages/compiler/src/expression_parser/ast.js","webpack:///../../../packages/compiler/src/chars.js","webpack:///../../../packages/compiler/src/injectable.js","webpack:///../../../packages/compiler/src/assertions.js","webpack:///../../../packages/compiler/src/ml_parser/interpolation_config.js","webpack:///../../../packages/compiler/src/expression_parser/lexer.js","webpack:///../../../packages/compiler/src/expression_parser/parser.js","webpack:///../../../packages/compiler/src/parse_util.js","webpack:///../../../packages/compiler/src/ast_path.js","webpack:///../../../packages/compiler/src/ml_parser/ast.js","webpack:///../../../packages/compiler/src/ml_parser/lexer.js","webpack:///../../../packages/compiler/src/ml_parser/parser.js","webpack:///../../../packages/compiler/src/i18n/digest.js","webpack:///../../../packages/compiler/src/i18n/i18n_ast.js","webpack:///../../../packages/compiler/src/i18n/serializers/placeholder.js","webpack:///../../../packages/compiler/src/i18n/i18n_parser.js","webpack:///../../../packages/compiler/src/i18n/parse_util.js","webpack:///../../../packages/compiler/src/i18n/extractor_merger.js","webpack:///../../../packages/compiler/src/ml_parser/xml_tags.js","webpack:///../../../packages/compiler/src/ml_parser/xml_parser.js","webpack:///../../../packages/compiler/src/i18n/serializers/serializer.js","webpack:///../../../packages/compiler/src/i18n/serializers/xml_helper.js","webpack:///../../../packages/compiler/src/i18n/serializers/xliff.js","webpack:///../../../packages/compiler/src/i18n/serializers/xliff2.js","webpack:///../../../packages/compiler/src/i18n/serializers/xmb.js","webpack:///../../../packages/compiler/src/i18n/serializers/xtb.js","webpack:///../../../packages/compiler/src/ml_parser/html_parser.js","webpack:///../../../packages/compiler/src/i18n/translation_bundle.js","webpack:///../../../packages/compiler/src/i18n/i18n_html_parser.js","webpack:///../../../packages/compiler/src/identifiers.js","webpack:///../../../packages/compiler/src/ml_parser/html_whitespaces.js","webpack:///../../../packages/compiler/src/ml_parser/icu_ast_expander.js","webpack:///../../../packages/compiler/src/provider_analyzer.js","webpack:///../../../packages/compiler/src/schema/element_schema_registry.js","webpack:///../../../packages/compiler/src/style_url_resolver.js","webpack:///../../../packages/compiler/src/template_parser/binding_parser.js","webpack:///../../../packages/compiler/src/template_parser/template_preparser.js","webpack:///../../../packages/compiler/src/template_parser/template_parser.js","webpack:///../../../packages/compiler/src/resource_loader.js","webpack:///../../../packages/compiler/src/url_resolver.js","webpack:///../../../packages/compiler/src/directive_normalizer.js","webpack:///../../../packages/compiler/src/directive_resolver.js","webpack:///../../../packages/compiler/src/aot/util.js","webpack:///../../../packages/compiler/src/lifecycle_reflector.js","webpack:///../../../packages/compiler/src/ng_module_resolver.js","webpack:///../../../packages/compiler/src/pipe_resolver.js","webpack:///../../../packages/compiler/src/summary_resolver.js","webpack:///../../../packages/compiler/src/metadata_resolver.js","webpack:///../../../packages/compiler/src/output/output_ast.js","webpack:///../../../packages/compiler/src/output/value_util.js","webpack:///../../../packages/compiler/src/view_compiler/provider_compiler.js","webpack:///../../../packages/compiler/src/ng_module_compiler.js","webpack:///../../../packages/compiler/src/output/source_map.js","webpack:///../../../packages/compiler/src/output/abstract_emitter.js","webpack:///../../../packages/compiler/src/output/ts_emitter.js","webpack:///../../../packages/compiler/src/schema/dom_security_schema.js","webpack:///../../../packages/compiler/src/schema/dom_element_schema_registry.js","webpack:///../../../packages/compiler/src/shadow_css.js","webpack:///../../../packages/compiler/src/style_compiler.js","webpack:///../../../packages/compiler/src/compiler_util/expression_converter.js","webpack:///../../../packages/compiler/src/view_compiler/view_compiler.js","webpack:///../../../packages/compiler/src/aot/generated_file.js","webpack:///../../../packages/compiler/src/aot/summary_serializer.js","webpack:///../../../packages/compiler/src/aot/compiler.js","webpack:///../../../packages/compiler/src/aot/static_reflector.js","webpack:///../../../packages/compiler/src/aot/static_symbol_resolver.js","webpack:///../../../packages/compiler/src/aot/summary_resolver.js","webpack:///../../../packages/compiler/src/aot/compiler_factory.js","webpack:///../../../packages/compiler/src/output/output_interpreter.js","webpack:///../../../packages/compiler/src/output/abstract_js_emitter.js","webpack:///../../../packages/compiler/src/output/output_jit.js","webpack:///../../../packages/compiler/src/jit/compiler.js","webpack:///../../../packages/compiler/src/i18n/message_bundle.js","webpack:///../../../packages/compiler/src/i18n/extractor.js","webpack:///../../../packages/compiler/src/i18n/index.js","webpack:///../../../packages/compiler/src/jit/jit_reflector.js","webpack:///../../../packages/compiler/src/jit/compiler_factory.js","webpack:///../../../packages/compiler/src/compiler.js","webpack:///../../../packages/compiler/index.js","webpack:///../../../../packages/forms/src/directives/abstract_control_directive.ts","webpack:///../../../../packages/forms/src/directives/control_container.ts","webpack:///../../../../packages/forms/src/validators.ts","webpack:///../../../../packages/forms/src/directives/control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/checkbox_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/default_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/normalize_validator.ts","webpack:///../../../../packages/forms/src/directives/number_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/ng_control.ts","webpack:///../../../../packages/forms/src/directives/radio_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/range_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/select_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/shared.ts","webpack:///../../../../packages/forms/src/directives/abstract_form_group_directive.ts","webpack:///../../../../packages/forms/src/directives/ng_control_status.ts","webpack:///../../../../packages/forms/src/model.ts","webpack:///../../../../packages/forms/src/directives/ng_form.ts","webpack:///../../../../packages/forms/src/directives/error_examples.ts","webpack:///../../../../packages/forms/src/directives/template_driven_errors.ts","webpack:///../../../../packages/forms/src/directives/ng_model_group.ts","webpack:///../../../../packages/forms/src/directives/ng_model.ts","webpack:///../../../../packages/forms/src/directives/reactive_errors.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_control_directive.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_group_name.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_control_name.ts","webpack:///../../../../packages/forms/src/directives/validators.ts","webpack:///../../../../packages/forms/src/form_builder.ts","webpack:///../../../../packages/forms/src/version.ts","webpack:///../../../../packages/forms/src/directives/ng_no_validate_directive.ts","webpack:///../../../../packages/forms/src/directives.ts","webpack:///../../../../packages/forms/src/form_providers.ts","webpack:///../../../../packages/forms/src/forms.ts","webpack:///../../../../packages/forms/public_api.ts","webpack:///../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts","webpack:///../../../../packages/platform-browser-dynamic/src/platform_providers.ts","webpack:///../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts","webpack:///../../../../packages/platform-browser-dynamic/src/private_export.ts","webpack:///../../../../packages/platform-browser-dynamic/src/version.ts","webpack:///../../../../packages/platform-browser-dynamic/src/platform-browser-dynamic.ts","webpack:///../../../../packages/platform-browser-dynamic/index.ts","webpack:///../src/BehaviorSubject.ts","webpack:///../src/InnerSubscriber.ts","webpack:///../src/Notification.ts","webpack:///../src/SubjectSubscription.ts","webpack:///../../../src/add/operator/map.ts","webpack:///../../src/observable/ArrayLikeObservable.ts","webpack:///../../src/observable/ConnectableObservable.ts","webpack:///../../src/observable/ForkJoinObservable.ts","webpack:///../../src/observable/FromObservable.ts","webpack:///../../src/observable/IteratorObservable.ts","webpack:///../../src/observable/forkJoin.ts","webpack:///../../src/observable/from.ts","webpack:///../../src/observable/merge.ts","webpack:///../../src/observable/of.ts","webpack:///../../src/operator/catch.ts","webpack:///../../src/operator/concatAll.ts","webpack:///../../src/operator/concatMap.ts","webpack:///../../src/operator/every.ts","webpack:///../../src/operator/filter.ts","webpack:///../../src/operator/first.ts","webpack:///../../src/operator/last.ts","webpack:///../../src/operator/mergeAll.ts","webpack:///../../src/operator/mergeMap.ts","webpack:///../../src/operator/reduce.ts","webpack:///../../src/operator/share.ts","webpack:///../../src/operators/catchError.ts","webpack:///../../src/operators/concatAll.ts","webpack:///../../src/operators/concatMap.ts","webpack:///../../src/operators/defaultIfEmpty.ts","webpack:///../../src/operators/every.ts","webpack:///../../src/operators/filter.ts","webpack:///../../src/operators/first.ts","webpack:///../../src/operators/last.ts","webpack:///../../src/operators/map.ts","webpack:///../../src/operators/multicast.ts","webpack:///../../src/operators/observeOn.ts","webpack:///../../src/operators/reduce.ts","webpack:///../../src/operators/scan.ts","webpack:///../../src/operators/share.ts","webpack:///../../src/operators/takeLast.ts","webpack:///../../src/util/ArgumentOutOfRangeError.ts","webpack:///../../src/util/UnsubscriptionError.ts","webpack:///../../src/util/identity.ts","webpack:///../../src/util/noop.ts","webpack:///../../src/util/toSubscriber.ts","webpack:///../../src/util/tryCatch.ts"],"names":["ResolvedReflectiveFactory","_createProviderInstance","renderNode","global","window","ArrayBuffer","stringify","chars.$EOF","chars.isDigit","chars.$PERIOD","chars.$RPAREN","chars.$RBRACE","chars.$RBRACKET","chars.$COLON","chars.$SEMICOLON","chars.$SQ","chars.$DQ","chars.$PLUS","chars.$STAR","chars.$PERCENT","chars.$GT","chars.$BANG","chars.$EQ","chars.$BAR","chars.$a","chars.$_","chars.isAsciiLetter","chars.$$","chars.$e","chars.$n","chars.$f","chars.$FF","chars.$r","chars.$CR","chars.$t","chars.$TAB","chars.$v","chars.$LF","Attribute","TokenType","Token","chars.$LT","chars.$AMPERSAND","chars.$HASH","chars.$COMMA","chars.isWhitespace","chars.$z","chars.$A","chars.$0","chars.$9","chars.isAsciiHexDigit","Parser","lex.tokenize","lex.TokenType","html.Comment","html.Attribute","ExpressionParser","html.visitAll","i18n.Message","i18n.TagPlaceholder","i18n.IcuPlaceholder","i18n.Text","html.ExpansionCase","html.Expansion","_Visitor","Text","xml.CR","xml.Tag","xml.Declaration","xml.Text","ml.visitAll","i18n.Icu","_VERSION","_XMLNS","_DEFAULT_SOURCE_LANG","_PLACEHOLDER_TAG","_SOURCE_TAG","_TARGET_TAG","_UNIT_TAG","xml.serialize","_WriteVisitor","XmlToI18n","i18n.Placeholder","i18n.Container","xml.Doctype","digest","html.Element","style","Console","html.Text","cpl.hostViewClassName","isPromise","cpl.CompileDirectiveMetadata","cpl.CompileSummaryKind","cpl.CompilePipeMetadata","Type","AstTransformer","RecursiveAstVisitor","o.literalArr","o.LiteralMapExpr","o.Expression","o.FnParam","o.DYNAMIC_TYPE","o.literal","o.variable","o.importExpr","o.importType","o.expressionType","VERSION","CATCH_ERROR_VAR","CATCH_STACK_VAR","o.BuiltinVar","o.BinaryOperator","o.StmtModifier","o.BuiltinTypeName","o.BuiltinMethod","o.INFERRED_TYPE","o.ArrayType","o.literalMap","o.not","o.assertNotNull","o.ReadVarExpr","CLASS_ATTR","o.LiteralMapEntry","o.NULL_EXPR","o.findReadVarNames","elementEventFullName","o.CommaExpr","LOG_VAR","o.applySourceSpanToExpressionIfNeeded","importExpr","sourceUrl","fn","i18n.CloneVisitor","Examples","resolvedPromise"],"mappings":"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AkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,cAAc;;AAEnE;AACA;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;;ACJA,uCAA2B,CAAc,CAAC;AAG1C;;;;GAIG;AACH;IAA2C,mCAAa;IAAxD;QAA2C,8BAAa;IAcxD,CAAC;IAbC,oCAAU,GAAV,UAAW,UAAa,EAAE,UAAa,EAC5B,UAAkB,EAAE,UAAkB,EACtC,QAA+B;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAED,qCAAW,GAAX,UAAY,KAAU,EAAE,QAA+B;QACrD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,wCAAc,GAAd,UAAe,QAA+B;QAC5C,IAAI,CAAC,WAAW,CAAC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","file":"vendor.bundle.js","sourcesContent":["import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { OperatorFunction } from './interfaces';\nimport { pipeFromArray } from './util/pipe';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  /** @deprecated internal use only */ public source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n   * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n   * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n   * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n   *\n   * @example <caption>Subscribe with an Observer</caption>\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() { // We actually could just remove this method,\n   *   },        // since we do not really care about errors right now.\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   * .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Subscribe with functions</caption>\n   * let sum = 0;\n   *\n   * Rx.Observable.of(1, 2, 3)\n   * .subscribe(\n   *   function(value) {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   function() {\n   *     console.log('Sum equals: ' + sum);\n   *   }\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   *\n   *\n   * @example <caption>Cancel a subscription</caption>\n   * const subscription = Rx.Observable.interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => console.log('completed!') // Will not be called, even\n   * );                                // when cancelling subscription\n   *\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   *\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a RefernceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R>\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * @example\n   *\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * Rx.Observable.interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   */\n  pipe<R>(...operations: OperatorFunction<T, R>[]): Observable<R> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(PromiseCtor?: PromiseConstructorLike) {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/Observable.ts","\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/injection_token.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\n\nimport {} from 'zone.js';\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/util.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {global, stringify} from '../util';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: Function | any[] | undefined, key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = /** @type {?} */(( fnOrArray as any[]));\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    chainFn?: (fn: Function) => void): (...args: any[]) => (cls: any) => any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const /** @type {?} */ values = props(...args);\n      for (const /** @type {?} */ propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: (any[] | null)[] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || []; /** @type {?} */((\n      parameters[index])).push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/util/decorators.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n * \n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n * \n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n * \n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n * \n * \\@NgModule({ \n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n * \n * \\@experimental\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 DSL\n   *\n   * ```\n   * var MyComponent = ng\n   *   .Component({...})\n   *   .Class({\n   *     constructor: [new ng.Attribute('title'), function(title) {\n   *       ...\n   *     }]\n   *   })\n   * ```\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n/**\n * Attribute decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n/**\n * ContentChildren decorator and metadata.\n * \n *  \\@stable\n *  \\@Annotation\n */\nexport const ContentChildren: ContentChildrenDecorator =\n    <ContentChildrenDecorator>makePropDecorator(\n        'ContentChildren',\n        (selector?: any, data: any = {}) =>\n            ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n        Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n/**\n * ContentChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@link ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n/**\n * ViewChildren decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n/**\n * ViewChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/metadata/di.ts","\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/constants.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n\n\n/**\n * Type of the Directive decorator / constructor function.\n *\n * @stable\n */\nexport interface DirectiveDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @description\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template. Can be\n   * given a single name or a comma-delimited list of names.\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the {@link Directive} decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   *\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n   * })\n   * class IntervalDir {\n   *   everySecond = new EventEmitter();\n   *   five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * ## Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/DlA5KU?p=preview))\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   *\n   * ## Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/gNg0ED?p=preview))\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   * ## Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * ### Example\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * ### Example\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   */\n  queries?: {[key: string]: any};\n}\n/**\n * Directive decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Directive: DirectiveDecorator =\n    <DirectiveDecorator>makeDecorator('Directive', (dir: Directive = {}) => dir);\n\n/**\n * Type of the Component decorator / constructor function.\n *\n * @stable\n */\nexport interface ComponentDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular component and collects component configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @description\n   * Component decorator allows you to mark a class as an Angular component and provide additional\n   * metadata that determines how the component should be processed, instantiated and used at\n   * runtime.\n   *\n   * Components are the most basic building block of an UI in an Angular application.\n   * An Angular application is a tree of Angular components.\n   * Angular components are a subset of directives. Unlike directives, components always have\n   * a template and only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be usable\n   * by another component or application. To specify that a component is a member of an NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Component decorator,\n   * components can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **animations** - list of animations of this component\n   * * **changeDetection** - change detection strategy used by this component\n   * * **encapsulation** - style encapsulation strategy used by this component\n   * * **entryComponents** - list of components that are dynamically inserted into the view of this\n   *   component\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   *   attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **interpolation** - custom interpolation markers used in this component's template\n   * * **moduleId** - ES/CommonJS module id of the file in which this component is defined\n   * * **outputs** - list of class property names that expose output events that others can\n   *   subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   * * **styleUrls** - list of urls to stylesheets to be applied to this component's view\n   * * **styles** - inline-defined styles to be applied to this component's view\n   * * **template** - inline-defined template for the view\n   * * **templateUrl** - url to an external file containing a template for the view\n   * * **viewProviders** - list of providers available to this component and its view children\n   *\n   * ### Example\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the {@link Component} decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Type of the Component metadata.\n *\n * @stable\n */\nexport interface Component extends Directive {\n  /**\n   * Defines the used change detection strategy.\n   *\n   * When a component is instantiated, Angular creates a change detector, which is responsible for\n   * propagating the component's bindings.\n   *\n   * The `changeDetection` property defines, whether the change detection will be checked every time\n   * or only when the component tells it to do so.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module id of the module that contains the component.\n   * Needed to be able to resolve relative urls for templates and styles.\n   * In CommonJS, this can always be set to `module.id`, similarly SystemJS exposes `__moduleName`\n   * variable within each module.\n   *\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'someDir',\n   *   moduleId: module.id\n   * })\n   * class SomeDir {\n   * }\n   *\n   * ```\n   */\n  moduleId?: string;\n\n  /**\n   * Specifies a template URL for an Angular component.\n   *\n   *Only one of `templateUrl` or `template` can be defined per View.\n   */\n  templateUrl?: string;\n\n  /**\n   * Specifies an inline template for an Angular component.\n   *\n   * Only one of `templateUrl` or `template` can be defined per Component.\n   */\n  template?: string;\n\n  /**\n   * Specifies stylesheet URLs for an Angular component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * Specifies inline stylesheets for an Angular component.\n   */\n  styles?: string[];\n\n  /**\n   * Animations are defined on components via an animation-like DSL. This DSL approach to describing\n   * animations allows for a flexibility that both benefits developers and the framework.\n   *\n   * Animations work by listening on state changes that occur on an element within\n   * the template. When a state change occurs, Angular can then take advantage and animate the\n   * arc in between. This works similar to how CSS transitions work, however, by having a\n   * programmatic DSL, animations are not limited to environments that are DOM-specific.\n   * (Angular can also perform optimizations behind the scenes to make animations more performant.)\n   *\n   * For animations to be available for use, animation state changes are placed within\n   * {@link trigger animation triggers} which are housed inside of the `animations` annotation\n   * metadata. Within a trigger both {@link state state} and {@link transition transition} entries\n   * can be placed.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'animation-cmp',\n   *   templateUrl: 'animation-cmp.html',\n   *   animations: [\n   *     // this here is our animation trigger that\n   *     // will contain our state change animations.\n   *     trigger('myTriggerName', [\n   *       // the styles defined for the `on` and `off`\n   *       // states declared below are persisted on the\n   *       // element once the animation completes.\n   *       state('on', style({ opacity: 1 }),\n   *       state('off', style({ opacity: 0 }),\n   *\n   *       // this here is our animation that kicks off when\n   *       // this state change jump is true\n   *       transition('on => off', [\n   *         animate(\"1s\")\n   *       ])\n   *     ])\n   *   ]\n   * })\n   * ```\n   *\n   * As depicted in the code above, a group of related animation states are all contained within\n   * an animation `trigger` (the code example above called the trigger `myTriggerName`).\n   * When a trigger is created then it can be bound onto an element within the component's\n   * template via a property prefixed by an `@` symbol followed by trigger name and an expression\n   * that\n   * is used to determine the state value for that trigger.\n   *\n   * ```html\n   * <!-- animation-cmp.html -->\n   * <div @myTriggerName=\"expression\">...</div>\n   * ```\n   *\n   * For state changes to be executed, the `expression` value must change value from its existing\n   * value\n   * to something that we have set an animation to animate on (in the example above we are listening\n   * to a change of state between `on` and `off`). The `expression` value attached to the trigger\n   * must be something that can be evaluated with the template/component context.\n   *\n   * ### DSL Animation Functions\n   *\n   * Please visit each of the animation DSL functions listed below to gain a better understanding\n   * of how and why they are used for crafting animations in Angular:\n   *\n   * - {@link trigger trigger()}\n   * - {@link state state()}\n   * - {@link transition transition()}\n   * - {@link group group()}\n   * - {@link sequence sequence()}\n   * - {@link style style()}\n   * - {@link animate animate()}\n   * - {@link keyframes keyframes()}\n   */\n  animations?: any[];\n\n  /**\n   * Specifies how the template and the styles should be encapsulated:\n   * - {@link ViewEncapsulation#Native `ViewEncapsulation.Native`} to use shadow roots - only works\n   *   if natively available on the platform,\n   * - {@link ViewEncapsulation#Emulated `ViewEncapsulation.Emulated`} to use shimmed CSS that\n   *   emulates the native behavior,\n   * - {@link ViewEncapsulation#None `ViewEncapsulation.None`} to use global CSS without any\n   *   encapsulation.\n   *\n   * When no `encapsulation` is defined for the component, the default value from the\n   * {@link CompilerOptions} is used. The default is `ViewEncapsulation.Emulated`}. Provide a new\n   * `CompilerOptions` to override this value.\n   *\n   * If the encapsulation is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * nor `styleUrls` the encapsulation will automatically be switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (respectively `{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * Defines the components that should be compiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * If {@link Component#preserveWhitespaces Component.preserveWhitespaces} is set to `false`\n   * potentially superfluous whitespace characters (ones matching the `\\s` character class in\n   * JavaScript regular expressions) will be removed from a compiled template. This can greatly\n   * reduce AOT-generated code size as well as speed up view creation.\n   *\n   * Current implementation works according to the following rules:\n   * - all whitespaces at the beginning and the end of a template are removed (trimmed);\n   * - text nodes consisting of whitespaces only are removed (ex.:\n   *   `<button>Action 1</button>  <button>Action 2</button>` will be converted to\n   *   `<button>Action 1</button><button>Action 2</button>` (no whitespaces between buttons);\n   * - series of whitespaces in text nodes are replaced with one space (ex.:\n   *   `<span>\\n some text\\n</span>` will be converted to `<span> some text </span>`);\n   * - text nodes are left as-is inside HTML tags where whitespaces are significant (ex. `<pre>`,\n   *   `<textarea>`).\n   *\n   * Described transformations can (potentially) influence DOM nodes layout so the\n   * `preserveWhitespaces` option is `true` be default (no whitespace removal).\n   * In Angular 5 you need to opt-in for whitespace removal (but we might revisit the default\n   * setting in Angular 6 or later). If you want to change the default setting for all components\n   * in your application you can use the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * Even if you decide to opt-in for whitespace removal there are ways of preserving whitespaces\n   * in certain fragments of a template. You can either exclude entire DOM sub-tree by using the\n   * `ngPreserveWhitespaces` attribute, ex.:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * Alternatively you can force a space to be preserved in a text node by using the `&ngsp;`\n   * pseudo-entity. `&ngsp;` will be replaced with a space character by Angular's template\n   * compiler, ex.:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * ```\n   *\n   * will be compiled to the equivalent of:\n   *\n   * ```html\n   * <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * Please note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`. Ex.:\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * ```\n   *\n   * would be equivalent to:\n   *\n   * ```html\n   * <a>before</a> <a>after</a>\n   * ```\n   *\n   * The `&ngsp;` pseudo-entity is useful for forcing presence of\n   * one space (a text node having `&ngsp;` pseudo-entities will never be removed), but it is not\n   * meant to mark sequences of whitespace characters. The previously described\n   * `ngPreserveWhitespaces` attribute is more useful for preserving sequences of whitespace\n   * characters.\n   */\n  preserveWhitespaces?: boolean;\n}\n/**\n * Component decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Component: ComponentDecorator = <ComponentDecorator>makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive);\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @stable\n */\nexport interface PipeDecorator {\n  /**\n   * Declare reusable pipe function.\n   *\n   * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n   *\n   * When not specified, pipes default to being pure.\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the {@link Pipe} decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @stable\n */\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\n/**\n * Pipe decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Pipe: PipeDecorator =\n    <PipeDecorator>makeDecorator('Pipe', (p: Pipe) => ({pure: true, ...p}));\n\n\n/**\n * Type of the Input decorator / constructor function.\n *\n * @stable\n */\nexport interface InputDecorator {\n  /**\n   * Declares a data-bound input property.\n   *\n   * Angular automatically updates data-bound properties during change detection.\n   *\n   * `Input` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * The following example creates a component with two input properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   @Input() bankName: string;\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Input metadata.\n *\n * @stable\n */\nexport interface Input {\n  /**\n   * Name used when instantiating a component in the template.\n   */\n  bindingPropertyName?: string;\n}\n/**\n * Input decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Input: InputDecorator =\n    makePropDecorator('Input', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @stable\n */\nexport interface OutputDecorator {\n  /**\n   * Declares an event-bound output property.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * `Output` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   * })\n   * class IntervalDir {\n   *   @Output() everySecond = new EventEmitter();\n   *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @stable\n */\nexport interface Output { bindingPropertyName?: string; }\n/**\n * Output decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Output: OutputDecorator =\n    makePropDecorator('Output', (bindingPropertyName?: string) => ({bindingPropertyName}));\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @stable\n */\nexport interface HostBindingDecorator {\n  /**\n   * Declares a host property binding.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * `HostBinding` takes an optional parameter that specifies the property\n   * name of the host element that will be updated. When not provided,\n   * the class property name is used.\n   *\n   * ### Example\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * @stable\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @stable\n */\nexport interface HostBinding { hostPropertyName?: string; }\n/**\n * HostBinding decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @stable\n */\nexport interface HostListenerDecorator {\n  /**\n   * Declares a host listener.\n   *\n   * Angular will invoke the decorated method when the host element emits the specified event.\n   *\n   * If the decorated method returns `false`, then `preventDefault` is applied on the DOM event.\n   *\n   * ### Example\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({selector: 'button[counting]'})\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   @HostListener('click', ['$event.target'])\n   *   onClick(btn) {\n   *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: '<button counting>Increment</button>',\n   * })\n   * class App {}\n   * ```\n   * @stable\n   * @Annotation\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @stable\n */\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\n/**\n * HostListener decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/metadata/directives.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * A wrapper around a module that also includes the providers.\n *\n * @stable\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n\n/**\n * Interface for schema definitions in @NgModules.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n * \n * \\@stable\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n * \n * \\@experimental\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @stable\n */\nexport interface NgModuleDecorator {\n  /**\n   * Defines an NgModule.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @stable\n */\nexport interface NgModule {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Specifies a list of directives/pipes that belong to this module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of modules whose exported directives/pipes\n   * should be available to templates in this module.\n   * This can also contain {@link ModuleWithProviders}.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * Specifies a list of directives/pipes/modules that can be used within the template\n   * of any component that is part of an Angular module\n   * that imports this Angular module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of components that should be compiled when this module is defined.\n   * For each component listed here, Angular will create a {@link ComponentFactory}\n   * and store it in the {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * Defines the components that should be bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * will automatically be added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * Elements and properties that are not Angular components nor directives have to be declared in\n   * the schema.\n   *\n   * Available schemas:\n   * - `NO_ERRORS_SCHEMA`: any elements and properties are allowed,\n   * - `CUSTOM_ELEMENTS_SCHEMA`: any custom elements (tag name has \"-\") with any properties are\n   *   allowed.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA` we're trusting that\n   * allowed elements (and its properties) securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * An opaque ID for this module, e.g. a name or a path. Used to identify modules in\n   * `getModuleFactory`. If left `undefined`, the `NgModule` will not be registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n/**\n * NgModule decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const NgModule: NgModuleDecorator =\n    <NgModuleDecorator>makeDecorator('NgModule', (ngModule: NgModule) => ngModule);\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/metadata/ng_module.ts","\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n/**\n * {\\@link Component#templateUrl}\n */\ntemplateUrl: string|undefined;\n/**\n * {\\@link Component#template}\n */\ntemplate: string|undefined;\n/**\n * {\\@link Component#stylesUrl}\n */\nstyleUrls: string[]|undefined;\n/**\n * {\\@link Component#styles}\n */\nstyles: string[]|undefined;\n/**\n * {\\@link Component#encapsulation}\n */\nencapsulation: ViewEncapsulation|undefined;\n/**\n * {\\@link Component#animation}\n */\nanimations: any[]|undefined;\n/**\n * {\\@link Component#interpolation}\n */\ninterpolation: [string, string]|undefined;\n/**\n * @param {?=} opts\n */\nconstructor(opts: {\n    templateUrl?: string,\n    template?: string,\n    encapsulation?: ViewEncapsulation,\n    styles?: string[],\n    styleUrls?: string[],\n    animations?: any[],\n    interpolation?: [string, string]\n  } = {}) {\n    this.templateUrl = opts.templateUrl;\n    this.template = opts.template;\n    this.styleUrls = opts.styleUrls;\n    this.styles = opts.styles;\n    this.encapsulation = opts.encapsulation;\n    this.animations = opts.animations;\n    this.interpolation = opts.interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component#templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component#template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component#stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component#styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component#encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component#animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component#interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/metadata/view.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This indirection is needed to free up Component, etc symbols in the public API\n * to be used by the decorator versions of these annotations.\n */\n\n\nimport {Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren} from './metadata/di';\nimport {Component, Directive, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nimport {ModuleWithProviders, NgModule, SchemaMetadata} from './metadata/ng_module';\nimport {ViewEncapsulation} from './metadata/view';\n\nexport {ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildDecorator, ContentChildren, ContentChildrenDecorator, Query, ViewChild, ViewChildDecorator, ViewChildren, ViewChildrenDecorator} from './metadata/di';\nexport {Component, ComponentDecorator, Directive, DirectiveDecorator, HostBinding, HostListener, Input, Output, Pipe} from './metadata/directives';\nexport {AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, DoCheck, OnChanges, OnDestroy, OnInit} from './metadata/lifecycle_hooks';\nexport {CUSTOM_ELEMENTS_SCHEMA, ModuleWithProviders, NO_ERRORS_SCHEMA, NgModule, SchemaMetadata} from './metadata/ng_module';\nexport {ViewEncapsulation} from './metadata/view';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/metadata.ts","\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectDecorator {\n  /**\n   * @whatItDoes A parameter decorator that specifies a dependency.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Inject(\"MyEngine\") public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, {@link Injector} will use the type annotation of the\n   * parameter.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   *\n   * @stable\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @stable\n */\nexport interface Inject { token: any; }\n/**\n * Inject decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @stable\n */\nexport interface OptionalDecorator {\n  /**\n   * @whatItDoes A parameter metadata that marks a dependency as optional.\n   * {@link Injector} provides `null` if the dependency is not found.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Optional() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @stable\n */\nexport interface Optional {}\n/**\n * Optional decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @stable\n */\nexport interface InjectableDecorator {\n  /**\n   * @whatItDoes A marker metadata that marks a class as available to {@link Injector} for creation.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {}\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * {@link Injector} will throw an error when trying to instantiate a class that\n   * does not have `@Injectable` marker, as shown in the example below.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @stable\n */\nexport interface Injectable {}\n/**\n * Injectable decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Injectable: InjectableDecorator = <InjectableDecorator>makeDecorator('Injectable');\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @stable\n */\nexport interface SelfDecorator {\n  /**\n   * @whatItDoes Specifies that an {@link Injector} should retrieve a dependency only from itself.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Self() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @stable\n */\nexport interface Self {}\n/**\n * Self decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @stable\n */\nexport interface SkipSelfDecorator {\n  /**\n   * @whatItDoes Specifies that the dependency resolution should start from the parent injector.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@SkipSelf() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @stable\n */\nexport interface SkipSelf {}\n/**\n * SkipSelf decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @stable\n */\nexport interface HostDecorator {\n  /**\n   * @whatItDoes Specifies that an injector should retrieve a dependency from any injector until\n   * reaching the host element of the current component.\n   * @howToUse\n   * ```\n   * @Injectable()\n   * class Car {\n   *   constructor(@Host() public engine:Engine) {}\n   * }\n   * ```\n   *\n   * @description\n   * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   *\n   * @stable\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @stable\n */\nexport interface Host {}\n/**\n * Host decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/metadata.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/forward_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectionToken} from './injection_token';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws an error if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T) {}\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/injector.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DebugContext} from './view';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * @param {?=} deprecatedParameter\n */\nconstructor(\n      /**\n       * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n       * rethrow.\n       */\n      deprecatedParameter?: boolean) {}\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/error_handler.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ keys = [key];\n  const /** @type {?} */ errMsg = constructResolvingMessage(keys);\n  const /** @type {?} */ error = /** @type {?} */((\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError));\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const /** @type {?} */ first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/reflective_errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return /** @type {?} */(( this._allKeys.get(token)));\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/reflective_key.ts","\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n * \n * \\@description \n * \n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n * \n * \\@stable\n */\nexport const Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/type.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n    return null;\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/reflection/reflection_capabilities.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/reflection/reflector.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const reflector = new Reflector(new ReflectionCapabilities());\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/reflection/reflection.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf|null) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf|null = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/reflective_provider.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nparent() {}\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link ReflectiveInjector#resolve} and {\\@link ReflectiveInjector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]) {}\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]) {}\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider) {}\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider) {}\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\npublic _parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this._parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector|null { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let /** @type {?} */ inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n\nconst /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di/reflective_injector.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken, OpaqueToken} from './di/injection_token';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/di.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/util/lang.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate resolve: Function;\nprivate reject: Function;\nprivate initialized = false;\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(\nprivate appInits: (() => any)[]) {\n    this._donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\nrunInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const /** @type {?} */ asyncInitPromises: Promise<any>[] = [];\n\n    const /** @type {?} */ complete = () => {\n      this._done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n        const /** @type {?} */ initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype.resolve;\n/** @type {?} */\nApplicationInitStatus.prototype.reject;\n/** @type {?} */\nApplicationInitStatus.prototype.initialized;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n/** @type {?} */\nApplicationInitStatus.prototype.appInits;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/application_init.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n * \n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n * \n * `(componentRef: ComponentRef) => void`.\n * \n * \\@experimental\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/application_tokens.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/console.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, InjectionToken} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * \n * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n  preserveWhitespaces?: boolean,\n};\n/**\n * Token to provide CompilerOptions in the platform injector.\n * \n * \\@experimental\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options?: CompilerOptions[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/compiler.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nlocation() {}\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nhostView() {}\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nchangeDetectorRef() {}\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n/**\n * @abstract\n * @return {?}\n */\nselector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * selector for all <ng-content> elements in the component.\n * @abstract\n * @return {?}\n */\nngContentSelectors() {}\n/**\n * the inputs of the component.\n * @abstract\n * @return {?}\n */\ninputs() {}\n/**\n * the outputs of the component.\n * @abstract\n * @return {?}\n */\noutputs() {}\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/component_factory.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/component_factory_resolver.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\ncomponentFactoryResolver() {}\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgModuleFactory<T> {\n/**\n * @abstract\n * @return {?}\n */\nmoduleType() {}\n/**\n * @abstract\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/ng_module_factory.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/profile/wtf_impl.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n/**\n * Create trace scope.\n * \n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n * \n * Used to mark scope entry. The return value is used to leave the scope.\n * \n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n * \n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n * \n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n * \n * \\@experimental\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n/**\n * Used to mark end of Scope.\n * \n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n * \n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n * \n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/profile/profile.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of {\\@link EventEmitter}, which depending on `isAsync`,\n * delivers events synchronously or asynchronously.\n * \n * @param {?=} isAsync By default, events are delivered synchronously (default value: `false`).\n * Set to `true` for asynchronous event delivery.\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/event_emitter.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Import zero symbols from zone.js. This causes the zone ambient type to be\n// added to the type-checker, without emitting any runtime module load statement\n\nimport {} from 'zone.js';\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n */\nreadonly isStable: boolean = true;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n */\nreadonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n */\nreadonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n */\nreadonly onStable: EventEmitter<any> = new EventEmitter(false);\n/**\n * Notifies that an error has been delivered.\n */\nreadonly onError: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @param {?} fn\n * @return {?}\n */\nrun(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.run(fn); }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @param {?} fn\n * @return {?}\n */\nrunGuarded(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._inner.runGuarded(fn); }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n * work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular(fn: () => any): any { return ( /** @type {?} */(( /** @type {?} */((this as any)) as NgZonePrivate)))._outer.run(fn); }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype.hasPendingMacrotasks;\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @type {?}\n */\nNgZone.prototype.isStable;\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @type {?}\n */\nNgZone.prototype.onUnstable;\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @type {?}\n */\nNgZone.prototype.onMicrotaskEmpty;\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @type {?}\n */\nNgZone.prototype.onStable;\n/**\n * Notifies that an error has been delivered.\n * @type {?}\n */\nNgZone.prototype.onError;\n}\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/zone/ng_zone.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          ( /** @type {?} */((this._callbacks.pop())))(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/testability/testability.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: Provider[]) => PlatformRef) | null, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>) {}\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]) {}\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory);\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone?: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */((\n      ngZone)).runOutsideAngular(\n          () => /** @type {?} */(( ngZone)).onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */(( ngZone)), () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions);\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone?: NgZone): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\nprivate _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const /** @type {?} */ appRef = /** @type {?} */(( moduleRef.injector.get(ApplicationRef) as ApplicationRef));\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * Optionally, a component can be mounted onto a DOM element that does not match the\n * [componentType]'s selector.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(\n      componentFactory: ComponentFactory<C>|Type<C>,\n      rootSelectorOrNode?: string|any) {}\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\ntick() {}\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\ncomponentTypes() {}\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\ncomponents() {}\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nattachView(view: ViewRef) {}\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\ndetachView(view: ViewRef) {}\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nviewCount() {}\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nisStable() {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @template C\n * @param {?} componentOrFactory\n * @param {?=} rootSelectorOrNode\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = /** @type {?} */((\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/application_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/zone.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: any) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(parentElement: any, value: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: any, nodes: any[]) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: any, viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: any, viewAllNodes: any[]) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(renderElement: any, propertyName: string, propertyValue: any) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: any, attributeName: string, attributeValue: string) {}\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: any, className: string, isAdd: boolean) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: any, methodName: string, args?: any[]) {}\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: any, text: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]) {}\n}\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty} or {\\@link\n * Renderer#setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nrenderComponent(componentType: RenderComponentType) {}\n}\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2|null) {}\n/**\n * @abstract\n * @return {?}\n */\nbegin?() {}\n/**\n * @abstract\n * @return {?}\n */\nend?() {}\n/**\n * @abstract\n * @return {?}\n */\nwhenRenderingDone?() {}\n}\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\ndata() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string) {}\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n */\ndestroyNode: ((node: any) => void)|null;\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any) {}\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string|null) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void) {}\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/render/api.ts","\nexport class ElementRef {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n */\npublic nativeElement: any;\n/**\n * @param {?} nativeElement\n */\nconstructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\nfunction ElementRef_tsickle_Closure_declarations() {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n * @type {?}\n */\nElementRef.prototype.nativeElement;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/element_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleFactoryLoader {\n/**\n * @abstract\n * @param {?} path\n * @return {?}\n */\nload(path: string) {}\n}\n\nlet /** @type {?} */ moduleFactories = new Map<string, NgModuleFactory<any>>();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const /** @type {?} */ existing = moduleFactories.get(id);\n  if (existing) {\n    throw new Error(`Duplicate module registered for ${id\n                    } - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n  }\n  moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\nexport function clearModulesForTest() {\n  moduleFactories = new Map<string, NgModuleFactory<any>>();\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nexport function getModuleFactory(id: string): NgModuleFactory<any> {\n  const /** @type {?} */ factory = moduleFactories.get(id);\n  if (!factory) throw new Error(`No module with ID ${id} loaded`);\n  return factory;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/ng_module_factory_loader.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @template U\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @template U\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n/**\n * internal\n * @return {?}\n */\ndestroy(): void {\n    this._emitter.complete();\n    this._emitter.unsubscribe();\n  }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/query_list.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathPrefix: string;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n */\nfactoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/system_js_ng_module_factory_loader.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n/**\n * @abstract\n * @return {?}\n */\nelementRef() {}\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: C) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/template_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nelement() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\nparentInjector() {}\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nget(index: number) {}\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nlength() {}\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number) {}\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModule\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>) {}\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number) {}\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef, currentIndex: number) {}\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef) {}\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number) {}\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/view_container_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nrootNodes() {}\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/linker/view_ref.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function) {}\n}\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement|null;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode|null,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext.injector; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext.component; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext.context; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} { return this._debugContext.references; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] { return this._debugContext.providerTokens; }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string | null};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string | null};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T): boolean; }\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/debug/debug_node.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/change_detection_util.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template V\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = 0;\nprivate _collection: NgIterable<V>|null = null;\nprivate _linkedRecords: _DuplicateMap<V>|null = null;\nprivate _unlinkedRecords: _DuplicateMap<V>|null = null;\nprivate _previousItHead: IterableChangeRecord_<V>|null = null;\nprivate _itHead: IterableChangeRecord_<V>|null = null;\nprivate _itTail: IterableChangeRecord_<V>|null = null;\nprivate _additionsHead: IterableChangeRecord_<V>|null = null;\nprivate _additionsTail: IterableChangeRecord_<V>|null = null;\nprivate _movesHead: IterableChangeRecord_<V>|null = null;\nprivate _movesTail: IterableChangeRecord_<V>|null = null;\nprivate _removalsHead: IterableChangeRecord_<V>|null = null;\nprivate _removalsTail: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesHead: IterableChangeRecord_<V>|null = null;\nprivate _identityChangesTail: IterableChangeRecord_<V>|null = null;\nprivate _trackByFn: TrackByFunction<V>;\n/**\n * @param {?=} trackByFn\n */\nconstructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt && /** @type {?} */((\n                  nextIt.currentIndex)) <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */((\n          nextIt)) :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = /** @type {?} */(( nextIt))._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = /** @type {?} */(( currentIndex)) - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, /** @type {?} */(( record._prev)), index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V>|null = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V>|null = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V>|null = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else { /** @type {?} */((\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail))._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let /** @type {?} */ record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */(( record.currentIndex))) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the second `a`.\n * @param {?} trackById\n * @param {?} atOrAfterIndex\n * @return {?}\n */\nget(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = /** @type {?} */(( this.map.get(key)));\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/differs/default_iterable_differ.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template K, V\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records = new Map<K, KeyValueChangeRecord_<K, V>>();\nprivate _mapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?=} map\n * @return {?}\n */\ndiff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * Check the current state of the map vs the previous.\n * The algorithm is optimised for when the keys do no change.\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let /** @type {?} */ insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const /** @type {?} */ record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n/**\n * Inserts a record before `before` or append at the end of the list when `before` is null.\n * \n * Notes:\n * - This method appends at `this._appendAfter`,\n * - This method updates `this._appendAfter`,\n * - The return value is the new value for the insertion pointer.\n * @param {?} before\n * @param {?} record\n * @return {?}\n */\nprivate _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const /** @type {?} */ prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const /** @type {?} */ record = /** @type {?} */(( this._records.get(key)));\n      this._maybeAddToChanges(record, value);\n      const /** @type {?} */ prev = record._prev;\n      const /** @type {?} */ next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const /** @type {?} */ record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else { /** @type {?} */((\n      this._additionsTail))._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else { /** @type {?} */((\n      this._changesTail))._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * \\@internal\n * @template K, V\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._appendAfter;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_prev: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n/**\n * A type describing supported iterable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): Provider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/differs/iterable_differs.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @template S\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @template S\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): Provider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/differs/keyvalue_differs.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection/change_detection.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\nexport {ChangeDetectionStrategy, ChangeDetectorRef, CollectionChangeRecord, DefaultIterableDiffer, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers, NgIterable, PipeTransform, SimpleChange, SimpleChanges, TrackByFn, TrackByFunction, WrappedValue} from './change_detection/change_detection';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/change_detection.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {TestabilityRegistry} from './testability/testability';\n/**\n * @return {?}\n */\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: Provider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  PlatformRef_,\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  TestabilityRegistry,\n  Console,\n];\n/**\n * This platform has to be included in any other platform\n * \n * \\@experimental\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/platform_core_providers.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/i18n/tokens.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/application_module.ts","\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: {}|string|null) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/security.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\nimport {Type} from '../type';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges\n}\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n/**\n * @abstract\n * @return {?}\n */\nview() {}\n/**\n * @abstract\n * @return {?}\n */\nnodeIndex() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentRenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {}\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  clearProviderOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  clearProviderOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/types.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */ isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), oldValue, value,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let /** @type {?} */ currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  const /** @type {?} */ startView =\n      nodeDef.flags & NodeFlags.ComponentView ? asElementData(view, nodeIndex).componentView : view;\n  markParentViewsForCheck(startView);\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, /** @type {?} */(( view.parentNodeDef)).nodeIndex);\n  }\n  return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return /** @type {?} */(( view.parentNodeDef)).parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !( /** @type {?} */((view.parentNodeDef)).flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[]): DepDef[] {\n  return deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        ( /** @type {?} */((renderParent.element)).componentRendererType && /** @type {?} */(( /** @type {?} */((\n         renderParent.element)).componentRendererType)).encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, /** @type {?} */(( def.renderParent)).nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let /** @type {?} */ value = /** @type {?} */(( /** @type {?} */(( DEFINITION_CACHE.get(factory)))as D));\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */(( view.def.lastRenderRootNode))));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let /** @type {?} */ compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = /** @type {?} */(( compView)).parent;\n  const /** @type {?} */ hostElDef = viewParentEl( /** @type {?} */((compView)));\n  const /** @type {?} */ startIndex = /** @type {?} */(( hostElDef)).nodeIndex + 1;\n  const /** @type {?} */ endIndex = /** @type {?} */(( hostElDef)).nodeIndex + /** @type {?} */(( hostElDef)).childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = /** @type {?} */(( hostView)).def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode( /** @type {?} */((hostView)), nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (! /** @type {?} */((hostView)).parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, /** @type {?} */(( nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && ! /** @type {?} */((nodeDef.element)).name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect: /** @type {?} */((\n      target)).push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = /** @type {?} */(( name.match(NS_PREFIX_RE)));\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let /** @type {?} */ flags = 0;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/util.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string = /** @type {?} */(( null));\n  let /** @type {?} */ name: string = /** @type {?} */(( null));\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */ securityContext: SecurityContext = /** @type {?} */(( undefined));\n    let /** @type {?} */ suffix: string = /** @type {?} */(( undefined));\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = /** @type {?} */(( <string>suffixOrSecurityContext));\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>suffixOrSecurityContext));\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = /** @type {?} */(( def.element));\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure))); /** @type {?} */((\n    view.disposables))[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow, to keep in sync with directive events.\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = /** @type {?} */(( binding.name));\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */(( value as{} | string)));\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/element.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {NgModuleRef} from '../linker/ng_module_factory';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst /** @type {?} */ UNDEFINED_VALUE = new Object();\n\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\nconst /** @type {?} */ NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const /** @type {?} */ providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers\n  };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nexport function initNgModule(data: NgModuleData) {\n  const /** @type {?} */ def = data._def;\n  const /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      providers[i] = _createProviderInstance(data, provDef);\n    }\n  }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  if (depDef.flags & DepFlags.SkipSelf) {\n    return data._parent.get(depDef.token, notFoundValue);\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n  switch (tokenKey) {\n    case InjectorRefTokenKey:\n    case NgModuleRefTokenKey:\n      return data;\n  }\n  const /** @type {?} */ providerDef = data._def.providersByKey[tokenKey];\n  if (providerDef) {\n    let /** @type {?} */ providerInstance = data._providers[providerDef.index];\n    if (providerInstance === undefined) {\n      providerInstance = data._providers[providerDef.index] =\n          _createProviderInstance(data, providerDef);\n    }\n    return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n  }\n  return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let /** @type {?} */ injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const /** @type {?} */ def = ngModule._def;\n  for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n    const /** @type {?} */ provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const /** @type {?} */ instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        instance.ngOnDestroy();\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/ng_module.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, /** @type {?} */(( viewIndex)), view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = /** @type {?} */(( viewIndex)) > 0 ? embeddedViews[ /** @type {?} */((viewIndex)) - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even accross component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate( /** @type {?} */((view.parent)).def, /** @type {?} */(( view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let /** @type {?} */ parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */(( prevView.def.lastRenderRootNode))) :\n                                    elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/view_attach.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string}|null,\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    const /** @type {?} */ inputs = /** @type {?} */(( this._inputs));\n    for (let /** @type {?} */ propName in inputs) {\n      const /** @type {?} */ templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = /** @type {?} */(( /** @type {?} */(( viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; }\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; }\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; }\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = /** @type {?} */(( view.parent));\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = /** @type {?} */(( detachEmbeddedView(this._data, i)));\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef|null {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; }\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef|null {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef|null;\nprivate _appRef: ApplicationRef|null;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.Attached; }\n/**\n * @return {?}\n */\ndetectChanges(): void {\n    const /** @type {?} */ fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    Services.checkAndUpdateView(this._view);\n    if (fs.end) {\n      fs.end();\n    }\n  }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.Attached; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, /** @type {?} */(( /** @type {?} */(( this._def.element)).template)), context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    return /** @type {?} */(( def.element)).template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) { /** @type {?} */((\n      this.delegate.destroyNode))(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\npublic _providers: any[];\n/**\n * @param {?} _moduleType\n * @param {?} _parent\n * @param {?} _bootstrapComponents\n * @param {?} _def\n */\nconstructor(\nprivate _moduleType: Type<any>,\npublic _parent: Injector,\npublic _bootstrapComponents: Type<any>[],\npublic _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: DepFlags.None}, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget instance() { return this.get(this._moduleType); }\n/**\n * @return {?}\n */\nget componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n\nfunction NgModuleRef__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleRef_.prototype._destroyListeners;\n/** @type {?} */\nNgModuleRef_.prototype._destroyed;\n/** @type {?} */\nNgModuleRef_.prototype._providers;\n/** @type {?} */\nNgModuleRef_.prototype._moduleType;\n/** @type {?} */\nNgModuleRef_.prototype._parent;\n/** @type {?} */\nNgModuleRef_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleRef_.prototype._def;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/refs.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs = splitDepsDsl(deps);\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass( /** @type {?} */((\n      compView.parent)), /** @type {?} */(( viewParentEl(compView))), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */((\n      def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance = createClass(\n      view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( def.provider)).value, /** @type {?} */(( def.provider)).deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[ /** @type {?} */((output.propName))].subscribe(\n          eventHandlerClosure(view, /** @type {?} */(( def.parent)).nodeIndex, output.eventName)); /** @type {?} */((\n      view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => {\n    try {\n      return dispatchEvent(view, index, eventName, event);\n    } catch ( /** @type {?} */e) {\n      // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n      view.root.errorHandler.handleError(e);\n    }\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges = /** @type {?} */(( undefined));\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).value, /** @type {?} */(( providerDef)).deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, /** @type {?} */(( def.parent)), allowPrivateServices, /** @type {?} */(( providerDef)).deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return /** @type {?} */(( providerDef)).value;\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && /** @type {?} */(( elDef.element)).componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = /** @type {?} */(( elDef.parent));\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if ( /** @type {?} */((elDef.element)).template) {\n            return asElementData(view, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef = /** @type {?} */((\n              (allowPrivateServices ? /** @type {?} */(( elDef.element)).allProviders : /** @type {?} */((\n                                      elDef.element)).publicProviders)))[tokenKey];\n          if (providerDef) {\n            let /** @type {?} */ providerData = asProviderData(view, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(view, providerDef)};\n              view.nodes[providerDef.nodeIndex] = /** @type {?} */(( providerData as any));\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = /** @type {?} */(( viewParentEl(view)));\n    view = /** @type {?} */(( view.parent));\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( def.parent)).nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = /** @type {?} */(( binding.name));\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[ /** @type {?} */((binding.nonMinifiedName))] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const /** @type {?} */ provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/provider.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = /** @type {?} */(( view.parentNodeDef));\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          ( /** @type {?} */((nodeDef.query)).filterId & queryIds) === /** @type {?} */(( nodeDef.query)).filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[] = /** @type {?} */(( undefined));\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = /** @type {?} */(( /** @type {?} */(( nodeDef.parent)).parent));\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */(( nodeDef.query)),\n        []);\n    directiveInstance = asProviderData(view, /** @type {?} */(( nodeDef.parent)).nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */(( nodeDef.query)), []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = /** @type {?} */(( nodeDef.query)).bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && /** @type {?} */(( nodeDef.element)).template &&\n        ( /** @type {?} */(( /** @type {?} */((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const /** @type {?} */ elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = /** @type {?} */(( elementData.viewContainer))._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/query.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = /** @type {?} */(( def.ngContent)).index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/ng_content.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const /** @type {?} */ keys = Object.keys(propToIndex);\n  const /** @type {?} */ nbKeys = keys.length;\n  const /** @type {?} */ propertyNames = new Array(nbKeys);\n  for (let /** @type {?} */ i = 0; i < nbKeys; i++) {\n    const /** @type {?} */ key = keys[i];\n    const /** @type {?} */ index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[ /** @type {?} */((bindings[0].name))] = v0;\n        if (bindLen > 1) value[ /** @type {?} */((bindings[1].name))] = v1;\n        if (bindLen > 2) value[ /** @type {?} */((bindings[2].name))] = v2;\n        if (bindLen > 3) value[ /** @type {?} */((bindings[3].name))] = v3;\n        if (bindLen > 4) value[ /** @type {?} */((bindings[4].name))] = v4;\n        if (bindLen > 5) value[ /** @type {?} */((bindings[5].name))] = v5;\n        if (bindLen > 6) value[ /** @type {?} */((bindings[6].name))] = v6;\n        if (bindLen > 7) value[ /** @type {?} */((bindings[7].name))] = v7;\n        if (bindLen > 8) value[ /** @type {?} */((bindings[8].name))] = v8;\n        if (bindLen > 9) value[ /** @type {?} */((bindings[9].name))] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[ /** @type {?} */((bindings[i].name))] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/pure_expression.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let /** @type {?} */ i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText( /** @type {?} */((def.text)).prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = /** @type {?} */(( def.text)).prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = /** @type {?} */(( def.text)).prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/text.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef|null = null;\n  let /** @type {?} */ currentRenderParent: NodeDef|null = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef|null = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? /** @type {?} */(( currentParent.element)).publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true; /** @type {?} */(( /** @type {?} */((\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent)).element)).publicProviders =\n            Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders); /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders = /** @type {?} */(( /** @type {?} */(( currentParent)).element)).publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) { /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).publicProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true; /** @type {?} */(( /** @type {?} */((\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent)).element)).allProviders =\n              Object.create( /** @type {?} */(( /** @type {?} */((currentParent)).element)).publicProviders);\n        } /** @type {?} */(( /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).allProviders))[tokenKey( /** @type {?} */((node.provider)).token)] = node;\n      }\n      if (isComponent) { /** @type {?} */(( /** @type {?} */((\n        currentParent)).element)).componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const /** @type {?} */ newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) => /** @type {?} */(( /** @type {?} */((\n      nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && /** @type {?} */(( node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ rendererType = /** @type {?} */(( nodeDef.element)).componentRendererType;\n  let /** @type {?} */ compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, /** @type {?} */(( nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData( /** @type {?} */((view.parent)), /** @type {?} */(( /** @type {?} */(( hostDef)).parent)).nodeIndex).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData = /** @type {?} */(( undefined));\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveDefinition( /** @type {?} */(( /** @type {?} */((nodeDef.element)).componentView)));\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: /** @type {?} */(( nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n          nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n          nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, /** @type {?} */(( nodeDef.parent)).nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ i = 0; i < projectedViews.length; i++) {\n          const /** @type {?} */ projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${ /** @type {?} */((nodeDef.query)).id} not dirty`, `Query ${ /** @type {?} */((nodeDef.query)).id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) { /** @type {?} */((\n      view.renderer.destroyNode))(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) { /** @type {?} */((\n      view.renderer.destroyNode))(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckNoChangesProjectedViews = 2;\nViewAction.CheckAndUpdate = 3;\nViewAction.CheckAndUpdateProjectedViews = 4;\nViewAction.Destroy = 5;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = /** @type {?} */(( asElementData(view, i).viewContainer))._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/view.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\nimport {Type} from '../type';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, DepDef, ElementData, NgModuleDefinition, NgModuleProviderDef, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, splitDepsDsl, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.clearProviderOverrides = services.clearProviderOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    clearProviderOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    clearProviderOverrides: debugClearProviderOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null,\n      [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst /** @type {?} */ providerOverrides = new Map<any, ProviderOverride>();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n  providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  for (let /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const /** @type {?} */ elIndicesWithOverwrittenProviders: number[] = [];\n    let /** @type {?} */ lastElementDef: NodeDef|null = null;\n    for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has( /** @type {?} */((nodeDef.provider)).token)) {\n        elIndicesWithOverwrittenProviders.push( /** @type {?} */((lastElementDef)).nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n/**\n * @param {?} viewDef\n * @param {?} elIndex\n * @return {?}\n */\nfunction applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let /** @type {?} */ i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const /** @type {?} */ provider = /** @type {?} */(( nodeDef.provider));\n        const /** @type {?} */ override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = /** @type {?} */(( def.factory))(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n/**\n * @param {?} def\n * @return {?}\n */\nfunction calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let /** @type {?} */ hasOverrides = false;\n    let /** @type {?} */ hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const /** @type {?} */ override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverrides(def: NgModuleDefinition) {\n    for (let /** @type {?} */ i = 0; i < def.providers.length; i++) {\n      const /** @type {?} */ provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const /** @type {?} */ override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number|null;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName( /** @type {?} */((binding.nonMinifiedName)))] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = /** @type {?} */(( nodeDef.parent));\n      const /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (! /** @type {?} */((elDef.element)).name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push( /** @type {?} */((childDef.provider)).token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    }; /** @type {?} */((\n    logViewDef.factory))(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = /** @type {?} */(( view.parent));\n  }\n  if (view.parent) {\n    return asElementData(view.parent, /** @type {?} */(( viewParentEl(view))).nodeIndex);\n  }\n  return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, /** @type {?} */(( getCurrentDebugContext())));\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n/**\n * @return {?}\n */\nbegin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n/**\n * @return {?}\n */\nend() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n/**\n * @return {?}\n */\nwhenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex( /** @type {?} */((getDebugNode(node))));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = /** @type {?} */(( getDebugNode(refChild)));\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/services.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinitionFactory, ProviderOverride, Services} from './types';\nimport {resolveDefinition} from './util';\n/**\n * @param {?} override\n * @return {?}\n */\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n/**\n * @return {?}\n */\nexport function clearProviderOverrides() {\n  initServicesIfNeeded();\n  return Services.clearProviderOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n/**\n * @param {?} moduleType\n * @param {?} _bootstrapComponents\n * @param {?} _ngModuleDefFactory\n */\nconstructor(\npublic readonly moduleType: Type<any>,\nprivate _bootstrapComponents: Type<any>[],\nprivate _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    const /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n\nfunction NgModuleFactory__tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory_.prototype.moduleType;\n/** @type {?} */\nNgModuleFactory_.prototype._bootstrapComponents;\n/** @type {?} */\nNgModuleFactory_.prototype._ngModuleDefFactory;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/entrypoint.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {anchorDef, elementDef} from './element';\nexport {clearProviderOverrides, createNgModuleFactory, overrideProvider} from './entrypoint';\nexport {ngContentDef} from './ng_content';\nexport {moduleDef, moduleProvideDef} from './ng_module';\nexport {directiveDef, pipeDef, providerDef} from './provider';\nexport {pureArrayDef, pureObjectDef, purePipeDef} from './pure_expression';\nexport {queryDef} from './query';\nexport {ViewRef_, createComponentFactory, getComponentViewDefinitionFactory, nodeValue} from './refs';\nexport {initServicesIfNeeded} from './services';\nexport {textDef} from './text';\nexport {EMPTY_ARRAY, EMPTY_MAP, createRendererType2, elementEventFullName, inlineInterpolate, interpolate, rootRenderNodes, tokenKey, unwrapValue} from './util';\nexport {viewDef} from './view';\nexport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView} from './view_attach';\n\nexport {DefinitionFactory,NodeLogger,Definition,NgModuleDefinition,NgModuleDefinitionFactory,ViewDefinition,ViewDefinitionFactory,ViewUpdateFn,NodeCheckFn,ArgumentType,ViewHandleEventFn,ViewFlags,NodeDef,NodeFlags,BindingDef,BindingFlags,OutputDef,OutputType,QueryValueType,ElementDef,ElementHandleEventFn,ProviderDef,NgModuleProviderDef,DepDef,DepFlags,TextDef,QueryDef,QueryBindingDef,QueryBindingType,NgContentDef,NgModuleData,ViewData,ViewState,DisposableFn,NodeData,TextData,asTextData,ElementData,ViewContainerData,TemplateData,asElementData,ProviderData,asProviderData,PureExpressionData,asPureExpressionData,asQueryList,RootData,DebugContext,CheckType,ProviderOverride,Services} from './types';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/view/index.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport interface ɵStyleData { [key: string]: string|number; }\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL.\n *\n * @experimental Animation support is experimental.\n */\nexport declare type AnimateTimings = {\n  duration: number,\n  delay: number,\n  easing: string | null\n};\n\n/**\n * `AnimationOptions` represents options that can be passed into most animation DSL methods.\n * When options are provided, the delay value of an animation can be changed and animation input\n * parameters can be passed in to change styling and timing data when an animation is started.\n *\n * The following animation DSL functions are able to accept animation option data:\n *\n * - {@link transition transition()}\n * - {@link sequence sequence()}\n * - {@link group group()}\n * - {@link query query()}\n * - {@link animation animation()}\n * - {@link useAnimation useAnimation()}\n * - {@link animateChild animateChild()}\n *\n * Programmatic animations built using {@link AnimationBuilder the AnimationBuilder service} also\n * make use of AnimationOptions.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationOptions {\n  delay?: number|string;\n  params?: {[name: string]: any};\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are created internally\n * within the Angular animation DSL when {@link animateChild animateChild()} is used.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimateChildOptions extends AnimationOptions { duration?: number|string; }\n\n/**\n * Metadata representing the entry of animations. Usages of this enum are created\n * each time an animation DSL function is used.\n *\n * @experimental Animation support is experimental.\n */\nexport const enum AnimationMetadataType {\n  State = 0,\n  Transition = 1,\n  Sequence = 2,\n  Group = 3,\n  Animate = 4,\n  Keyframes = 5,\n  Style = 6,\n  Trigger = 7,\n  Reference = 8,\n  AnimateChild = 9,\n  AnimateRef = 10,\n  Query = 11,\n  Stagger = 12\n}\n/**\n * \\@experimental Animation support is experimental.\n */\nexport const AUTO_STYLE = '*';\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link trigger trigger animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTriggerMetadata extends AnimationMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n  options: {params?: {[name: string]: any}}|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link state state animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n  options?: {params: {[name: string]: any}};\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link transition transition animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationReferenceMetadata extends AnimationMetadata {\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * @experimental Animation support is experimental.\n */\nexport interface AnimationQueryMetadata extends AnimationMetadata {\n  selector: string;\n  animation: AnimationMetadata|AnimationMetadata[];\n  options: AnimationQueryOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link keyframes keyframes animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link style style animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animate animate animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link animateChild animateChild animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateChildMetadata extends AnimationMetadata {\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link useAnimation useAnimation animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationAnimateRefMetadata extends AnimationMetadata {\n  animation: AnimationReferenceMetadata;\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link sequence sequence animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link group group animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata {\n  steps: AnimationMetadata[];\n  options: AnimationOptions|null;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link query query animation function} is called.\n *\n * @experimental Animation support is experimental.\n */\nexport declare interface AnimationQueryOptions extends AnimationOptions {\n  optional?: boolean;\n  /**\n   * Used to limit the total amount of results from the start of the query list.\n   *\n   * If a negative value is provided then the queried results will be limited from the\n   * end of the query list towards the beginning (e.g. if `limit: -3` is used then the\n   * final 3 (or less) queried results will be used for the animation).\n   */\n  limit?: number;\n}\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {@link stagger stagger animation function} is called.\n *\n* @experimental Animation support is experimental.\n*/\nexport interface AnimationStaggerMetadata extends AnimationMetadata {\n  timings: string|number;\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n * \n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n * \n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n * \n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n * \n * ### Usage\n * \n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n * \n * ```typescript\n * \\@Component({ \n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n * \n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n * \n * ```ts\n * \\@Component({ \n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n * \n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n * \n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n * \n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n * \n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n * \n * \\@Component({ \n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n * \n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return {type: AnimationMetadataType.Trigger, name, definitions, options: {}};\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n * \n * ### Usage\n * \n * The `animate` function accepts two input parameters: `timing` and `styles`:\n * \n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n * \n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n * \n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles: AnimationStyleMetadata | AnimationKeyframesSequenceMetadata |\n        null = null): AnimationAnimateMetadata {\n  return {type: AnimationMetadataType.Animate, styles, timings};\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n * \n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n * \n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function group(\n    steps: AnimationMetadata[], options: AnimationOptions | null = null): AnimationGroupMetadata {\n  return {type: AnimationMetadataType.Group, steps, options};\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n * \n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n * \n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n * \n * ### Usage\n * \n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n * \n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[], options: AnimationOptions | null = null):\n    AnimationSequenceMetadata {\n  return {type: AnimationMetadataType.Sequence, steps, options};\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n * \n * ### Usage\n * \n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n * \n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n * \n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n * \n * #### Auto-styles (using `*`)\n * \n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n * \n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n * \n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: '*' | {[key: string]: string | number} |\n    Array<'*'|{[key: string]: string | number}>): AnimationStyleMetadata {\n  return {type: AnimationMetadataType.Style, styles: tokens, offset: null};\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n * \n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n * \n * #### The `void` state\n * \n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n * \n * #### The `*` (default) state\n * \n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n * \n * ### Usage\n * \n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n * \n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n * \n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n * \n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nexport function state(\n    name: string, styles: AnimationStyleMetadata,\n    options?: {params: {[name: string]: any}}): AnimationStateMetadata {\n  return {type: AnimationMetadataType.State, name, styles, options};\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n * \n * ### Usage\n * \n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n * \n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n * \n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n * \n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n * \n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n * \n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return {type: AnimationMetadataType.Keyframes, steps};\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n * \n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n * \n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n * \n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n * \n * ### Usage\n * \n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n * \n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n * \n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n * \n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n * \n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n * \n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n * \n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n * \n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n * \n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n * \n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n * \n * #### The final `animate` call\n * \n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n * \n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n * \n * ### Transition Aliases (`:enter` and `:leave`)\n * \n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n * \n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ])\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n * \n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n * \n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n * \n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n * \n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function transition(\n    stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationTransitionMetadata {\n  return {type: AnimationMetadataType.Transition, expr: stateChangeExpr, animation: steps, options};\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n * \n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n * \n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n * \n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n * \n * If one or more parameter values are missing before animated then an error will be thrown.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nexport function animation(\n    steps: AnimationMetadata | AnimationMetadata[],\n    options: AnimationOptions | null = null): AnimationReferenceMetadata {\n  return {type: AnimationMetadataType.Reference, animation: steps, options};\n}\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n * \n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n * \n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n * \n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n * \n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n * \n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n * \n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({ \n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n * \n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n * \n * This example can be further extended by using stagger:\n * \n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n * \n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n * \n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n * \n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n * \n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n * \n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\nexport function animateChild(options: AnimateChildOptions | null = null):\n    AnimationAnimateChildMetadata {\n  return {type: AnimationMetadataType.AnimateChild, options};\n}\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function useAnimation(\n    animation: AnimationReferenceMetadata,\n    options: AnimationOptions | null = null): AnimationAnimateRefMetadata {\n  return {type: AnimationMetadataType.AnimateRef, animation, options};\n}\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n * \n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n * \n * ### Usage\n * \n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n * \n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n * \n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n * \n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n * \n * ### Special Selector Values\n * \n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n * \n * These include:\n * \n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n * \n * \n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n * \n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n * \n * ### Demo\n * \n * ```\n * \\@Component({ \n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n * \n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n * \n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n * \n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\nexport function query(\n    selector: string, animation: AnimationMetadata | AnimationMetadata[],\n    options: AnimationQueryOptions | null = null): AnimationQueryMetadata {\n  return {type: AnimationMetadataType.Query, selector, animation, options};\n}\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n * \n * ### Usage\n * \n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n * \n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n * \n * The component code for this looks as such:\n * \n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({ \n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n * \n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n * \n *   hideItems() {\n *     this.items = [];\n *   }\n * \n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n * \n * And now for the animation trigger code:\n * \n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n * \n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n * \n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\nexport function stagger(\n    timings: string | number,\n    animation: AnimationMetadata | AnimationMetadata[]): AnimationStaggerMetadata {\n  return {type: AnimationMetadataType.Stagger, timings, animation};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/animation/dsl.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimateTimings, AnimationMetadataType, animate as _animate, group as _group, keyframes as _keyframes, sequence as _sequence, state as _state, style as _style, transition as _transition, trigger as _trigger} from './dsl';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nexport const AUTO_STYLE = '*';\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationMetadata { type: AnimationMetadataType; }\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTriggerMetadata {\n  name: string;\n  definitions: AnimationMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStateMetadata extends AnimationMetadata {\n  name: string;\n  styles: AnimationStyleMetadata;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationTransitionMetadata extends AnimationMetadata {\n  expr: string|((fromState: string, toState: string) => boolean);\n  animation: AnimationMetadata|AnimationMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationKeyframesSequenceMetadata extends AnimationMetadata {\n  steps: AnimationStyleMetadata[];\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationStyleMetadata extends AnimationMetadata {\n  styles: '*'|{[key: string]: string | number}|Array<{[key: string]: string | number}|'*'>;\n  offset: number|null;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationAnimateMetadata extends AnimationMetadata {\n  timings: string|number|AnimateTimings;\n  styles: AnimationStyleMetadata|AnimationKeyframesSequenceMetadata|null;\n}\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationSequenceMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n\n/**\n * @deprecated This symbol has moved. Please Import from @angular/animations instead!\n */\nexport interface AnimationGroupMetadata extends AnimationMetadata { steps: AnimationMetadata[]; }\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nexport function trigger(name: string, definitions: AnimationMetadata[]): AnimationTriggerMetadata {\n  return _trigger(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nexport function animate(\n    timings: string | number, styles?: AnimationStyleMetadata |\n        AnimationKeyframesSequenceMetadata): AnimationAnimateMetadata {\n  return _animate(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function group(steps: AnimationMetadata[]): AnimationGroupMetadata {\n  return _group(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function sequence(steps: AnimationMetadata[]): AnimationSequenceMetadata {\n  return _sequence(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nexport function style(\n    tokens: {[key: string]: string | number} |\n    Array<{[key: string]: string | number}>): AnimationStyleMetadata {\n  return _style(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nexport function state(name: string, styles: AnimationStyleMetadata): AnimationStateMetadata {\n  return _state(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nexport function keyframes(steps: AnimationStyleMetadata[]): AnimationKeyframesSequenceMetadata {\n  return _keyframes(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nexport function transition(stateChangeExpr: string, steps: AnimationMetadata | AnimationMetadata[]):\n    AnimationTransitionMetadata {\n  return _transition(stateChangeExpr, steps);\n}\n\n/**\n * @deprecated This has been renamed to `AnimationEvent`. Please import it from @angular/animations.\n */\nexport interface AnimationTransitionEvent {\n  fromState: string;\n  toState: string;\n  totalTime: number;\n  phaseName: string;\n  element: any;\n  triggerName: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/animation/animation_metadata_wrapped.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point from which you should import all public core APIs.\n */\nexport {ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation} from './metadata';\nexport {Version,VERSION} from './version';\nexport {Class, ClassDefinition, TypeDecorator} from './util/decorators';\nexport {forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,Provider,TypeProvider,ValueProvider,ClassProvider,ExistingProvider,FactoryProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di';\nexport {createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken} from './application_ref';\nexport {APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER} from './application_tokens';\nexport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nexport {NgZone} from './zone';\nexport {RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer} from './render';\nexport {COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef} from './linker';\nexport {DebugElement, DebugNode, asNativeElements, getDebugNode, Predicate} from './debug/debug_node';\nexport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter} from './testability/testability';\nexport {ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue} from './change_detection';\nexport {platformCore} from './platform_core_providers';\nexport {TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy} from './i18n/tokens';\nexport {ApplicationModule} from './application_module';\nexport {wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, WtfScopeFn} from './profile/profile';\nexport {Type} from './type';\nexport {EventEmitter} from './event_emitter';\nexport {ErrorHandler} from './error_handler';\nexport {ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from './core_private_export';\nexport {Sanitizer, SecurityContext} from './security';\nexport {ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid} from './codegen_private_exports';\nexport {AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './animation/animation_metadata_wrapped';\nimport {AnimationTriggerMetadata} from './animation/animation_metadata_wrapped';\n\n\n// For backwards compatibility.\n/**\n * @deprecated from v4\n */\nexport type AnimationEntryMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStateTransitionMetadata = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationPlayer = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationStyles = any;\n/**\n * @deprecated from v4\n */\nexport type AnimationKeyframe = any;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/src/core.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the core package.\n */\nexport {Class,ClassDefinition,TypeDecorator,createPlatform,assertPlatform,destroyPlatform,getPlatform,PlatformRef,ApplicationRef,enableProdMode,isDevMode,createPlatformFactory,NgProbeToken,APP_ID,PACKAGE_ROOT_URL,PLATFORM_INITIALIZER,PLATFORM_ID,APP_BOOTSTRAP_LISTENER,APP_INITIALIZER,ApplicationInitStatus,DebugElement,DebugNode,asNativeElements,getDebugNode,Predicate,GetTestability,Testability,TestabilityRegistry,setTestabilityGetter,TRANSLATIONS,TRANSLATIONS_FORMAT,LOCALE_ID,MissingTranslationStrategy,ApplicationModule,wtfCreateScope,wtfLeave,wtfStartTimeRange,wtfEndTimeRange,WtfScopeFn,Type,EventEmitter,ErrorHandler,Sanitizer,SecurityContext,AnimationEntryMetadata,AnimationStateTransitionMetadata,AnimationPlayer,AnimationStyles,AnimationKeyframe,ANALYZE_FOR_ENTRY_COMPONENTS,Attribute,ContentChild,ContentChildDecorator,ContentChildren,ContentChildrenDecorator,Query,ViewChild,ViewChildDecorator,ViewChildren,ViewChildrenDecorator,Component,ComponentDecorator,Directive,DirectiveDecorator,HostBinding,HostListener,Input,Output,Pipe,AfterContentChecked,AfterContentInit,AfterViewChecked,AfterViewInit,DoCheck,OnChanges,OnDestroy,OnInit,CUSTOM_ELEMENTS_SCHEMA,ModuleWithProviders,NO_ERRORS_SCHEMA,NgModule,SchemaMetadata,ViewEncapsulation,Version,VERSION,forwardRef,resolveForwardRef,ForwardRefFn,Injector,ReflectiveInjector,Provider,TypeProvider,ValueProvider,ClassProvider,ExistingProvider,FactoryProvider,ResolvedReflectiveFactory,ResolvedReflectiveProvider,ReflectiveKey,InjectionToken,OpaqueToken,InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host,NgZone,RenderComponentType,Renderer,Renderer2,RendererFactory2,RendererStyleFlags2,RendererType2,RootRenderer,COMPILER_OPTIONS,Compiler,CompilerFactory,CompilerOptions,ModuleWithComponentFactories,ComponentFactory,ComponentRef,ComponentFactoryResolver,ElementRef,NgModuleFactory,NgModuleRef,NgModuleFactoryLoader,getModuleFactory,QueryList,SystemJsNgModuleLoader,SystemJsNgModuleLoaderConfig,TemplateRef,ViewContainerRef,EmbeddedViewRef,ViewRef,ChangeDetectionStrategy,ChangeDetectorRef,CollectionChangeRecord,DefaultIterableDiffer,IterableChangeRecord,IterableChanges,IterableDiffer,IterableDifferFactory,IterableDiffers,KeyValueChangeRecord,KeyValueChanges,KeyValueDiffer,KeyValueDifferFactory,KeyValueDiffers,NgIterable,PipeTransform,SimpleChange,SimpleChanges,TrackByFn,TrackByFunction,WrappedValue,platformCore,ɵALLOW_MULTIPLE_PLATFORMS,ɵAPP_ID_RANDOM_PROVIDER,ɵValueUnwrapper,ɵdevModeEqual,ɵisListLikeIterable,ɵChangeDetectorStatus,ɵisDefaultChangeDetectionStrategy,ɵConsole,ɵERROR_COMPONENT_TYPE,ɵComponentFactory,ɵCodegenComponentFactoryResolver,ɵViewMetadata,ɵReflectionCapabilities,ɵGetterFn,ɵMethodFn,ɵSetterFn,ɵDirectRenderer,ɵRenderDebugInfo,ɵglobal,ɵlooseIdentical,ɵstringify,ɵmakeDecorator,ɵisObservable,ɵisPromise,ɵclearProviderOverrides,ɵoverrideProvider,ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,ɵregisterModuleFactory,ɵArgumentType,ɵBindingFlags,ɵDepFlags,ɵEMPTY_ARRAY,ɵEMPTY_MAP,ɵNodeFlags,ɵQueryBindingType,ɵQueryValueType,ɵViewDefinition,ɵViewFlags,ɵand,ɵccf,ɵcmf,ɵcrt,ɵdid,ɵeld,ɵelementEventFullName,ɵgetComponentViewDefinitionFactory,ɵinlineInterpolate,ɵinterpolate,ɵmod,ɵmpd,ɵncd,ɵnov,ɵpid,ɵprd,ɵpad,ɵpod,ɵppd,ɵqud,ɵted,ɵunv,ɵvid,AUTO_STYLE,AnimationMetadata,AnimationTriggerMetadata,AnimationStateMetadata,AnimationTransitionMetadata,AnimationKeyframesSequenceMetadata,AnimationStyleMetadata,AnimationAnimateMetadata,AnimationSequenceMetadata,AnimationGroupMetadata,trigger,animate,group,sequence,style,state,keyframes,transition,AnimationTransitionEvent} from './src/core';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/core/public_api.ts","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          // HACK(benlesh): To resolve an issue where Node users may have multiple\n          // copies of rxjs in their node_modules directory.\n          if (isTrustedSubscriber(destinationOrNext)) {\n            const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]() as Subscriber<any>;\n            this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n            this.destination = trustedSubscriber;\n            trustedSubscriber.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated internal use only */ _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  /** @deprecated internal use only */ _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n\nfunction isTrustedSubscriber(obj: any) {\n  return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/Subscriber.ts","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tslib/tslib.es6.js\n// module id = 12\n// module chunks = 3","declare let global: any;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare var WorkerGlobalScope: any;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\n\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root: any = __window || __global || __self;\n\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n  if (!_root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n  }\n})();\n\nexport { _root as root };\n\n\n// WEBPACK FOOTER //\n// ../../src/util/root.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\n\nlet /** @type {?} */ _DOM: DomAdapter = /** @type {?} */(( null));\n/**\n * @return {?}\n */\nexport function getDOM() {\n  return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n * \n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nexport abstract class DomAdapter {\npublic resourceLoaderType: Type<any> = /** @type {?} */(( null));\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: Element, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: Element, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Element, methodName: string, args: any[]) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlogError(error: any) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlog(error: any) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: any) {}\n/**\n * @abstract\n * @return {?}\n */\nlogGroupEnd() {}\n/**\n * Maps attribute names to their corresponding property names for cases\n * where attribute name doesn't match property name.\n * @return {?}\n */\nget attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; }\n/**\n * @param {?} value\n * @return {?}\n */\nset attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; }\n/**\n * \\@internal\n */\n_attrToPropMap: {[key: string]: string};\n/**\n * @abstract\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any) {}\n/**\n * @abstract\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: any, evt: any, listener: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: any, evt: any, listener: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: any, evt: any) {}\n/**\n * @abstract\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: any) {}\n/**\n * @abstract\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: string) {}\n/**\n * @abstract\n * @param {?} evt\n * @return {?}\n */\npreventDefault(evt: any) {}\n/**\n * @abstract\n * @param {?} evt\n * @return {?}\n */\nisPrevented(evt: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: any) {}\n/**\n * Returns content if el is a <template> element, null otherwise.\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnodeName(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\ntype(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\ncontent(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nparentElement(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} newNode\n * @param {?} oldNode\n * @return {?}\n */\nreplaceChild(el: any, newNode: any, oldNode: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nremove(el: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertBefore(parent: any, ref: any, node: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} ref\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: any, ref: any, nodes: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: any, el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: any, value: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetText(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: any, value: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) {}\n/**\n * @abstract\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string) {}\n/**\n * @abstract\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any) {}\n/**\n * @abstract\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElement(tagName: any, doc?: any) {}\n/**\n * @abstract\n * @param {?} ns\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElementNS(ns: string, tagName: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} text\n * @param {?=} doc\n * @return {?}\n */\ncreateTextNode(text: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} attrName\n * @param {?} attrValue\n * @param {?=} doc\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} css\n * @param {?=} doc\n * @return {?}\n */\ncreateStyleElement(css: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetHost(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nclone /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\nclassList(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\nremoveStyle(element: any, styleName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\ngetStyle(element: any, styleName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue?: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ntagName(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\ngetAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: any, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: any, ns: string, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nremoveAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: any) {}\n/**\n * @abstract\n * @return {?}\n */\ncreateHtmlDocument() {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: any) {}\n/**\n * @abstract\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document) {}\n/**\n * @abstract\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) {}\n/**\n * @abstract\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\nelementMatches(n: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nadoptNode /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ngetHref(element: any) {}\n/**\n * @abstract\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(element: any, baseUrl: string, href: string) {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsDOMEvents() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsNativeShadowDOM() {}\n/**\n * @abstract\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string) {}\n/**\n * @abstract\n * @return {?}\n */\ngetHistory() {}\n/**\n * @abstract\n * @return {?}\n */\ngetLocation() {}\n/**\n * @abstract\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document) {}\n/**\n * @abstract\n * @return {?}\n */\nresetBaseElement() {}\n/**\n * @abstract\n * @return {?}\n */\ngetUserAgent() {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(element: any, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ngetComputedStyle(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetData(element: any, name: string) {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsWebAnimation() {}\n/**\n * @abstract\n * @return {?}\n */\nperformanceNow() {}\n/**\n * @abstract\n * @return {?}\n */\ngetAnimationPrefix() {}\n/**\n * @abstract\n * @return {?}\n */\ngetTransitionEnd() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsAnimation() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsCookies() {}\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) {}\n}\n\nfunction DomAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDomAdapter.prototype.resourceLoaderType;\n/**\n * \\@internal\n * @type {?}\n */\nDomAdapter.prototype._attrToPropMap;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/dom_adapter.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DomAdapter} from '../dom/dom_adapter';\n/**\n * Provides DOM operations in any browser environment.\n * \n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\nprivate _animationPrefix: string|null = null;\nprivate _transitionEnd: string|null = null;\nconstructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch (e) {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: HTMLElement): Node[] { return ( /** @type {?} */((<any>el))).getDistributedNodes(); }\n/**\n * @param {?} el\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n/**\n * @return {?}\n */\nsupportsDOMEvents(): boolean { return true; }\n/**\n * @return {?}\n */\nsupportsNativeShadowDOM(): boolean {\n    return typeof( /** @type {?} */((<any>document.body))).createShadowRoot === 'function';\n  }\n/**\n * @return {?}\n */\ngetAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n/**\n * @return {?}\n */\ngetTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n/**\n * @return {?}\n */\nsupportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n\nfunction GenericBrowserDomAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nGenericBrowserDomAdapter.prototype._animationPrefix;\n/** @type {?} */\nGenericBrowserDomAdapter.prototype._transitionEnd;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/generic_browser_adapter.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ɵparseCookieValue as parseCookieValue} from '@angular/common';\nimport {ɵglobal as global} from '@angular/core';\n\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst /** @type {?} */ _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst /** @type {?} */ _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst /** @type {?} */ _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nlet /** @type {?} */ nodeContains: (a: any, b: any) => boolean;\n\nif (global['Node']) {\n  nodeContains = global['Node'].prototype.contains || function(node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n/**\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) { throw new Error('parse not implemented'); }\n/**\n * @return {?}\n */\nstatic makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: Node, name: string): boolean { return name in element; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: Node, name: string, value: any) { ( /** @type {?} */((<any>el)))[name] = value; }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: Node, name: string): any { return ( /** @type {?} */((<any>el)))[name]; }\n/**\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Node, methodName: string, args: any[]): any { ( /** @type {?} */((<any>el)))[methodName](...args); }\n/**\n * @param {?} error\n * @return {?}\n */\nlogError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nlog(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n/**\n * @return {?}\n */\nlogGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n/**\n * @return {?}\n */\nget attrToPropMap(): any { return _attrToPropMap; }\n/**\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: Element, selector: string): any { return el.querySelector(selector); }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n/**\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: string): MouseEvent {\n    const /** @type {?} */ evt: MouseEvent = document.createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: any): Event {\n    const /** @type {?} */ evt: Event = document.createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\npreventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nisPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: Node): Node|null {\n    return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeName(node: Node): string { return node.nodeName; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: Node): string|null { return node.nodeValue; }\n/**\n * @param {?} node\n * @return {?}\n */\ntype(node: HTMLInputElement): string { return node.type; }\n/**\n * @param {?} node\n * @return {?}\n */\ncontent(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return ( /** @type {?} */((<any>node))).content;\n    } else {\n      return node;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: Node): Node|null { return el.firstChild; }\n/**\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: Node): Node|null { return el.nextSibling; }\n/**\n * @param {?} el\n * @return {?}\n */\nparentElement(el: Node): Node|null { return el.parentNode; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any): Node[] { return el.childNodes; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: Node): any[] {\n    const /** @type {?} */ childNodes = el.childNodes;\n    const /** @type {?} */ res = new Array(childNodes.length);\n    for (let /** @type {?} */ i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: Node, node: Node) { el.appendChild(node); }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: Node, node: Node) { el.removeChild(node); }\n/**\n * @param {?} el\n * @param {?} newChild\n * @param {?} oldChild\n * @return {?}\n */\nreplaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n/**\n * @param {?} node\n * @return {?}\n */\nremove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetText(el: Node): string|null { return el.textContent; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: Node, value: string) { el.textContent = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any): string { return el.value; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) { el.value = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any): boolean { return el.checked; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) { el.checked = value; }\n/**\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string): Comment { return document.createComment(text); }\n/**\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any): HTMLElement {\n    const /** @type {?} */ t = document.createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n/**\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElement(tagName: string, doc = document): HTMLElement { return doc.createElement(tagName); }\n/**\n * @param {?} ns\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElementNS(ns: string, tagName: string, doc = document): Element {\n    return doc.createElementNS(ns, tagName);\n  }\n/**\n * @param {?} text\n * @param {?=} doc\n * @return {?}\n */\ncreateTextNode(text: string, doc = document): Text { return doc.createTextNode(text); }\n/**\n * @param {?} attrName\n * @param {?} attrValue\n * @param {?=} doc\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string, doc = document): HTMLScriptElement {\n    const /** @type {?} */ el = /** @type {?} */(( <HTMLScriptElement>doc.createElement('SCRIPT')));\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n/**\n * @param {?} css\n * @param {?=} doc\n * @return {?}\n */\ncreateStyleElement(css: string, doc = document): HTMLStyleElement {\n    const /** @type {?} */ style = /** @type {?} */(( <HTMLStyleElement>doc.createElement('style')));\n    this.appendChild(style, this.createTextNode(css));\n    return style;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: HTMLElement): DocumentFragment { return ( /** @type {?} */((<any>el))).createShadowRoot(); }\n/**\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: HTMLElement): DocumentFragment { return ( /** @type {?} */((<any>el))).shadowRoot; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHost(el: HTMLElement): HTMLElement { return ( /** @type {?} */((<any>el))).host; }\n/**\n * @param {?} node\n * @return {?}\n */\nclone(node: Node): Node { return node.cloneNode(true); }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nclassList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) { element.classList.add(className); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) { element.classList.remove(className); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n/**\n * @param {?} element\n * @param {?} stylename\n * @return {?}\n */\nremoveStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n/**\n * @param {?} element\n * @param {?} stylename\n * @return {?}\n */\ngetStyle(element: any, stylename: string): string { return element.style[stylename]; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue?: string|null): boolean {\n    const /** @type {?} */ value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ntagName(element: any): string { return element.tagName; }\n/**\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any): Map<string, string> {\n    const /** @type {?} */ res = new Map<string, string>();\n    const /** @type {?} */ elAttrs = element.attributes;\n    for (let /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n      const /** @type {?} */ attrib = elAttrs[i];\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: Element, attribute: string): string|null {\n    return element.getAttribute(attribute);\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @return {?}\n */\ngetAttributeNS(element: Element, ns: string, name: string): string {\n    return element.getAttributeNS(ns, name);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @return {?}\n */\nremoveAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n/**\n * @return {?}\n */\ncreateHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch ( /** @type {?} */e) {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document): string { return document.title; }\n/**\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) { document.title = newTitle || ''; }\n/**\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\nelementMatches(n: any, selector: string): boolean {\n    if (n instanceof HTMLElement) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: Node): boolean {\n    return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n/**\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n/**\n * @param {?} node\n * @return {?}\n */\nadoptNode(node: Node): any { return document.adoptNode(node); }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHref(el: Element): string { return ( /** @type {?} */((<any>el))).href; }\n/**\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any): string {\n    let /** @type {?} */ key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = ( /** @type {?} */((_chromeNumKeyPadMap as any)))[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n/**\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return document;\n    }\n    if (target === 'body') {\n      return document.body;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\ngetHistory(): History { return window.history; }\n/**\n * @return {?}\n */\ngetLocation(): Location { return window.location; }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document): string|null {\n    const /** @type {?} */ href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n/**\n * @return {?}\n */\nresetBaseElement(): void { baseElement = null; }\n/**\n * @return {?}\n */\ngetUserAgent(): string { return window.navigator.userAgent; }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetData(element: Element, name: string): string|null {\n    return this.getAttribute(element, 'data-' + name);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ngetComputedStyle(element: any): any { return getComputedStyle(element); }\n/**\n * @return {?}\n */\nsupportsWebAnimation(): boolean {\n    return typeof( /** @type {?} */((<any>Element))).prototype['animate'] === 'function';\n  }\n/**\n * @return {?}\n */\nperformanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n/**\n * @return {?}\n */\nsupportsCookies(): boolean { return true; }\n/**\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string): string|null { return parseCookieValue(document.cookie, name); }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet /** @type {?} */ baseElement: HTMLElement|null = null;\n/**\n * @return {?}\n */\nfunction getBaseElementHref(): string|null {\n  if (!baseElement) {\n    baseElement = /** @type {?} */(( document.querySelector('base')));\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet /** @type {?} */ urlParsingNode: any;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/browser_adapter.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DOCUMENT as commonDOCUMENT} from '@angular/common';\nimport {InjectionToken} from '@angular/core';\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n * \n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n * \n * @deprecated import from `\\@angular/common` instead.\n */\nexport const DOCUMENT = commonDOCUMENT;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/dom_tokens.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\nexport class BrowserPlatformLocation extends PlatformLocation {\nprivate _location: Location;\nprivate _history: History;\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {\n    super();\n    this._init();\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_init() {\n    this._location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n/**\n * @return {?}\n */\nget location(): Location { return this._location; }\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string { return /** @type {?} */(( getDOM().getBaseHref(this._doc))); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n/**\n * @return {?}\n */\nget pathname(): string { return this._location.pathname; }\n/**\n * @return {?}\n */\nget search(): string { return this._location.search; }\n/**\n * @return {?}\n */\nget hash(): string { return this._location.hash; }\n/**\n * @param {?} newPath\n * @return {?}\n */\nset pathname(newPath: string) { this._location.pathname = newPath; }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this._location.hash = url;\n    }\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this._location.hash = url;\n    }\n  }\n/**\n * @return {?}\n */\nforward(): void { this._history.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._history.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction BrowserPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserPlatformLocation.ctorParameters;\n/** @type {?} */\nBrowserPlatformLocation.prototype._location;\n/** @type {?} */\nBrowserPlatformLocation.prototype._history;\n/** @type {?} */\nBrowserPlatformLocation.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/location/browser_platform_location.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n\n/**\n * Represents a meta element.\n *\n * @experimental\n */\nexport type MetaDefinition = {\n  charset?: string; content?: string; httpEquiv?: string; id?: string; itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n} &\n{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n/**\n * A service that can be used to get and add meta tags.\n * \n * \\@experimental\n */\nexport class Meta {\nprivate _dom: DomAdapter;\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) { this._dom = getDOM(); }\n/**\n * @param {?} tag\n * @param {?=} forceCreation\n * @return {?}\n */\naddTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement|null {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n/**\n * @param {?} tags\n * @param {?=} forceCreation\n * @return {?}\n */\naddTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\ngetTag(attrSelector: string): HTMLMetaElement|null {\n    if (!attrSelector) return null;\n    return this._dom.querySelector(this._doc, `meta[${attrSelector}]`);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\ngetTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const /** @type {?} */ list /*NodeList*/ = this._dom.querySelectorAll(this._doc, `meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n/**\n * @param {?} tag\n * @param {?=} selector\n * @return {?}\n */\nupdateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement|null {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const /** @type {?} */ meta: HTMLMetaElement = /** @type {?} */(( this.getTag(selector)));\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\nremoveTag(attrSelector: string): void { this.removeTagElement( /** @type {?} */((this.getTag(attrSelector)))); }\n/**\n * @param {?} meta\n * @return {?}\n */\nremoveTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n/**\n * @param {?} meta\n * @param {?=} forceCreation\n * @return {?}\n */\nprivate _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const /** @type {?} */ selector: string = this._parseSelector(meta);\n      const /** @type {?} */ elem: HTMLMetaElement = /** @type {?} */(( this.getTag(selector)));\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const /** @type {?} */ element: HTMLMetaElement = /** @type {?} */(( this._dom.createElement('meta') as HTMLMetaElement));\n    this._setMetaElementAttributes(meta, element);\n    const /** @type {?} */ head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n    this._dom.appendChild(head, element);\n    return element;\n  }\n/**\n * @param {?} tag\n * @param {?} el\n * @return {?}\n */\nprivate _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => this._dom.setAttribute(el, prop, tag[prop]));\n    return el;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nprivate _parseSelector(tag: MetaDefinition): string {\n    const /** @type {?} */ attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n/**\n * @param {?} tag\n * @param {?} elem\n * @return {?}\n */\nprivate _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => this._dom.getAttribute(elem, key) === tag[key]);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction Meta_tsickle_Closure_declarations() {\n/** @type {?} */\nMeta.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMeta.ctorParameters;\n/** @type {?} */\nMeta.prototype._dom;\n/** @type {?} */\nMeta.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/meta.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {APP_INITIALIZER, ApplicationInitStatus, Inject, InjectionToken, Injector, Provider} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @param {?} injector\n * @return {?}\n */\nexport function appInitializerFactory(transitionId: string, document: any, injector: Injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const /** @type {?} */ dom = getDOM();\n      const /** @type {?} */ styles: any[] =\n          Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n      styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n          .forEach(el => dom.remove(el));\n    });\n  };\n}\n\nexport const /** @type {?} */ SERVER_TRANSITION_PROVIDERS: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: appInitializerFactory,\n    deps: [TRANSITION_ID, DOCUMENT, Injector],\n    multi: true\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/server-transition.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, ɵglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nexport class BrowserGetTestability implements GetTestability {\n/**\n * @return {?}\n */\nstatic init() { setTestabilityGetter(new BrowserGetTestability()); }\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const /** @type {?} */ whenAllStable = (callback: any /** TODO #9100 */) => {\n      const /** @type {?} */ testabilities = global['getAllAngularTestabilities']();\n      let /** @type {?} */ count = testabilities.length;\n      let /** @type {?} */ didWork = false;\n      const /** @type {?} */ decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    if (elem == null) {\n      return null;\n    }\n    const /** @type {?} */ t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/testability.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n/**\n * A service that can be used to get and set the title of a current HTML document.\n * \n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n * \n * \\@experimental\n */\nexport class Title {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {}\n/**\n * Get the title of the current HTML document.\n * @return {?}\n */\ngetTitle(): string { return getDOM().getTitle(this._doc); }\n/**\n * Set the title of the current HTML document.\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(newTitle: string) { getDOM().setTitle(this._doc, newTitle); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction Title_tsickle_Closure_declarations() {\n/** @type {?} */\nTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitle.ctorParameters;\n/** @type {?} */\nTitle.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/title.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ɵglobal as global} from '@angular/core';\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst /** @type {?} */ DASH_CASE_REGEXP = /-([a-z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: string[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: string[]) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param {?} value The value to export.\n * @return {?}\n */\nexport function exportNgVar(name: string, value: any): void {\n  if (!ng) {\n    global['ng'] = ng = ( /** @type {?} */((global['ng'] as{[key: string]: any} | undefined))) || {};\n  }\n  ng[name] = value;\n}\n\nlet /** @type {?} */ ng: {[key: string]: any}|undefined;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/util.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport * as core from '@angular/core';\nimport {exportNgVar} from '../util';\n\nconst /** @type {?} */ CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst /** @type {?} */ INSPECT_GLOBAL_NAME = 'probe';\nconst /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nexport function inspectNativeElement(element: any): core.DebugNode|null {\n  return core.getDebugNode(element);\n}\n/**\n * Deprecated. Use the one from '\\@angular/core'.\n * @deprecated\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * @param {?} extraTokens\n * @param {?} coreTokens\n * @return {?}\n */\nexport function _createNgProbe(extraTokens: NgProbeToken[], coreTokens: core.NgProbeToken[]): any {\n  const /** @type {?} */ tokens = (extraTokens || []).concat(coreTokens || []);\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, {...CORE_TOKENS, ..._ngProbeTokensToMap(tokens || [])});\n  return () => inspectNativeElement;\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [NgProbeToken, new core.Optional()],\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/debug/ng_probe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n/**\n * \\@stable\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n/**\n * \\@stable\n */\nexport class EventManager {\nprivate _plugins: EventManagerPlugin[];\nprivate _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n/**\n * @param {?} plugins\n * @param {?} _zone\n */\nconstructor( plugins: EventManagerPlugin[],\nprivate _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n/**\n * @return {?}\n */\ngetZone(): NgZone { return this._zone; }\n/**\n * \\@internal\n * @param {?} eventName\n * @return {?}\n */\n_findPluginFor(eventName: string): EventManagerPlugin {\n    const /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const /** @type {?} */ plugins = this._plugins;\n    for (let /** @type {?} */ i = 0; i < plugins.length; i++) {\n      const /** @type {?} */ plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS, ] }, ]},\n{type: NgZone, },\n];\n}\n\nfunction EventManager_tsickle_Closure_declarations() {\n/** @type {?} */\nEventManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEventManager.ctorParameters;\n/** @type {?} */\nEventManager.prototype._plugins;\n/** @type {?} */\nEventManager.prototype._eventNameToPlugin;\n/** @type {?} */\nEventManager.prototype._zone;\n}\n\n/**\n * @abstract\n */\nexport abstract class EventManagerPlugin {\n/**\n * @param {?} _doc\n */\nconstructor(private _doc: any) {}\n\n  manager: EventManager;\n/**\n * @abstract\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function) {}\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const /** @type {?} */ target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  }\n}\n\nfunction EventManagerPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nEventManagerPlugin.prototype.manager;\n/** @type {?} */\nEventManagerPlugin.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/events/event_manager.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\nexport class SharedStylesHost {\n/**\n * \\@internal\n */\nprotected _stylesSet = new Set<string>();\n/**\n * @param {?} styles\n * @return {?}\n */\naddStyles(styles: string[]): void {\n    const /** @type {?} */ additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n/**\n * @param {?} additions\n * @return {?}\n */\nonStylesAdded(additions: Set<string>): void {}\n/**\n * @return {?}\n */\ngetAllStyles(): string[] { return Array.from(this._stylesSet); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SharedStylesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nSharedStylesHost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharedStylesHost.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nSharedStylesHost.prototype._stylesSet;\n}\n\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\nprivate _hostNodes = new Set<Node>();\nprivate _styleNodes = new Set<Node>();\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n/**\n * @param {?} styles\n * @param {?} host\n * @return {?}\n */\nprivate _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const /** @type {?} */ styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n/**\n * @param {?} hostNode\n * @return {?}\n */\naddHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n/**\n * @param {?} hostNode\n * @return {?}\n */\nremoveHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n/**\n * @param {?} additions\n * @return {?}\n */\nonStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomSharedStylesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nDomSharedStylesHost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomSharedStylesHost.ctorParameters;\n/** @type {?} */\nDomSharedStylesHost.prototype._hostNodes;\n/** @type {?} */\nDomSharedStylesHost.prototype._styleNodes;\n/** @type {?} */\nDomSharedStylesHost.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/shared_styles_host.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const /** @type {?} */ NAMESPACE_URIS: {[ns: string]: string} = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n\nconst /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\nexport const /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nexport const /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let /** @type {?} */ i = 0; i < styles.length; i++) {\n    let /** @type {?} */ style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  return (event: any) => {\n    const /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\nexport class DomRendererFactory2 implements RendererFactory2 {\nprivate rendererByCompId = new Map<string, Renderer2>();\nprivate defaultRenderer: Renderer2;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n */\nconstructor(private eventManager: EventManager,\nprivate sharedStylesHost: DomSharedStylesHost) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n/**\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(element: any, type: RendererType2|null): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let /** @type {?} */ renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer =\n              new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        ( /** @type {?} */((<EmulatedEncapsulationDomRenderer2>renderer))).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const /** @type {?} */ styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\n/**\n * @return {?}\n */\nbegin() {}\n/**\n * @return {?}\n */\nend() {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EventManager, },\n{type: DomSharedStylesHost, },\n];\n}\n\nfunction DomRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDomRendererFactory2.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomRendererFactory2.ctorParameters;\n/** @type {?} */\nDomRendererFactory2.prototype.rendererByCompId;\n/** @type {?} */\nDomRendererFactory2.prototype.defaultRenderer;\n/** @type {?} */\nDomRendererFactory2.prototype.eventManager;\n/** @type {?} */\nDomRendererFactory2.prototype.sharedStylesHost;\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n/**\n * @param {?} eventManager\n */\nconstructor(private eventManager: EventManager) {}\n/**\n * @return {?}\n */\ndestroy(): void {}\n\n  destroyNode: null;\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    if (namespace) {\n      return document.createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n\n    return document.createElement(name);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return document.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return document.createTextNode(value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    let /** @type {?} */ el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    el.textContent = '';\n    return el;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return node.parentNode; }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return node.nextSibling; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      name = `${namespace}:${name}`;\n      const /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      const /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { el.classList.add(name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { el.classList.remove(name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { node.nodeValue = value; }\n/**\n * @param {?} target\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return /** @type {?} */(( <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback))));\n    }\n    return /** @type {?} */(( /** @type {?} */(( <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)))) as() => void));\n  }\n}\n\nfunction DefaultDomRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultDomRenderer2.prototype.data;\n/** @type {?} */\nDefaultDomRenderer2.prototype.destroyNode;\n/** @type {?} */\nDefaultDomRenderer2.prototype.eventManager;\n}\n\n\nconst /** @type {?} */ AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\nprivate contentAttr: string;\nprivate hostAttr: string;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n * @param {?} component\n */\nconstructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\nprivate component: RendererType2) {\n    super(eventManager);\n    const styles = flattenStyles(component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(component.id);\n    this.hostAttr = shimHostAttribute(component.id);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\napplyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n/**\n * @param {?} parent\n * @param {?} name\n * @return {?}\n */\ncreateElement(parent: any, name: string): Element {\n    const /** @type {?} */ el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nfunction EmulatedEncapsulationDomRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.contentAttr;\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.hostAttr;\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.component;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\nprivate shadowRoot: any;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n * @param {?} hostEl\n * @param {?} component\n */\nconstructor(\n      eventManager: EventManager,\nprivate sharedStylesHost: DomSharedStylesHost,\nprivate hostEl: any,\nprivate component: RendererType2) {\n    super(eventManager);\n    this.shadowRoot = (hostEl as any).createShadowRoot();\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate nodeOrShadowRoot(node: any): any { return node === this.hostEl ? this.shadowRoot : node; }\n/**\n * @return {?}\n */\ndestroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n\nfunction ShadowDomRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowDomRenderer.prototype.shadowRoot;\n/** @type {?} */\nShadowDomRenderer.prototype.sharedStylesHost;\n/** @type {?} */\nShadowDomRenderer.prototype.hostEl;\n/** @type {?} */\nShadowDomRenderer.prototype.component;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/dom_renderer.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\nexport class DomEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n */\nconstructor( doc: any) { super(doc); }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return true; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, /** @type {?} */(( handler as any)), false);\n    return () => element.removeEventListener(eventName, /** @type {?} */(( handler as any)), false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDomEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/events/dom_events.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\nconst /** @type {?} */ EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n/**\n * A DI token that you can use to provide{\\@link HammerGestureConfig} to Angular. Use it to configure\n * Hammer gestures.\n * \n * \\@experimental\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\nexport interface HammerInstance {\n  on(eventName: string, callback?: Function): void;\n  off(eventName: string, callback?: Function): void;\n}\n/**\n * \\@experimental\n */\nexport class HammerGestureConfig {\n  events: string[] = [];\n\n  overrides: {[key: string]: Object} = {};\n/**\n * @param {?} element\n * @return {?}\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new Hammer(element);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const /** @type {?} */ eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HammerGestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nHammerGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHammerGestureConfig.ctorParameters;\n/** @type {?} */\nHammerGestureConfig.prototype.events;\n/** @type {?} */\nHammerGestureConfig.prototype.overrides;\n}\n\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n * @param {?} _config\n */\nconstructor(\n       doc: any,\nprivate _config: HammerGestureConfig) {\n    super(doc);\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!( /** @type {?} */((window as any))).Hammer) {\n      throw new Error(`Hammer.js is not loaded, can not bind ${eventName} event`);\n    }\n\n    return true;\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const /** @type {?} */ mc = this._config.buildHammer(element);\n      const /** @type {?} */ callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() { handler(eventObj); });\n      };\n      mc.on(eventName, callback);\n      return () => mc.off(eventName, callback);\n    });\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nisCustomEvent(eventName: string): boolean { return this._config.events.indexOf(eventName) > -1; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG, ] }, ]},\n];\n}\n\nfunction HammerGesturesPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nHammerGesturesPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHammerGesturesPlugin.ctorParameters;\n/** @type {?} */\nHammerGesturesPlugin.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/events/hammer_gestures.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\nconst /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst /** @type {?} */ MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n/**\n * \\@experimental\n */\nexport class KeyEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n */\nconstructor( doc: any) { super(doc); }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ parsedEvent = /** @type {?} */(( KeyEventsPlugin.parseEventName(eventName)));\n\n    const /** @type {?} */ outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nstatic parseEventName(eventName: string): {[key: string]: string}|null {\n    const /** @type {?} */ parts: string[] = eventName.toLowerCase().split('.');\n\n    const /** @type {?} */ domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const /** @type {?} */ key = KeyEventsPlugin._normalizeKey( /** @type {?} */((parts.pop())));\n\n    let /** @type {?} */ fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const /** @type {?} */ index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const /** @type {?} */ result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nstatic getEventFullKey(event: KeyboardEvent): string {\n    let /** @type {?} */ fullKey = '';\n    let /** @type {?} */ key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n/**\n * @param {?} fullKey\n * @param {?} handler\n * @param {?} zone\n * @return {?}\n */\nstatic eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n/**\n * \\@internal\n * @param {?} keyName\n * @return {?}\n */\nstatic _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction KeyEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKeyEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/events/key_events.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport class InertBodyHelper {\nprivate inertBodyElement: HTMLElement;\n/**\n * @param {?} defaultDoc\n * @param {?} DOM\n */\nconstructor(private defaultDoc: any,\nprivate DOM: DomAdapter) {\n    const inertDocument = this.DOM.createHtmlDocument();\n    this.inertBodyElement = inertDocument.body;\n\n    if (this.inertBodyElement == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.DOM.createElement('html', inertDocument);\n      this.inertBodyElement = this.DOM.createElement('body', inertDocument);\n      this.DOM.appendChild(inertHtml, this.inertBodyElement);\n      this.DOM.appendChild(inertDocument, inertHtml);\n    }\n\n    this.DOM.setInnerHTML(\n        this.inertBodyElement, '<svg><g onload=\"this.parentNode.remove()\"></g></svg>');\n    if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n      // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n      // so use the XHR strategy.\n      this.getInertBodyElement = this.getInertBodyElement_XHR;\n      return;\n    }\n\n    this.DOM.setInnerHTML(\n        this.inertBodyElement, '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">');\n    if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n      // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n      // so use the DOMParser strategy, if it is available.\n      // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n      // fall through to the default strategy below.\n      if (isDOMParserAvailable()) {\n        this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n        return;\n      }\n    }\n\n    // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n    this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n  }\n/**\n * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n * The implementation of this is determined in the constructor, when the class is instantiated.\n */\ngetInertBodyElement: (html: string) => HTMLElement | null;\n/**\n * Use XHR to create and fill an inert body element (on Safari 10.1)\n * See\n * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n * @param {?} html\n * @return {?}\n */\nprivate getInertBodyElement_XHR(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      html = encodeURI(html);\n    } catch ( /** @type {?} */e) {\n      return null;\n    }\n    const /** @type {?} */ xhr = new XMLHttpRequest();\n    xhr.responseType = 'document';\n    xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n    xhr.send(null);\n    const /** @type {?} */ body: HTMLBodyElement = xhr.response.body;\n    body.removeChild( /** @type {?} */((body.firstChild)));\n    return body;\n  }\n/**\n * Use DOMParser to create and fill an inert body element (on Firefox)\n * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n * \n * @param {?} html\n * @return {?}\n */\nprivate getInertBodyElement_DOMParser(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      const /** @type {?} */ body = /** @type {?} */(( new ( /** @type {?} */((window as any)))\n                       .DOMParser()\n                       .parseFromString(html, 'text/html')\n                       .body as HTMLBodyElement));\n      body.removeChild( /** @type {?} */((body.firstChild)));\n      return body;\n    } catch ( /** @type {?} */e) {\n      return null;\n    }\n  }\n/**\n * Use an HTML5 `template` element, if supported, or an inert body element created via\n * `createHtmlDocument` to create and fill an inert DOM element.\n * This is the default sane strategy to use if the browser does not require one of the specialised\n * strategies above.\n * @param {?} html\n * @return {?}\n */\nprivate getInertBodyElement_InertDocument(html: string) {\n    // Prefer using <template> element if supported.\n    const /** @type {?} */ templateEl = this.DOM.createElement('template');\n    if ('content' in templateEl) {\n      this.DOM.setInnerHTML(templateEl, html);\n      return templateEl;\n    }\n\n    this.DOM.setInnerHTML(this.inertBodyElement, html);\n\n    // Support: IE 9-11 only\n    // strip custom-namespaced attributes on IE<=11\n    if (this.defaultDoc.documentMode) {\n      this.stripCustomNsAttrs(this.inertBodyElement);\n    }\n\n    return this.inertBodyElement;\n  }\n/**\n * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n * 'ns1:xlink:foo').\n * \n * This is undesirable since we don't want to allow any of these custom attributes. This method\n * strips them all.\n * @param {?} el\n * @return {?}\n */\nprivate stripCustomNsAttrs(el: Element) {\n    this.DOM.attributeMap(el).forEach((_, attrName) => {\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        this.DOM.removeAttribute(el, attrName);\n      }\n    });\n    for (const /** @type {?} */ n of this.DOM.childNodesAsList(el)) {\n      if (this.DOM.isElementNode(n)) this.stripCustomNsAttrs( /** @type {?} */((n as Element)));\n    }\n  }\n}\n\nfunction InertBodyHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nInertBodyHelper.prototype.inertBodyElement;\n/**\n * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n * The implementation of this is determined in the constructor, when the class is instantiated.\n * @type {?}\n */\nInertBodyHelper.prototype.getInertBodyElement;\n/** @type {?} */\nInertBodyHelper.prototype.defaultDoc;\n/** @type {?} */\nInertBodyHelper.prototype.DOM;\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n * \n * @suppress {uselessCode}\n * @return {?}\n */\nfunction isDOMParserAvailable() {\n  try {\n    return !!( /** @type {?} */((window as any))).DOMParser;\n  } catch ( /** @type {?} */e) {\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/security/inert_body.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n * \n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n * \n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n * \n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst /** @type {?} */ SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nexport function sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    getDOM().log(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => sanitizeUrl(srcset.trim())).join(', ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/security/url_sanitizer.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\n\nimport {InertBodyHelper} from './inert_body';\nimport {sanitizeSrcset, sanitizeUrl} from './url_sanitizer';\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const /** @type {?} */ res: {[k: string]: boolean} = {};\n  for (const /** @type {?} */ t of tags.split(',')) res[t] = true;\n  return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const /** @type {?} */ res: {[k: string]: boolean} = {};\n  for (const /** @type {?} */ s of sets) {\n    for (const /** @type {?} */ v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst /** @type {?} */ BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst /** @type {?} */ INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nconst /** @type {?} */ VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nconst /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nconst /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n\nconst /** @type {?} */ HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nconst /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\npublic sanitizedSomething = false;\nprivate buf: string[] = [];\nprivate DOM = getDOM();\n/**\n * @param {?} el\n * @return {?}\n */\nsanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let /** @type {?} */ current: Node = /** @type {?} */(( this.DOM.firstChild(el)));\n    while (current) {\n      if (this.DOM.isElementNode(current)) {\n        this.startElement( /** @type {?} */((current as Element)));\n      } else if (this.DOM.isTextNode(current)) {\n        this.chars( /** @type {?} */((this.DOM.nodeValue(current))));\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (this.DOM.firstChild(current)) {\n        current = /** @type {?} */(( this.DOM.firstChild(current)));\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (this.DOM.isElementNode(current)) {\n          this.endElement( /** @type {?} */((current as Element)));\n        }\n\n        let /** @type {?} */ next = this.checkClobberedElement(current, /** @type {?} */(( this.DOM.nextSibling(current))));\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, /** @type {?} */(( this.DOM.parentElement(current))));\n      }\n    }\n    return this.buf.join('');\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate startElement(element: Element) {\n    const /** @type {?} */ tagName = this.DOM.nodeName(element).toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return;\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    this.DOM.attributeMap(element).forEach((value: string, attrName: string) => {\n      const /** @type {?} */ lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        return;\n      }\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ');\n      this.buf.push(attrName);\n      this.buf.push('=\"');\n      this.buf.push(encodeEntities(value));\n      this.buf.push('\"');\n    });\n    this.buf.push('>');\n  }\n/**\n * @param {?} current\n * @return {?}\n */\nprivate endElement(current: Element) {\n    const /** @type {?} */ tagName = this.DOM.nodeName(current).toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n/**\n * @param {?} node\n * @param {?} nextNode\n * @return {?}\n */\ncheckClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode && this.DOM.contains(node, nextNode)) {\n      throw new Error(\n          `Failed to sanitize html because the element is clobbered: ${this.DOM.getOuterHTML(node)}`);\n    }\n    return nextNode;\n  }\n}\n\nfunction SanitizingHtmlSerializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSanitizingHtmlSerializer.prototype.sanitizedSomething;\n/** @type {?} */\nSanitizingHtmlSerializer.prototype.buf;\n/** @type {?} */\nSanitizingHtmlSerializer.prototype.DOM;\n}\n\n\n// Regular Expressions for parsing tags and attributes\nconst /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const /** @type {?} */ hi = match.charCodeAt(0);\n            const /** @type {?} */ low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet /** @type {?} */ inertBodyHelper: InertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nexport function sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  const /** @type {?} */ DOM = getDOM();\n  let /** @type {?} */ inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc, DOM);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let /** @type {?} */ mXSSAttempts = 5;\n    let /** @type {?} */ parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = DOM.getInnerHTML(inertBodyElement);\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n    const /** @type {?} */ safeHtml =\n        sanitizer.sanitizeChildren(DOM.getTemplateContent(inertBodyElement) || inertBodyElement);\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n    }\n\n    return safeHtml;\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const /** @type {?} */ parent = DOM.getTemplateContent(inertBodyElement) || inertBodyElement;\n      for (const /** @type {?} */ child of DOM.childNodesAsList(parent)) {\n        DOM.removeChild(parent, child);\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/security/html_sanitizer.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nimport {sanitizeUrl} from './url_sanitizer';\n/**\n * Regular expression for safe style values.\n * \n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n * \n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n * \n * The function expression checks only for XSS safety, not for CSS validity.\n * \n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\nconst /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\nconst /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst /** @type {?} */ SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n * \n * The URL value still needs to be sanitized separately.\n * \n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n * \n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n * \n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n * \n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value: string) {\n  let /** @type {?} */ outsideSingle = true;\n  let /** @type {?} */ outsideDouble = true;\n  for (let /** @type {?} */ i = 0; i < value.length; i++) {\n    const /** @type {?} */ c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nexport function sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const /** @type {?} */ urlMatch = value.match(URL_RE);\n  if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    getDOM().log(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/security/style_sanitizer.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Sanitizer, SecurityContext} from '@angular/core';\n\nimport {DOCUMENT} from '../dom/dom_tokens';\n\nimport {sanitizeHtml} from './html_sanitizer';\nimport {sanitizeStyle} from './style_sanitizer';\nimport {sanitizeUrl} from './url_sanitizer';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @stable\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @stable\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @stable\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @stable\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @stable\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @stable\n */\nexport interface SafeResourceUrl extends SafeValue {}\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n * \n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n * \n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n * \n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n * \n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n * \n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n * \n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n * \n * \\@stable\n * @abstract\n */\nexport abstract class DomSanitizer implements Sanitizer {\n/**\n * Sanitizes a value for use in the given SecurityContext.\n * \n * If value is trusted for the context, this method will unwrap the contained safe value and use\n * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n * is responsible to make sure that the value can definitely be safely used in the given context.\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: SafeValue|string|null) {}\n/**\n * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n * leave safe HTML intact, so in most situations this method should not be used.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustHtml(value: string) {}\n/**\n * Bypass security and trust the given value to be safe style value (CSS).\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustStyle(value: string) {}\n/**\n * Bypass security and trust the given value to be safe JavaScript.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustScript(value: string) {}\n/**\n * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n * in hyperlinks or `<img src>`.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustUrl(value: string) {}\n/**\n * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustResourceUrl(value: string) {}\n}\nexport class DomSanitizerImpl extends DomSanitizer {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) { super(); }\n/**\n * @param {?} ctx\n * @param {?} value\n * @return {?}\n */\nsanitize(ctx: SecurityContext, value: SafeValue|string|null): string|null {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return /** @type {?} */(( value as string));\n      case SecurityContext.HTML:\n        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'HTML');\n        return sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Style');\n        return sanitizeStyle( /** @type {?} */((value as string)));\n      case SecurityContext.SCRIPT:\n        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Script');\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n          // Allow resource URLs in URL contexts, they are strictly more trusted.\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'URL');\n        return sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (value instanceof SafeResourceUrlImpl) {\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'ResourceURL');\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n/**\n * @param {?} value\n * @param {?} expectedType\n * @return {?}\n */\nprivate checkNotSafeValue(value: any, expectedType: string) {\n    if (value instanceof SafeValueImpl) {\n      throw new Error(\n          `Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n          `(see http://g.co/ng/security#xss)`);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustHtml(value: string): SafeHtml { return new SafeHtmlImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustStyle(value: string): SafeStyle { return new SafeStyleImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustScript(value: string): SafeScript { return new SafeScriptImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustUrl(value: string): SafeUrl { return new SafeUrlImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return new SafeResourceUrlImpl(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomSanitizerImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nDomSanitizerImpl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomSanitizerImpl.ctorParameters;\n/** @type {?} */\nDomSanitizerImpl.prototype._doc;\n}\n\n/**\n * @abstract\n */\nabstract class SafeValueImpl implements SafeValue {\n/**\n * @param {?} changingThisBreaksApplicationSecurity\n */\nconstructor(public changingThisBreaksApplicationSecurity: string) {\n    // empty\n  }\n/**\n * @abstract\n * @return {?}\n */\ngetTypeName() {}\n/**\n * @return {?}\n */\ntoString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see http://g.co/ng/security#xss)`;\n  }\n}\n\nfunction SafeValueImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeValueImpl.prototype.changingThisBreaksApplicationSecurity;\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n/**\n * @return {?}\n */\ngetTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n/**\n * @return {?}\n */\ngetTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n/**\n * @return {?}\n */\ngetTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n/**\n * @return {?}\n */\ngetTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n/**\n * @return {?}\n */\ngetTypeName() { return 'ResourceURL'; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/security/dom_sanitization_service.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CommonModule, PlatformLocation, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactory2, RootRenderer, Sanitizer, SkipSelf, Testability, createPlatformFactory, platformCore} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {Meta} from './browser/meta';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {Title} from './browser/title';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS: Provider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@experimental\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl},\n];\n/**\n * \\@stable\n */\nexport const platformBrowser: (extraProviders?: Provider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nexport function _document(): any {\n  return document;\n}\n/**\n * The ng module for the browser.\n * \n * \\@stable\n */\nexport class BrowserModule {\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: BrowserModule) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n/**\n * Configures a browser-based application to transition from a server-rendered app, if\n * one is present on the page. The specified parameters must include an application id,\n * which must match between the client and server applications.\n * \n * \\@experimental\n * @param {?} params\n * @return {?}\n */\nstatic withServerTransition(params: {appId: string}): ModuleWithProviders {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS,\n    {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n    DomRendererFactory2,\n    {provide: RendererFactory2, useExisting: DomRendererFactory2},\n    {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n    DomSharedStylesHost,\n    Testability,\n    EventManager,\n    ELEMENT_PROBE_PROVIDERS,\n    Meta,\n    Title,\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction BrowserModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || <any>{};\nexport {win as window};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/tools/browser.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef, ComponentRef} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\nimport {window} from './browser';\nexport class ChangeDetectionPerfRecord {\n/**\n * @param {?} msPerTick\n * @param {?} numTicks\n */\nconstructor(public msPerTick: number,\npublic numTicks: number) {}\n}\n\nfunction ChangeDetectionPerfRecord_tsickle_Closure_declarations() {\n/** @type {?} */\nChangeDetectionPerfRecord.prototype.msPerTick;\n/** @type {?} */\nChangeDetectionPerfRecord.prototype.numTicks;\n}\n\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nexport class AngularProfiler {\n  appRef: ApplicationRef;\n/**\n * @param {?} ref\n */\nconstructor(ref: ComponentRef<any>) { this.appRef = ref.injector.get(ApplicationRef); }\n/**\n * Exercises change detection in a loop and then prints the average amount of\n * time in milliseconds how long a single round of change detection takes for\n * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n * of 500 milliseconds.\n * \n * Optionally, a user may pass a `config` parameter containing a map of\n * options. Supported options are:\n * \n * `record` (boolean) - causes the profiler to record a CPU profile while\n * it exercises the change detector. Example:\n * \n * ```\n * ng.profiler.timeChangeDetection({record: true})\n * ```\n * @param {?} config\n * @return {?}\n */\ntimeChangeDetection(config: any): ChangeDetectionPerfRecord {\n    const /** @type {?} */ record = config && config['record'];\n    const /** @type {?} */ profileName = 'Change Detection';\n    // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n    const /** @type {?} */ isProfilerAvailable = window.console.profile != null;\n    if (record && isProfilerAvailable) {\n      window.console.profile(profileName);\n    }\n    const /** @type {?} */ start = getDOM().performanceNow();\n    let /** @type {?} */ numTicks = 0;\n    while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n    const /** @type {?} */ end = getDOM().performanceNow();\n    if (record && isProfilerAvailable) {\n      // need to cast to <any> because type checker thinks there's no argument\n      // while in fact there is:\n      //\n      // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n      ( /** @type {?} */((<any>window.console.profileEnd)))(profileName);\n    }\n    const /** @type {?} */ msPerTick = (end - start) / numTicks;\n    window.console.log(`ran ${numTicks} change detection cycles`);\n    window.console.log(`${msPerTick.toFixed(2)} ms per check`);\n\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n}\n\nfunction AngularProfiler_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularProfiler.prototype.appRef;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/tools/common_tools.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentRef} from '@angular/core';\nimport {exportNgVar} from '../../dom/util';\nimport {AngularProfiler} from './common_tools';\n\nconst /** @type {?} */ PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n * \n * Usage:\n * \n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n * \n * \\@experimental All debugging apis are currently experimental.\n * @template T\n * @param {?} ref\n * @return {?}\n */\nexport function enableDebugTools<T>(ref: ComponentRef<T>): ComponentRef<T> {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n * \n * \\@experimental All debugging apis are currently experimental.\n * @return {?}\n */\nexport function disableDebugTools(): void {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/browser/tools/tools.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DebugElement, Predicate, Type} from '@angular/core';\nimport {getDOM} from '../../dom/dom_adapter';\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n * \n * \\@experimental All debugging apis are currently experimental.\n */\nexport class By {\n/**\n * Match all elements.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n * @return {?}\n */\nstatic all(): Predicate<DebugElement> { return (debugElement) => true; }\n/**\n * Match elements by the given CSS selector.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n * @param {?} selector\n * @return {?}\n */\nstatic css(selector: string): Predicate<DebugElement> {\n    return (debugElement) => {\n      return debugElement.nativeElement != null ?\n          getDOM().elementMatches(debugElement.nativeElement, selector) :\n          false;\n    };\n  }\n/**\n * Match elements that have the given directive present.\n * \n * ## Example\n * \n * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n * @param {?} type\n * @return {?}\n */\nstatic directive(type: Type<any>): Predicate<DebugElement> {\n    return (debugElement) => /** @type {?} */(( debugElement.providerTokens)).indexOf(type) !== -1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/dom/debug/by.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ɵinitDomAdapter} from './browser';\nexport {BrowserDomAdapter as ɵBrowserDomAdapter} from './browser/browser_adapter';\nexport {BrowserPlatformLocation as ɵBrowserPlatformLocation} from './browser/location/browser_platform_location';\nexport {TRANSITION_ID as ɵTRANSITION_ID} from './browser/server-transition';\nexport {BrowserGetTestability as ɵBrowserGetTestability} from './browser/testability';\nexport {ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nexport {DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, setRootDomAdapter as ɵsetRootDomAdapter} from './dom/dom_adapter';\nexport {DomRendererFactory2 as ɵDomRendererFactory2, NAMESPACE_URIS as ɵNAMESPACE_URIS, flattenStyles as ɵflattenStyles, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute} from './dom/dom_renderer';\nexport {DomEventsPlugin as ɵDomEventsPlugin} from './dom/events/dom_events';\nexport {HammerGesturesPlugin as ɵHammerGesturesPlugin} from './dom/events/hammer_gestures';\nexport {KeyEventsPlugin as ɵKeyEventsPlugin} from './dom/events/key_events';\nexport {DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost} from './dom/shared_styles_host';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/private_export.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {BrowserModule, platformBrowser} from './browser';\nexport {Meta, MetaDefinition} from './browser/meta';\nexport {Title} from './browser/title';\nexport {disableDebugTools, enableDebugTools} from './browser/tools/tools';\nexport {By} from './dom/debug/by';\nexport {NgProbeToken} from './dom/debug/ng_probe';\nexport {DOCUMENT} from './dom/dom_tokens';\nexport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nexport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from './dom/events/hammer_gestures';\nexport {DomSanitizer, SafeHtml, SafeResourceUrl, SafeScript, SafeStyle, SafeUrl, SafeValue} from './security/dom_sanitization_service';\nexport {ɵBROWSER_SANITIZATION_PROVIDERS,ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,ɵinitDomAdapter,ɵBrowserDomAdapter,ɵBrowserPlatformLocation,ɵTRANSITION_ID,ɵBrowserGetTestability,ɵELEMENT_PROBE_PROVIDERS,ɵDomAdapter,ɵgetDOM,ɵsetRootDomAdapter,ɵDomRendererFactory2,ɵNAMESPACE_URIS,ɵflattenStyles,ɵshimContentAttribute,ɵshimHostAttribute,ɵDomEventsPlugin,ɵHammerGesturesPlugin,ɵKeyEventsPlugin,ɵDomSharedStylesHost,ɵSharedStylesHost} from './private_export';\nexport {VERSION} from './version';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/src/platform-browser.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\nexport {BrowserModule,platformBrowser,Meta,MetaDefinition,Title,disableDebugTools,enableDebugTools,By,NgProbeToken,DOCUMENT,EVENT_MANAGER_PLUGINS,EventManager,HAMMER_GESTURE_CONFIG,HammerGestureConfig,DomSanitizer,SafeHtml,SafeResourceUrl,SafeScript,SafeStyle,SafeUrl,SafeValue,VERSION,ɵBROWSER_SANITIZATION_PROVIDERS,ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,ɵinitDomAdapter,ɵBrowserDomAdapter,ɵBrowserPlatformLocation,ɵTRANSITION_ID,ɵBrowserGetTestability,ɵELEMENT_PROBE_PROVIDERS,ɵDomAdapter,ɵgetDOM,ɵsetRootDomAdapter,ɵDomRendererFactory2,ɵNAMESPACE_URIS,ɵflattenStyles,ɵshimContentAttribute,ɵshimHostAttribute,ɵDomEventsPlugin,ɵHammerGesturesPlugin,ɵKeyEventsPlugin,ɵDomSharedStylesHost,ɵSharedStylesHost} from './src/platform-browser';\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser/public_api.ts","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/Subject.ts","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/Subscription.ts","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/EmptyObservable.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n * \n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `\\@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `\\@angular/platform-webworker` provides\n * one suitable for use with web workers.\n * \n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n * \n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformLocation {\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHrefFromDOM() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @return {?}\n */\npathname() {}\n/**\n * @abstract\n * @return {?}\n */\nsearch() {}\n/**\n * @abstract\n * @return {?}\n */\nhash() {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n}\n/**\n * \\@whatItDoes indicates when a location is initialized\n * \\@experimental\n */\nexport const LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * A serializable version of the event from onPopState or onHashChange\n *\n * @experimental\n */\nexport interface LocationChangeEvent { type: string; }\n\n/**\n * @experimental\n */\nexport interface LocationChangeListener { (e: LocationChangeEvent): any; }\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/platform_location.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {LocationChangeListener} from './platform_location';\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n * \n * This is used under the hood of the {\\@link Location} service.\n * \n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n * \n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n * \n * See these two classes for more.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class LocationStrategy {\n/**\n * @abstract\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash?: boolean) {}\n/**\n * @abstract\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHref() {}\n}\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {\\@link PathLocationStrategy}.\n * \n * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n * \n * ### Example\n * \n * ```typescript\n * import {Component, NgModule} from '\\@angular/core';\n * import {APP_BASE_HREF} from '\\@angular/common';\n * \n * \\@NgModule({ \n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n * \n * \\@stable\n */\nexport const APP_BASE_HREF = new InjectionToken<string>('appBaseHref');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/location_strategy.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {LocationStrategy} from './location_strategy';\n\n/** @experimental */\nexport interface PopStateEvent {\n  pop?: boolean;\n  type?: string;\n  url?: string;\n}\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description \n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n * \n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n * \n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n * \n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nexport class Location {\n/**\n * \\@internal\n */\n_subject: EventEmitter<any> = new EventEmitter();\n/**\n * \\@internal\n */\n_baseHref: string;\n/**\n * \\@internal\n */\n_platformStrategy: LocationStrategy;\n/**\n * @param {?} platformStrategy\n */\nconstructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'type': ev.type,\n      });\n    });\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n/**\n * Normalizes the given path and compares to the current normalized path.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nisCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n/**\n * Given a string representing a URL, returns the normalized URL path without leading or\n * trailing slashes.\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n * Given a string representing a URL, returns the platform-specific external URL path.\n * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and pushes a\n * new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this._platformStrategy.pushState(null, '', path, query);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and replaces\n * the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this._platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n * Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this._platformStrategy.forward(); }\n/**\n * Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this._platformStrategy.back(); }\n/**\n * Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(\n      onNext: (value: PopStateEvent) => void, onThrow?: ((exception: any) => void)|null,\n      onReturn?: (() => void)|null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n/**\n * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n * is.\n * @param {?} params\n * @return {?}\n */\npublic static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n/**\n * Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n * If url has a trailing slash, remove it, otherwise return url as is. This\n * method looks for the first occurence of either #, ?, or the end of the\n * line as `/` characters after any of these should not be replaced.\n * @param {?} url\n * @return {?}\n */\npublic static stripTrailingSlash(url: string): string {\n    const /** @type {?} */ match = url.match(/#|\\?|$/);\n    const /** @type {?} */ pathEndIdx = match && match.index || url.length;\n    const /** @type {?} */ droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n    return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocationStrategy, },\n];\n}\n\nfunction Location_tsickle_Closure_declarations() {\n/** @type {?} */\nLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocation.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._subject;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._baseHref;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._platformStrategy;\n}\n\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/location.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL hash for storing application location data.\n * \\@description \n * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n * \n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class HashLocationStrategy extends LocationStrategy {\nprivate _baseHref: string = '';\n/**\n * @param {?} _platformLocation\n * @param {?=} _baseHref\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        _baseHref?: string) {\n    super();\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    let /** @type {?} */ path = this._platformLocation.hash;\n    if (path == null) path = '#';\n\n    return path.length > 0 ? path.substring(1) : path;\n  }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    const /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? ('#' + url) : url;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url: string|null =\n        this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.pushState(state, title, url);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.replaceState(state, title, url);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction HashLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nHashLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHashLocationStrategy.ctorParameters;\n/** @type {?} */\nHashLocationStrategy.prototype._baseHref;\n/** @type {?} */\nHashLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/hash_location_strategy.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL for storing application location data.\n * \\@description \n * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n * \n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n * \n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class PathLocationStrategy extends LocationStrategy {\nprivate _baseHref: string;\n/**\n * @param {?} _platformLocation\n * @param {?=} href\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    const /** @type {?} */ pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const /** @type {?} */ hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction PathLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nPathLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPathLocationStrategy.ctorParameters;\n/** @type {?} */\nPathLocationStrategy.prototype._baseHref;\n/** @type {?} */\nPathLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/path_location_strategy.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener} from './platform_location';\nexport {LocationStrategy,APP_BASE_HREF} from './location_strategy';\nexport {HashLocationStrategy} from './hash_location_strategy';\nexport {PathLocationStrategy} from './path_location_strategy';\nexport {PopStateEvent,Location} from './location';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/location/index.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, LOCALE_ID} from '@angular/core';\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgLocalization {\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any) {} }\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * \n * \\@internal\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @return {?}\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization): string {\n  let /** @type {?} */ key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n */\nexport class NgLocaleLocalization extends NgLocalization {\n/**\n * @param {?} locale\n */\nconstructor( protected locale: string) { super(); }\n/**\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any): string {\n    const /** @type {?} */ plural = getPluralCase(this.locale, value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NgLocaleLocalization_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLocaleLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLocaleLocalization.ctorParameters;\n/** @type {?} */\nNgLocaleLocalization.prototype.locale;\n}\n\nexport type Plural = number;\nexport let Plural: any = {};\nPlural.Zero = 0;\nPlural.One = 1;\nPlural.Two = 2;\nPlural.Few = 3;\nPlural.Many = 4;\nPlural.Other = 5;\nPlural[Plural.Zero] = \"Zero\";\nPlural[Plural.One] = \"One\";\nPlural[Plural.Two] = \"Two\";\nPlural[Plural.Few] = \"Few\";\nPlural[Plural.Many] = \"Many\";\nPlural[Plural.Other] = \"Other\";\n\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nexport function getPluralCase(locale: string, nLike: number | string): Plural {\n  // TODO(vicb): lazy compute\n  if (typeof nLike === 'string') {\n    nLike = parseInt( /** @type {?} */((<string>nLike)), 10);\n  }\n  const /** @type {?} */ n: number = /** @type {?} */(( nLike as number));\n  const /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const /** @type {?} */ i = Math.floor(Math.abs(n));\n  const /** @type {?} */ v = nDecimal.length;\n  const /** @type {?} */ f = parseInt(nDecimal, 10);\n  const /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    // When there is no specification, the default is always \"other\"\n    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n    // > other (required—general plural form — also used if the language only has a single form)\n    default:\n      return Plural.Other;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/localization.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nexport function parseCookieValue(cookieStr: string, name: string): string|null {\n  name = encodeURIComponent(name);\n  for (const /** @type {?} */ cookie of cookieStr.split(';')) {\n    const /** @type {?} */ eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/cookie.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer, ɵisListLikeIterable as isListLikeIterable, ɵstringify as stringify} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n * \n * \\@howToUse \n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n * \n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * \n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n * \n * \\@stable\n */\nexport class NgClass implements DoCheck {\nprivate _iterableDiffer: IterableDiffer<string>|null;\nprivate _keyValueDiffer: KeyValueDiffer<string, any>|null;\nprivate _initialClasses: string[] = [];\nprivate _rawClass: string[]|Set<string>|{[klass: string]: any};\n/**\n * @param {?} _iterableDiffers\n * @param {?} _keyValueDiffers\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _iterableDiffers: IterableDiffers,\nprivate _keyValueDiffers: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset klass(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset ngClass(v: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const /** @type {?} */ iterableChanges = this._iterableDiffer.diff( /** @type {?} */((this._rawClass as string[])));\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff( /** @type {?} */((this._rawClass as{[k: string]: any})));\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n/**\n * @param {?} rawClassVal\n * @return {?}\n */\nprivate _cleanupClasses(rawClassVal: string[]|{[klass: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n/**\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(klass => this._toggleClass(klass, !isCleanup));\n  }\n/**\n * @param {?} rawClassVal\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyClasses(\n      rawClassVal: string[]|Set<string>|{[klass: string]: any}, isCleanup: boolean) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        ( /** @type {?} */((<any>rawClassVal))).forEach((klass: string) => this._toggleClass(klass, !isCleanup));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => {\n          if (rawClassVal[klass] != null) this._toggleClass(klass, !isCleanup);\n        });\n      }\n    }\n  }\n/**\n * @param {?} klass\n * @param {?} enabled\n * @return {?}\n */\nprivate _toggleClass(klass: string, enabled: any): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(\n          klass => { this._renderer.setElementClass(this._ngEl.nativeElement, klass, !!enabled); });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngClass]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'klass': [{ type: Input, args: ['class', ] },],\n'ngClass': [{ type: Input },],\n};\n}\n\nfunction NgClass_tsickle_Closure_declarations() {\n/** @type {?} */\nNgClass.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgClass.ctorParameters;\n/** @type {?} */\nNgClass.propDecorators;\n/** @type {?} */\nNgClass.prototype._iterableDiffer;\n/** @type {?} */\nNgClass.prototype._keyValueDiffer;\n/** @type {?} */\nNgClass.prototype._initialClasses;\n/** @type {?} */\nNgClass.prototype._rawClass;\n/** @type {?} */\nNgClass.prototype._iterableDiffers;\n/** @type {?} */\nNgClass.prototype._keyValueDiffers;\n/** @type {?} */\nNgClass.prototype._ngEl;\n/** @type {?} */\nNgClass.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_class.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, Provider, SimpleChanges, Type, ViewContainerRef} from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n * \n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n * \n * ### Fine tune control\n * \n * You can control the component creation process by using the following optional attributes:\n * \n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n * \n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n * \n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n * \n * ### Syntax\n * \n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n * \n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n * \n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * ## Example\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n * \n * A more complete example with additional options:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n * \n * \\@experimental\n */\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n   ngComponentOutlet: Type<any>;\n   ngComponentOutletInjector: Injector;\n   ngComponentOutletContent: any[][];\n   ngComponentOutletNgModuleFactory: NgModuleFactory<any>;\nprivate _componentRef: ComponentRef<any>|null = null;\nprivate _moduleRef: NgModuleRef<any>|null = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const /** @type {?} */ componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngComponentOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponentOutlet': [{ type: Input },],\n'ngComponentOutletInjector': [{ type: Input },],\n'ngComponentOutletContent': [{ type: Input },],\n'ngComponentOutletNgModuleFactory': [{ type: Input },],\n};\n}\n\nfunction NgComponentOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentOutlet.ctorParameters;\n/** @type {?} */\nNgComponentOutlet.propDecorators;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutlet;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletInjector;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletContent;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n/** @type {?} */\nNgComponentOutlet.prototype._componentRef;\n/** @type {?} */\nNgComponentOutlet.prototype._moduleRef;\n/** @type {?} */\nNgComponentOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_component_outlet.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef, TrackByFunction, ViewContainerRef, forwardRef, isDevMode} from '@angular/core';\n/**\n * \\@stable\n */\nexport class NgForOfContext<T> {\n/**\n * @param {?} $implicit\n * @param {?} ngForOf\n * @param {?} index\n * @param {?} count\n */\nconstructor(\npublic $implicit: T,\npublic ngForOf: NgIterable<T>,\npublic index: number,\npublic count: number) {}\n/**\n * @return {?}\n */\nget first(): boolean { return this.index === 0; }\n/**\n * @return {?}\n */\nget last(): boolean { return this.index === this.count - 1; }\n/**\n * @return {?}\n */\nget even(): boolean { return this.index % 2 === 0; }\n/**\n * @return {?}\n */\nget odd(): boolean { return !this.even; }\n}\n\nfunction NgForOfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOfContext.prototype.$implicit;\n/** @type {?} */\nNgForOfContext.prototype.ngForOf;\n/** @type {?} */\nNgForOfContext.prototype.index;\n/** @type {?} */\nNgForOfContext.prototype.count;\n}\n\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n * \n * ### Local Variables\n * \n * `NgForOf` provides several exported values that can be aliased to local variables:\n * \n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n * \n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n * \n * ### Change Propagation\n * \n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n * \n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n * \n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * \n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n * \n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n * \n * ### Syntax\n * \n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n * - `<li template=\"ngFor let item of items; index as i; trackBy: trackByFn\">...</li>`\n * \n * With `<ng-template>` element:\n * \n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n * \n * ### Example\n * \n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n * \n * \\@stable\n */\nexport class NgForOf<T> implements DoCheck, OnChanges {\n   ngForOf: NgIterable<T>;\n/**\n * @param {?} fn\n * @return {?}\n */\nset ngForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      // TODO(vicb): use a log service once there is a public one available\n      if ( /** @type {?} */((<any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(\n            `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n      }\n    }\n    this._trackByFn = fn;\n  }\n/**\n * @return {?}\n */\nget ngForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\nprivate _differ: IterableDiffer<T>|null = null;\nprivate _trackByFn: TrackByFunction<T>;\n/**\n * @param {?} _viewContainer\n * @param {?} _template\n * @param {?} _differs\n */\nconstructor(\nprivate _viewContainer: ViewContainerRef,\nprivate _template: TemplateRef<NgForOfContext<T>>,\nprivate _differs: IterableDiffers) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngForTemplate(value: TemplateRef<NgForOfContext<T>>) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('ngForOf' in changes) {\n      // React on ngForOf changes only once all inputs have been initialized\n      const /** @type {?} */ value = changes['ngForOf'].currentValue;\n      if (!this._differ && value) {\n        try {\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        } catch ( /** @type {?} */e) {\n          throw new Error(\n              `Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: IterableChanges<T>) {\n    const /** @type {?} */ insertTuples: RecordViewTuple<T>[] = [];\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            const /** @type {?} */ view = this._viewContainer.createEmbeddedView(\n                this._template, new NgForOfContext<T>( /** @type {?} */((null)), this.ngForOf, -1, -1), currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple<T>(item, view);\n            insertTuples.push(tuple);\n          } else if (currentIndex == null) {\n            this._viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const /** @type {?} */ view = /** @type {?} */(( this._viewContainer.get(adjustedPreviousIndex)));\n            this._viewContainer.move(view, currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>view)));\n            insertTuples.push(tuple);\n          }\n        });\n\n    for (let /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n      const /** @type {?} */ viewRef = /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(i)));\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n    }\n\n    changes.forEachIdentityChange((record: any) => {\n      const /** @type {?} */ viewRef = /** @type {?} */((\n          <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(record.currentIndex)));\n      viewRef.context.$implicit = record.item;\n    });\n  }\n/**\n * @param {?} view\n * @param {?} record\n * @return {?}\n */\nprivate _perViewChange(\n      view: EmbeddedViewRef<NgForOfContext<T>>, record: IterableChangeRecord<any>) {\n    view.context.$implicit = record.item;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngFor][ngForOf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngForOf': [{ type: Input },],\n'ngForTrackBy': [{ type: Input },],\n'ngForTemplate': [{ type: Input },],\n};\n}\n\nfunction NgForOf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForOf.ctorParameters;\n/** @type {?} */\nNgForOf.propDecorators;\n/** @type {?} */\nNgForOf.prototype.ngForOf;\n/** @type {?} */\nNgForOf.prototype._differ;\n/** @type {?} */\nNgForOf.prototype._trackByFn;\n/** @type {?} */\nNgForOf.prototype._viewContainer;\n/** @type {?} */\nNgForOf.prototype._template;\n/** @type {?} */\nNgForOf.prototype._differs;\n}\n\nclass RecordViewTuple<T> {\n/**\n * @param {?} record\n * @param {?} view\n */\nconstructor(public record: any,\npublic view: EmbeddedViewRef<NgForOfContext<T>>) {}\n}\n\nfunction RecordViewTuple_tsickle_Closure_declarations() {\n/** @type {?} */\nRecordViewTuple.prototype.record;\n/** @type {?} */\nRecordViewTuple.prototype.view;\n}\n\n\n/**\n * @deprecated from v4.0.0 - Use NgForOf<any> instead.\n */\nexport type NgFor = NgForOf<any>;\n/**\n * @deprecated from v4.0.0 - Use NgForOf instead.\n */\nexport const NgFor = NgForOf;\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_for_of.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * Conditionally includes a template based on the value of an `expression`.\n * \n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n * \n * ## Most common usage\n * \n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n * \n * ## Showing an alternative template using `else`\n * \n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n * \n * ## Using non-inlined `then` template\n * \n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n * \n * ## Storing conditional result in a variable\n * \n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n * \n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n * \n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n * \n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n * \n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n * \n * ### Syntax\n * \n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<div template=\"ngIf condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n * \n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * \\@stable\n */\nexport class NgIf {\nprivate _context: NgIfContext = new NgIfContext();\nprivate _thenTemplateRef: TemplateRef<NgIfContext>|null = null;\nprivate _elseTemplateRef: TemplateRef<NgIfContext>|null = null;\nprivate _thenViewRef: EmbeddedViewRef<NgIfContext>|null = null;\nprivate _elseViewRef: EmbeddedViewRef<NgIfContext>|null = null;\n/**\n * @param {?} _viewContainer\n * @param {?} templateRef\n */\nconstructor(private _viewContainer: ViewContainerRef, templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n  }\n/**\n * @param {?} condition\n * @return {?}\n */\nset ngIf(condition: any) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfThen(templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfElse(templateRef: TemplateRef<NgIfContext>) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @return {?}\n */\nprivate _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef =\n              this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef =\n              this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngIf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngIf': [{ type: Input },],\n'ngIfThen': [{ type: Input },],\n'ngIfElse': [{ type: Input },],\n};\n}\n\nfunction NgIf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgIf.ctorParameters;\n/** @type {?} */\nNgIf.propDecorators;\n/** @type {?} */\nNgIf.prototype._context;\n/** @type {?} */\nNgIf.prototype._thenTemplateRef;\n/** @type {?} */\nNgIf.prototype._elseTemplateRef;\n/** @type {?} */\nNgIf.prototype._thenViewRef;\n/** @type {?} */\nNgIf.prototype._elseViewRef;\n/** @type {?} */\nNgIf.prototype._viewContainer;\n}\n\n/**\n * \\@stable\n */\nexport class NgIfContext {\npublic $implicit: any = null;\npublic ngIf: any = null;\n}\n\nfunction NgIfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIfContext.prototype.$implicit;\n/** @type {?} */\nNgIfContext.prototype.ngIf;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_if.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nexport class SwitchView {\nprivate _created = false;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _templateRef\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _templateRef: TemplateRef<Object>) {}\n/**\n * @return {?}\n */\ncreate(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n/**\n * @param {?} created\n * @return {?}\n */\nenforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\nfunction SwitchView_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchView.prototype._created;\n/** @type {?} */\nSwitchView.prototype._viewContainerRef;\n/** @type {?} */\nSwitchView.prototype._templateRef;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description \n * \n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n * \n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n * \n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n * \n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n * \n * \\@stable\n */\nexport class NgSwitch {\nprivate _defaultViews: SwitchView[];\nprivate _defaultUsed = false;\nprivate _caseCount = 0;\nprivate _lastCaseCheckIndex = 0;\nprivate _lastCasesMatched = false;\nprivate _ngSwitch: any;\n/**\n * @param {?} newValue\n * @return {?}\n */\nset ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_addCase(): number { return this._caseCount++; }\n/**\n * \\@internal\n * @param {?} view\n * @return {?}\n */\n_addDefault(view: SwitchView) {\n    if (!this._defaultViews) {\n      this._defaultViews = [];\n    }\n    this._defaultViews.push(view);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_matchCase(value: any): boolean {\n    const /** @type {?} */ matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n/**\n * @param {?} useDefault\n * @return {?}\n */\nprivate _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (let /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n        const /** @type {?} */ defaultView = this._defaultViews[i];\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitch]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitch': [{ type: Input },],\n};\n}\n\nfunction NgSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitch.ctorParameters;\n/** @type {?} */\nNgSwitch.propDecorators;\n/** @type {?} */\nNgSwitch.prototype._defaultViews;\n/** @type {?} */\nNgSwitch.prototype._defaultUsed;\n/** @type {?} */\nNgSwitch.prototype._caseCount;\n/** @type {?} */\nNgSwitch.prototype._lastCaseCheckIndex;\n/** @type {?} */\nNgSwitch.prototype._lastCasesMatched;\n/** @type {?} */\nNgSwitch.prototype._ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n *             given expression evaluate to respectively the same/different value as the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description \n * \n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n * \n * If multiple match expressions match the switch expression value, all of them are displayed.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchCase implements DoCheck {\nprivate _view: SwitchView;\n\n  \n  ngSwitchCase: any;\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\nprivate ngSwitch: NgSwitch) {\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n/**\n * @return {?}\n */\nngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitchCase': [{ type: Input },],\n};\n}\n\nfunction NgSwitchCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchCase.ctorParameters;\n/** @type {?} */\nNgSwitchCase.propDecorators;\n/** @type {?} */\nNgSwitchCase.prototype._view;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitchCase;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the\n *             switch expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n * \n * \\@description \n * \n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchDefault {\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n       ngSwitch: NgSwitch) {\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchDefault]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgSwitchDefault_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchDefault.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchDefault.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_switch.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n * \n * \\@description \n * \n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n * \n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n * \n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n * \n * \\@experimental\n */\nexport class NgPlural {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews: {[k: string]: SwitchView} = {};\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @param {?} value\n * @param {?} switchView\n * @return {?}\n */\naddCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n/**\n * @return {?}\n */\nprivate _updateView(): void {\n    this._clearViews();\n\n    const /** @type {?} */ cases = Object.keys(this._caseViews);\n    const /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n/**\n * @return {?}\n */\nprivate _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n/**\n * @param {?} view\n * @return {?}\n */\nprivate _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\n\nfunction NgPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPlural.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPlural.ctorParameters;\n/** @type {?} */\nNgPlural.propDecorators;\n/** @type {?} */\nNgPlural.prototype._switchValue;\n/** @type {?} */\nNgPlural.prototype._activeView;\n/** @type {?} */\nNgPlural.prototype._caseViews;\n/** @type {?} */\nNgPlural.prototype._localization;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n * \n * See {\\@link NgPlural} for more details and example.\n * \n * \\@experimental\n */\nexport class NgPluralCase {\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n * @param {?} ngPlural\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef,  ngPlural: NgPlural) {\n    const isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgPluralCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPluralCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPluralCase.ctorParameters;\n/** @type {?} */\nNgPluralCase.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_plural.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\nprivate _setStyle(nameAndUnit: string, value: string|number|null|undefined): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngStyle': [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_style.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EmbeddedViewRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n * \n * \\@howToUse \n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n * \n * \\@description \n * \n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n * \n * Note: using the key `$implicit` in the context object will set it's value as default.\n * \n * ## Example\n * \n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n * \n * \\@experimental\n */\nexport class NgTemplateOutlet implements OnChanges {\nprivate _viewRef: EmbeddedViewRef<any>;\npublic ngTemplateOutletContext: Object;\npublic ngTemplateOutlet: TemplateRef<any>;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.\n * @param {?} context\n * @return {?}\n */\nset ngOutletContext(context: Object) { this.ngTemplateOutletContext = context; }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (this._viewRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n    }\n\n    if (this.ngTemplateOutlet) {\n      this._viewRef = this._viewContainerRef.createEmbeddedView(\n          this.ngTemplateOutlet, this.ngTemplateOutletContext);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngTemplateOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngTemplateOutletContext': [{ type: Input },],\n'ngTemplateOutlet': [{ type: Input },],\n'ngOutletContext': [{ type: Input },],\n};\n}\n\nfunction NgTemplateOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTemplateOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTemplateOutlet.ctorParameters;\n/** @type {?} */\nNgTemplateOutlet.propDecorators;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewRef;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutletContext;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutlet;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/ng_template_outlet.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Provider} from '@angular/core';\n\nimport {NgClass} from './ng_class';\nimport {NgComponentOutlet} from './ng_component_outlet';\nimport {NgFor, NgForOf, NgForOfContext} from './ng_for_of';\nimport {NgIf, NgIfContext} from './ng_if';\nimport {NgPlural, NgPluralCase} from './ng_plural';\nimport {NgStyle} from './ng_style';\nimport {NgSwitch, NgSwitchCase, NgSwitchDefault} from './ng_switch';\nimport {NgTemplateOutlet} from './ng_template_outlet';\n\nexport {\n  NgClass,\n  NgComponentOutlet,\n  NgFor,\n  NgForOf,\n  NgForOfContext,\n  NgIf,\n  NgIfContext,\n  NgPlural,\n  NgPluralCase,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgTemplateOutlet\n};\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nexport const COMMON_DIRECTIVES: Provider[] = [\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgPlural,\n  NgPluralCase,\n];\n/**\n * A collection of deprecated directives that are no longer part of the core module.\n */\nexport const COMMON_DEPRECATED_DIRECTIVES: Provider[] = [NgFor];\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/directives/index.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type, ɵstringify as stringify} from '@angular/core';\n/**\n * @param {?} type\n * @param {?} value\n * @return {?}\n */\nexport function invalidPipeArgumentError(type: Type<any>, value: Object) {\n  return Error(`InvalidPipeArgument: '${value}' for pipe '${stringify(type)}'`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/invalid_pipe_argument_error.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, EventEmitter, OnDestroy, Pipe, PipeTransform, WrappedValue, ɵisObservable, ɵisPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {ISubscription} from 'rxjs/Subscription';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\ninterface SubscriptionStrategy {\n  createSubscription(async: Observable<any>|Promise<any>, updateLatestValue: any): ISubscription\n      |Promise<any>;\n  dispose(subscription: ISubscription|Promise<any>): void;\n  onDestroy(subscription: ISubscription|Promise<any>): void;\n}\nclass ObservableStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Observable<any>, updateLatestValue: any): ISubscription {\n    return async.subscribe({next: updateLatestValue, error: (e: any) => { throw e; }});\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: ISubscription): void { subscription.unsubscribe(); }\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: ISubscription): void { subscription.unsubscribe(); }\n}\nclass PromiseStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): Promise<any> {\n    return async.then(updateLatestValue, e => { throw e; });\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: Promise<any>): void {}\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: Promise<any>): void {}\n}\n\nconst /** @type {?} */ _promiseStrategy = new PromiseStrategy();\nconst /** @type {?} */ _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n * \\@howToUse `observable_or_promise_expression | async`\n * \\@description \n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n * \n * \n * ## Examples\n * \n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n * \n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n * \n * \\@stable\n */\nexport class AsyncPipe implements OnDestroy, PipeTransform {\nprivate _latestValue: any = null;\nprivate _latestReturnedValue: any = null;\nprivate _subscription: ISubscription|Promise<any>|null = null;\nprivate _obj: Observable<any>|Promise<any>|EventEmitter<any>|null = null;\nprivate _strategy: SubscriptionStrategy = /** @type {?} */(( null));\n/**\n * @param {?} _ref\n */\nconstructor(private _ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._subscription) {\n      this._dispose();\n    }\n  }\n\n  transform<T>(obj: null): null;\n  transform<T>(obj: undefined): undefined;\n  transform<T>(obj: Observable<T>): T|null;\n  transform<T>(obj: Promise<T>): T|null;\n/**\n * @param {?} obj\n * @return {?}\n */\ntransform(obj: Observable<any>|Promise<any>|null|undefined): any {\n    if (!this._obj) {\n      if (obj) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform( /** @type {?} */((obj as any)));\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _subscribe(obj: Observable<any>|Promise<any>|EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _selectStrategy(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (ɵisPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (ɵisObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n/**\n * @return {?}\n */\nprivate _dispose(): void {\n    this._strategy.dispose( /** @type {?} */((this._subscription)));\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n/**\n * @param {?} async\n * @param {?} value\n * @return {?}\n */\nprivate _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'async', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction AsyncPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nAsyncPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAsyncPipe.ctorParameters;\n/** @type {?} */\nAsyncPipe.prototype._latestValue;\n/** @type {?} */\nAsyncPipe.prototype._latestReturnedValue;\n/** @type {?} */\nAsyncPipe.prototype._subscription;\n/** @type {?} */\nAsyncPipe.prototype._obj;\n/** @type {?} */\nAsyncPipe.prototype._strategy;\n/** @type {?} */\nAsyncPipe.prototype._ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/async_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * Transforms text to lowercase.\n * \n * {\\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n * \n * \\@stable\n */\nexport class LowerCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LowerCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLowerCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLowerCasePipe.ctorParameters;\n}\n\n/**\n * Helper method to transform a single word to titlecase.\n * \n * \\@stable\n * @param {?} word\n * @return {?}\n */\nfunction titleCaseWord(word: string) {\n  if (!word) return word;\n  return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n/**\n * Transforms text to titlecase.\n * \n * \\@stable\n */\nexport class TitleCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n\n    return value.split(/\\b/g).map(word => titleCaseWord(word)).join('');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'titlecase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TitleCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTitleCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitleCasePipe.ctorParameters;\n}\n\n/**\n * Transforms text to uppercase.\n * \n * \\@stable\n */\nexport class UpperCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UpperCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nUpperCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUpperCasePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/case_conversion_pipes.ts","\nexport type NumberFormatStyle = number;\nexport let NumberFormatStyle: any = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\nexport class NumberFormatter {\n/**\n * @param {?} num\n * @param {?} locale\n * @param {?} style\n * @param {?=} opts\n * @return {?}\n */\nstatic format(num: number, locale: string, style: NumberFormatStyle, opts: {\n    minimumIntegerDigits?: number,\n    minimumFractionDigits?: number,\n    maximumFractionDigits?: number,\n    currency?: string|null,\n    currencyAsSymbol?: boolean\n  } = {}): string {\n    const {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n           currencyAsSymbol = false} = opts;\n    const /** @type {?} */ options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = typeof currency == 'string' ? currency : undefined;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst /** @type {?} */ PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const /** @type {?} */ options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return options.reduce((merged, opt) => ({...merged, ...opt}), {});\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst /** @type {?} */ DATE_FORMATTER_CACHE = new Map<string, string[]>();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const /** @type {?} */ fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const /** @type {?} */ cacheKey = format;\n  let /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let /** @type {?} */ match: RegExpExecArray|null;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    let /** @type {?} */ _format: string|null = format;\n    while (_format) {\n      match = DATE_FORMATS_SPLIT.exec(_format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        _format = /** @type {?} */(( parts.pop()));\n      } else {\n        parts.push(_format);\n        _format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const /** @type {?} */ fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nexport class DateFormatter {\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} pattern\n * @return {?}\n */\nstatic format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/intl.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform, Type} from '@angular/core';\nimport {NumberFormatStyle, NumberFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?=} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(\n    pipe: Type<any>, locale: string, value: number | string, style: NumberFormatStyle,\n    digits?: string | null, currency: string | null = null,\n    currencyAsSymbol: boolean = false): string|null {\n  if (value == null) return null;\n\n  // Convert strings to numbers\n  value = typeof value === 'string' && isNumeric(value) ? +value : value;\n  if (typeof value !== 'number') {\n    throw invalidPipeArgumentError(pipe, value);\n  }\n\n  let /** @type {?} */ minInt: number|undefined = undefined;\n  let /** @type {?} */ minFraction: number|undefined = undefined;\n  let /** @type {?} */ maxFraction: number|undefined = undefined;\n  if (style !== NumberFormatStyle.Currency) {\n    // rely on Intl default for currency\n    minInt = 1;\n    minFraction = 0;\n    maxFraction = 3;\n  }\n\n  if (digits) {\n    const /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n    if (parts === null) {\n      throw new Error(`${digits} is not a valid digit info for number pipes`);\n    }\n    if (parts[1] != null) {  // min integer digits\n      minInt = parseIntAutoRadix(parts[1]);\n    }\n    if (parts[3] != null) {  // min fraction digits\n      minFraction = parseIntAutoRadix(parts[3]);\n    }\n    if (parts[5] != null) {  // max fraction digits\n      maxFraction = parseIntAutoRadix(parts[5]);\n    }\n  }\n\n  return NumberFormatter.format( /** @type {?} */((value as number)), locale, style, {\n    minimumIntegerDigits: minInt,\n    minimumFractionDigits: minFraction,\n    maximumFractionDigits: maxFraction,\n    currency: currency,\n    currencyAsSymbol: currencyAsSymbol,\n  });\n}\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo]`\n * \n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n * \n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n * \n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n * \n * \\@stable\n */\nexport class DecimalPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits?: string): string|null {\n    return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'number'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalPipe.ctorParameters;\n/** @type {?} */\nDecimalPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo]`\n * \n * \\@description \n * \n * Formats a number as percentage.\n * \n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n * \n * \\@stable\n */\nexport class PercentPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits?: string): string|null {\n    return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'percent'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction PercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nPercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPercentPipe.ctorParameters;\n/** @type {?} */\nPercentPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n * \\@description \n * \n * Use `currency` to format a number as currency.\n * \n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n * \n * \\@stable\n */\nexport class CurrencyPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} currencyCode\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\ntransform(\n      value: any, currencyCode: string = 'USD', symbolDisplay: boolean = false,\n      digits?: string): string|null {\n    return formatNumber(\n        CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode,\n        symbolDisplay);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'currency'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction CurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCurrencyPipe.ctorParameters;\n/** @type {?} */\nCurrencyPipe.prototype._locale;\n}\n\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text: string): number {\n  const /** @type {?} */ result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumeric(value: any): boolean {\n  return !isNaN(value - parseFloat(value));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/number_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {DateFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\nimport {isNumeric} from './number_pipe';\n\nconst /** @type {?} */ ISO8601_DATE_REGEX =\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a date according to locale rules.\n * \\@howToUse `date_expression | date[:format]`\n * \\@description \n * \n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n * \n * \n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (1 PM)  | jj (1 PM) |\n *  | hour12    |   h    | -      | -            | -                 | h (1)     | hh (01)   |\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n * \n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n * \n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n * \n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n * \n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n * \n * ### Examples\n * \n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n * \n * ```\n *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n * \n * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n * \n * \\@stable\n */\nexport class DatePipe implements PipeTransform {\n/**\n * \\@internal\n */\nstatic _ALIASES: {[key: string]: string} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} pattern\n * @return {?}\n */\ntransform(value: any, pattern: string = 'mediumDate'): string|null {\n    let /** @type {?} */ date: Date;\n\n    if (isBlank(value) || value !== value) return null;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (isDate(value)) {\n      date = value;\n    } else if (isNumeric(value)) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n/**\n * For ISO Strings without time the day, month and year must be extracted from the ISO String\n * before Date creation to avoid time offset and errors in the new Date.\n * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n * date, some browsers (e.g. IE 9) will throw an invalid Date error\n * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n * is applied\n * Note: ISO months are 0 for January, 1 for February, ...\n */\nconst [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let /** @type {?} */ match: RegExpMatchArray|null;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DatePipe, value);\n      }\n    }\n\n    return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DatePipe_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nDatePipe._ALIASES;\n/** @type {?} */\nDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipe.ctorParameters;\n/** @type {?} */\nDatePipe.prototype._locale;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isBlank(obj: any): boolean {\n  return obj == null || obj === '';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDate(obj: any): obj is Date {\n  return obj instanceof Date && !isNaN(obj.valueOf());\n}\n/**\n * @param {?} match\n * @return {?}\n */\nfunction isoStringToDate(match: RegExpMatchArray): Date {\n  const /** @type {?} */ date = new Date(0);\n  let /** @type {?} */ tzHour = 0;\n  let /** @type {?} */ tzMin = 0;\n  const /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n  if (match[9]) {\n    tzHour = toInt(match[9] + match[10]);\n    tzMin = toInt(match[9] + match[11]);\n  }\n  dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n  const /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n  const /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n  const /** @type {?} */ s = toInt(match[6] || '0');\n  const /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction toInt(str: string): number {\n  return parseInt(str, 10);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/date_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {NgLocalization, getPluralCategory} from '../localization';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _INTERPOLATION_REGEXP: RegExp = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n * \\@howToUse `expression | i18nPlural:mapping`\n * \\@description \n * \n *  Where:\n *  - `expression` is a number.\n *  - `mapping` is an object that mimics the ICU format, see\n *    http://userguide.icu-project.org/formatparse/messages\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n * \n * \\@experimental\n */\nexport class I18nPluralPipe implements PipeTransform {\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @param {?} pluralMap\n * @return {?}\n */\ntransform(value: number, pluralMap: {[count: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n\n    const /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\n}\n\nfunction I18nPluralPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nPluralPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nPluralPipe.ctorParameters;\n/** @type {?} */\nI18nPluralPipe.prototype._localization;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/i18n_plural_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string|null|undefined, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/i18n_select_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description \n * \n * Converts value into string using `JSON.stringify`. Useful for debugging.\n * \n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n * \n * \\@stable\n */\nexport class JsonPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: any): string { return JSON.stringify(value, null, 2); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'json', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/json_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n * \\@howToUse `array_or_string_expression | slice:start[:end]`\n * \\@description \n * \n * Where the input expression is a `List` or `String`, and:\n * - `start`: The starting index of the subset to return.\n *   - **a positive integer**: return the item at `start` index and all items after\n *     in the list or string expression.\n *   - **a negative integer**: return the item at `start` index from the end and all items after\n *     in the list or string expression.\n *   - **if positive and greater than the size of the expression**: return an empty list or string.\n *   - **if negative and greater than the size of the expression**: return entire list or string.\n * - `end`: The ending index of the subset to return.\n *   - **omitted**: return all items until the end.\n *   - **if positive**: return all items before `end` index of the list or string.\n *   - **if negative**: return all items before `end` index from the end of the list or string.\n * \n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n * \n * When operating on a [List], the returned list is always a copy even when all\n * the elements are being returned.\n * \n * When operating on a blank value, the pipe returns the blank value.\n * \n * ## List Example\n * \n * This `ngFor` example:\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n * \n * produces the following:\n * \n *     <li>b</li>\n *     <li>c</li>\n * \n * ## String Examples\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n * \n * \\@stable\n */\nexport class SlicePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} start\n * @param {?=} end\n * @return {?}\n */\ntransform(value: any, start: number, end?: number): any {\n    if (value == null) return value;\n\n    if (!this.supports(value)) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n\n    return value.slice(start, end);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate supports(obj: any): boolean { return typeof obj === 'string' || Array.isArray(obj); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'slice', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SlicePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSlicePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlicePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/slice_pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\n\nimport {AsyncPipe} from './async_pipe';\nimport {LowerCasePipe, TitleCasePipe, UpperCasePipe} from './case_conversion_pipes';\nimport {DatePipe} from './date_pipe';\nimport {I18nPluralPipe} from './i18n_plural_pipe';\nimport {I18nSelectPipe} from './i18n_select_pipe';\nimport {JsonPipe} from './json_pipe';\nimport {CurrencyPipe, DecimalPipe, PercentPipe} from './number_pipe';\nimport {SlicePipe} from './slice_pipe';\n\nexport {\n  AsyncPipe,\n  CurrencyPipe,\n  DatePipe,\n  DecimalPipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  JsonPipe,\n  LowerCasePipe,\n  PercentPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe\n};\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nexport const COMMON_PIPES = [\n  AsyncPipe,\n  UpperCasePipe,\n  LowerCasePipe,\n  JsonPipe,\n  SlicePipe,\n  DecimalPipe,\n  PercentPipe,\n  TitleCasePipe,\n  CurrencyPipe,\n  DatePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n];\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/pipes/index.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {COMMON_DEPRECATED_DIRECTIVES, COMMON_DIRECTIVES} from './directives/index';\nimport {NgLocaleLocalization, NgLocalization} from './localization';\nimport {COMMON_PIPES} from './pipes/index';\n/**\n * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgForOf}, ...\n * \n * \\@stable\n */\nexport class CommonModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommonModule.ctorParameters;\n}\n\n/**\n * I18N pipes are being changed to move away from using the JS Intl API.\n * \n * The former pipes relying on the Intl API will be moved to this module while the `CommonModule`\n * will contain the new pipes that do not rely on Intl.\n * \n * As a first step this module is created empty to ease the migration.\n * \n * see https://github.com/angular/angular/pull/18284\n * \n * @deprecated from v5\n */\nexport class DeprecatedI18NPipesModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: [], exports: []}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DeprecatedI18NPipesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDeprecatedI18NPipesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDeprecatedI18NPipesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/common_module.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n * \n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n * \n * \\@stable\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/dom_tokens.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nexport {PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener,LocationStrategy,APP_BASE_HREF,HashLocationStrategy,PathLocationStrategy,PopStateEvent,Location} from './location/index';\nexport {NgLocaleLocalization, NgLocalization} from './localization';\nexport {parseCookieValue as ɵparseCookieValue} from './cookie';\nexport {CommonModule, DeprecatedI18NPipesModule} from './common_module';\nexport {NgClass, NgFor, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet} from './directives/index';\nexport {DOCUMENT} from './dom_tokens';\nexport {AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe} from './pipes/index';\nexport {PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi} from './platform_id';\nexport {VERSION} from './version';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/src/common.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nexport {NgLocaleLocalization,NgLocalization,ɵparseCookieValue,CommonModule,DeprecatedI18NPipesModule,NgClass,NgFor,NgForOf,NgForOfContext,NgIf,NgIfContext,NgPlural,NgPluralCase,NgStyle,NgSwitch,NgSwitchCase,NgSwitchDefault,NgTemplateOutlet,NgComponentOutlet,DOCUMENT,AsyncPipe,DatePipe,I18nPluralPipe,I18nSelectPipe,JsonPipe,LowerCasePipe,CurrencyPipe,DecimalPipe,PercentPipe,SlicePipe,UpperCasePipe,TitleCasePipe,ɵPLATFORM_BROWSER_ID,ɵPLATFORM_SERVER_ID,ɵPLATFORM_WORKER_APP_ID,ɵPLATFORM_WORKER_UI_ID,isPlatformBrowser,isPlatformServer,isPlatformWorkerApp,isPlatformWorkerUi,VERSION,PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener,LocationStrategy,APP_BASE_HREF,HashLocationStrategy,PathLocationStrategy,PopStateEvent,Location} from './src/common';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/common/public_api.ts","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 36\n// module chunks = 2 3","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 37\n// module chunks = 2 3","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap) {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n  var base64 = new Buffer(JSON.stringify(sourceMap)).toString('base64');\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n  return '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 53\n// module chunks = 2 3","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 54\n// module chunks = 2 3","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 55\n// module chunks = 2 3","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/OuterSubscriber.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/ArrayObservable.ts","import { map as higherOrderMap } from '../operators/map';\nimport { Observable } from '../Observable';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(this: Observable<T>, project: (value: T, index: number) => R, thisArg?: any): Observable<R> {\n  return higherOrderMap(project, thisArg)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/map.ts","\nimport { ObservableInput } from '../Observable';\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): MonoTypeOperatorFunction<T> {\n  return mergeMap(identity as (value: T, index: number) => ObservableInput<{}>, null, concurrent);\n}\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/mergeAll.ts","import { Observable, ObservableInput } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): OperatorFunction<T, R>;\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, I|R> {\n  return function mergeMapOperatorFunction(source: Observable<T>) {\n    if (typeof resultSelector === 'number') {\n      concurrent = <number>resultSelector;\n      resultSelector = null;\n    }\n    return source.lift(new MergeMapOperator(project, <any>resultSelector, concurrent));\n  };\n}\n\nexport class MergeMapOperator<T, I, R> implements Operator<T, I> {\n  constructor(private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<I>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.resultSelector, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, I, R> extends OuterSubscriber<T, I> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<I>,\n              private project: (value: T, index: number) => ObservableInput<I>,\n              private resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<I>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<I>, value: T, index: number): void {\n    this.add(subscribeToResult<T, I>(this, ish, value, index));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: I,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, I>): void {\n    if (this.resultSelector) {\n      this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } else {\n      this.destination.next(innerValue);\n    }\n  }\n\n  private _notifyResultSelector(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) {\n    let result: R;\n    try {\n      result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/mergeMap.ts","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const iterator = symbolIteratorPonyfill(root);\n\n/**\n * @deprecated use iterator instead\n */\nexport const $$iterator = iterator;\n\n\n\n// WEBPACK FOOTER //\n// ../../src/symbol/iterator.ts","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const observable = getSymbolObservable(root);\n\n/**\n * @deprecated use observable instead\n */\nexport const $$observable = observable;\n\n\n\n// WEBPACK FOOTER //\n// ../../src/symbol/observable.ts","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n\n\n\n// WEBPACK FOOTER //\n// ../../src/symbol/rxSubscriber.ts","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n  constructor() {\n    const err: any = super('no elements in sequence');\n    (<any> this).name = err.name = 'EmptyError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/EmptyError.ts","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isArray.ts","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      destination.syncErrorThrowable = true;\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[Symbol_iterator] === 'function') {\n    const iterator = <any>result[Symbol_iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[Symbol_observable] === 'function') {\n    const obs = result[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/subscribeToResult.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n * \n * Take care not to evaluate this in non-browser contexts.\n * \n * \\@experimental\n */\nexport class BrowserXhr {\nconstructor() {}\n/**\n * @return {?}\n */\nbuild(): any { return /** @type {?} */(( <any>(new XMLHttpRequest()))); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserXhr_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserXhr.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserXhr.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/backends/browser_xhr.ts","\nexport type RequestMethod = number;\nexport let RequestMethod: any = {};\nRequestMethod.Get = 0;\nRequestMethod.Post = 1;\nRequestMethod.Put = 2;\nRequestMethod.Delete = 3;\nRequestMethod.Options = 4;\nRequestMethod.Head = 5;\nRequestMethod.Patch = 6;\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\n\nexport type ReadyState = number;\nexport let ReadyState: any = {};\nReadyState.Unsent = 0;\nReadyState.Open = 1;\nReadyState.HeadersReceived = 2;\nReadyState.Loading = 3;\nReadyState.Done = 4;\nReadyState.Cancelled = 5;\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\n\nexport type ResponseType = number;\nexport let ResponseType: any = {};\nResponseType.Basic = 0;\nResponseType.Cors = 1;\nResponseType.Default = 2;\nResponseType.Error = 3;\nResponseType.Opaque = 4;\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\n\nexport type ContentType = number;\nexport let ContentType: any = {};\nContentType.NONE = 0;\nContentType.JSON = 1;\nContentType.FORM = 2;\nContentType.FORM_DATA = 3;\nContentType.TEXT = 4;\nContentType.BLOB = 5;\nContentType.ARRAY_BUFFER = 6;\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\n\nexport type ResponseContentType = number;\nexport let ResponseContentType: any = {};\nResponseContentType.Text = 0;\nResponseContentType.Json = 1;\nResponseContentType.ArrayBuffer = 2;\nResponseContentType.Blob = 3;\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/enums.ts","\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n * \n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n * \n * ### Example\n * \n * ```\n * import {Headers} from '\\@angular/http';\n * \n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n * \n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n * \n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n * \n * \\@experimental\n */\nexport class Headers {\n/**\n * \\@internal header names are lower case\n */\n_headers: Map<string, string[]> = new Map();\n/**\n * \\@internal map lower case names to actual names\n */\n_normalizedNames: Map<string, string> = new Map();\n/**\n * @param {?=} headers\n */\nconstructor(headers?: Headers|{[name: string]: any}|null) {\n    if (!headers) {\n      return;\n    }\n\n    if (headers instanceof Headers) {\n      headers.forEach((values: string[], name: string) => {\n        values.forEach(value => this.append(name, value));\n      });\n      return;\n    }\n\n    Object.keys(headers).forEach((name: string) => {\n      const values: string[] = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n      this.delete(name);\n      values.forEach(value => this.append(name, value));\n    });\n  }\n/**\n * Returns a new Headers instance from the given DOMString of Response Headers\n * @param {?} headersString\n * @return {?}\n */\nstatic fromResponseHeaderString(headersString: string): Headers {\n    const /** @type {?} */ headers = new Headers();\n\n    headersString.split('\\n').forEach(line => {\n      const /** @type {?} */ index = line.indexOf(':');\n      if (index > 0) {\n        const /** @type {?} */ name = line.slice(0, index);\n        const /** @type {?} */ value = line.slice(index + 1).trim();\n        headers.set(name, value);\n      }\n    });\n\n    return headers;\n  }\n/**\n * Appends a header to existing list of header values for a given header name.\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nappend(name: string, value: string): void {\n    const /** @type {?} */ values = this.getAll(name);\n\n    if (values === null) {\n      this.set(name, value);\n    } else {\n      values.push(value);\n    }\n  }\n/**\n * Deletes all header values for the given name.\n * @param {?} name\n * @return {?}\n */\ndelete (name: string): void {\n    const /** @type {?} */ lcName = name.toLowerCase();\n    this._normalizedNames.delete(lcName);\n    this._headers.delete(lcName);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (values: string[], name: string|undefined, headers: Map<string, string[]>) => void):\n      void {\n    this._headers.forEach(\n        (values, lcName) => fn(values, this._normalizedNames.get(lcName), this._headers));\n  }\n/**\n * Returns first header that matches given name.\n * @param {?} name\n * @return {?}\n */\nget(name: string): string|null {\n    const /** @type {?} */ values = this.getAll(name);\n\n    if (values === null) {\n      return null;\n    }\n\n    return values.length > 0 ? values[0] : null;\n  }\n/**\n * Checks for existence of header by given name.\n * @param {?} name\n * @return {?}\n */\nhas(name: string): boolean { return this._headers.has(name.toLowerCase()); }\n/**\n * Returns the names of the headers\n * @return {?}\n */\nkeys(): string[] { return Array.from(this._normalizedNames.values()); }\n/**\n * Sets or overrides header value for given name.\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nset(name: string, value: string|string[]): void {\n    if (Array.isArray(value)) {\n      if (value.length) {\n        this._headers.set(name.toLowerCase(), [value.join(',')]);\n      }\n    } else {\n      this._headers.set(name.toLowerCase(), [value]);\n    }\n    this.mayBeSetNormalizedName(name);\n  }\n/**\n * Returns values of all headers.\n * @return {?}\n */\nvalues(): string[][] { return Array.from(this._headers.values()); }\n/**\n * @return {?}\n */\ntoJSON(): {[name: string]: any} {\n    const /** @type {?} */ serialized: {[name: string]: string[]} = {};\n\n    this._headers.forEach((values: string[], name: string) => {\n      const /** @type {?} */ split: string[] = [];\n      values.forEach(v => split.push(...v.split(',')));\n      serialized[ /** @type {?} */((this._normalizedNames.get(name)))] = split;\n    });\n\n    return serialized;\n  }\n/**\n * Returns list of header values for a given name.\n * @param {?} name\n * @return {?}\n */\ngetAll(name: string): string[]|null {\n    return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n  }\n/**\n * This method is not implemented.\n * @return {?}\n */\nentries() { throw new Error('\"entries\" method is not implemented on Headers class'); }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate mayBeSetNormalizedName(name: string): void {\n    const /** @type {?} */ lcName = name.toLowerCase();\n\n    if (!this._normalizedNames.has(lcName)) {\n      this._normalizedNames.set(lcName, name);\n    }\n  }\n}\n\nfunction Headers_tsickle_Closure_declarations() {\n/**\n * \\@internal header names are lower case\n * @type {?}\n */\nHeaders.prototype._headers;\n/**\n * \\@internal map lower case names to actual names\n * @type {?}\n */\nHeaders.prototype._normalizedNames;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/headers.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\nimport {ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {ResponseOptionsArgs} from './interfaces';\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n * \n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n * \n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n * \n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n * \n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n * \n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n * \n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n * \n * \\@experimental\n */\nexport class ResponseOptions {\n/**\n * String, Object, ArrayBuffer or Blob representing the body of the {\\@link Response}.\n */\nbody: string|Object|ArrayBuffer|Blob|null;\n/**\n * Http {\\@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n * associated with the response.\n */\nstatus: number|null;\n/**\n * Response {\\@link Headers headers}\n */\nheaders: Headers|null;\n/**\n * \\@internal\n */\nstatusText: string|null;\n/**\n * \\@internal\n */\ntype: ResponseType|null;\n  url: string|null;\n/**\n * @param {?=} opts\n */\nconstructor(opts: ResponseOptionsArgs = {}) {\n    const {body, status, headers, statusText, type, url} = opts;\n    this.body = body != null ? body : null;\n    this.status = status != null ? status : null;\n    this.headers = headers != null ? headers : null;\n    this.statusText = statusText != null ? statusText : null;\n    this.type = type != null ? type : null;\n    this.url = url != null ? url : null;\n  }\n/**\n * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n * override\n * existing values. This method will not change the values of the instance on which it is being\n * called.\n * \n * This may be useful when sharing a base `ResponseOptions` object inside tests,\n * where certain properties may change from test to test.\n * \n * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n * \n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new ResponseOptions({\n *   body: {name: 'Jeff'}\n * });\n * var res = new Response(options.merge({\n *   url: 'https://google.com'\n * }));\n * console.log('options.url:', options.url); // null\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * console.log('res.url:', res.url); // https://google.com\n * ```\n * @param {?=} options\n * @return {?}\n */\nmerge(options?: ResponseOptionsArgs): ResponseOptions {\n    return new ResponseOptions({\n      body: options && options.body != null ? options.body : this.body,\n      status: options && options.status != null ? options.status : this.status,\n      headers: options && options.headers != null ? options.headers : this.headers,\n      statusText: options && options.statusText != null ? options.statusText : this.statusText,\n      type: options && options.type != null ? options.type : this.type,\n      url: options && options.url != null ? options.url : this.url,\n    });\n  }\n}\n\nfunction ResponseOptions_tsickle_Closure_declarations() {\n/**\n * String, Object, ArrayBuffer or Blob representing the body of the {\\@link Response}.\n * @type {?}\n */\nResponseOptions.prototype.body;\n/**\n * Http {\\@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n * associated with the response.\n * @type {?}\n */\nResponseOptions.prototype.status;\n/**\n * Response {\\@link Headers headers}\n * @type {?}\n */\nResponseOptions.prototype.headers;\n/**\n * \\@internal\n * @type {?}\n */\nResponseOptions.prototype.statusText;\n/**\n * \\@internal\n * @type {?}\n */\nResponseOptions.prototype.type;\n/** @type {?} */\nResponseOptions.prototype.url;\n}\n\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n * \n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n * \n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n * \n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n * \n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n * \n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n * \n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n * \n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n * \n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n * \n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n * \n * \\@experimental\n */\nexport class BaseResponseOptions extends ResponseOptions {\nconstructor() {\n    super({status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers()});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BaseResponseOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseResponseOptions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseResponseOptions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/base_response_options.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ReadyState, RequestMethod, ResponseContentType, ResponseType} from './enums';\nimport {Headers} from './headers';\nimport {Request} from './static_request';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Abstract class from which real backends are derived.\n * \n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class ConnectionBackend {\n/**\n * @abstract\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: any) {} }\n/**\n * Abstract class from which real connections are derived.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class Connection {\n  readyState: ReadyState;\n  request: Request;\n  response: any;  // TODO: generic of <Response>;\n}\n\nfunction Connection_tsickle_Closure_declarations() {\n/** @type {?} */\nConnection.prototype.readyState;\n/** @type {?} */\nConnection.prototype.request;\n/** @type {?} */\nConnection.prototype.response;\n}\n\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class XSRFStrategy {\n/**\n * @abstract\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request) {} }\n\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n *\n * @experimental\n */\nexport interface RequestOptionsArgs {\n  url?: string|null;\n  method?: string|RequestMethod|null;\n  /** @deprecated from 4.0.0. Use params instead. */\n  search?: string|URLSearchParams|{[key: string]: any | any[]}|null;\n  params?: string|URLSearchParams|{[key: string]: any | any[]}|null;\n  headers?: Headers|null;\n  body?: any;\n  withCredentials?: boolean|null;\n  responseType?: ResponseContentType|null;\n}\n\n/**\n * Required structure when constructing new Request();\n */\nexport interface RequestArgs extends RequestOptionsArgs { url: string|null; }\n\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n *\n * @experimental\n */\nexport interface ResponseOptionsArgs {\n  body?: string|Object|FormData|ArrayBuffer|Blob|null;\n  status?: number|null;\n  statusText?: string|null;\n  headers?: Headers|null;\n  type?: ResponseType|null;\n  url?: string|null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/interfaces.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RequestMethod} from './enums';\n/**\n * @param {?} method\n * @return {?}\n */\nexport function normalizeMethodName(method: string | RequestMethod): RequestMethod {\n  if (typeof method !== 'string') return method;\n\n  switch (method.toUpperCase()) {\n    case 'GET':\n      return RequestMethod.Get;\n    case 'POST':\n      return RequestMethod.Post;\n    case 'PUT':\n      return RequestMethod.Put;\n    case 'DELETE':\n      return RequestMethod.Delete;\n    case 'OPTIONS':\n      return RequestMethod.Options;\n    case 'HEAD':\n      return RequestMethod.Head;\n    case 'PATCH':\n      return RequestMethod.Patch;\n  }\n  throw new Error(`Invalid request method. The method \"${method}\" is not supported.`);\n}\n\nexport const /** @type {?} */ isSuccess = (status: number): boolean => (status >= 200 && status < 300);\n/**\n * @param {?} xhr\n * @return {?}\n */\nexport function getResponseURL(xhr: any): string|null {\n  if ('responseURL' in xhr) {\n    return xhr.responseURL;\n  }\n  if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n    return xhr.getResponseHeader('X-Request-URL');\n  }\n  return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer8(input: String): ArrayBuffer {\n  const /** @type {?} */ view = new Uint8Array(input.length);\n  for (let /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n    view[i] = input.charCodeAt(i);\n  }\n  return view.buffer;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer(input: String): ArrayBuffer {\n  const /** @type {?} */ view = new Uint16Array(input.length);\n  for (let /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n    view[i] = input.charCodeAt(i);\n  }\n  return view.buffer;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/http_utils.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams: string = ''): Map<string, string[]> {\n  const /** @type {?} */ map = new Map<string, string[]>();\n  if (rawParams.length > 0) {\n    const /** @type {?} */ params: string[] = rawParams.split('&');\n    params.forEach((param: string) => {\n      const /** @type {?} */ eqIdx = param.indexOf('=');\n      const [key, val]: string[] =\n          eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)];\n      const /** @type {?} */ list = map.get(key) || [];\n      list.push(val);\n      map.set(key, list);\n    });\n  }\n  return map;\n}\n/**\n * \\@experimental \n * \n */\nexport class QueryEncoder {\n/**\n * @param {?} k\n * @return {?}\n */\nencodeKey(k: string): string { return standardEncoding(k); }\n/**\n * @param {?} v\n * @return {?}\n */\nencodeValue(v: string): string { return standardEncoding(v); }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v: string): string {\n  return encodeURIComponent(v)\n      .replace(/%40/gi, '@')\n      .replace(/%3A/gi, ':')\n      .replace(/%24/gi, '$')\n      .replace(/%2C/gi, ',')\n      .replace(/%3B/gi, ';')\n      .replace(/%2B/gi, '+')\n      .replace(/%3D/gi, '=')\n      .replace(/%3F/gi, '?')\n      .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n * \n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n * \n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n * \n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n * \n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n * \n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n * \n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * \\@experimental\n */\nexport class URLSearchParams {\n  paramsMap: Map<string, string[]>;\n/**\n * @param {?=} rawParams\n * @param {?=} queryEncoder\n */\nconstructor(\npublic rawParams: string = '',\nprivate queryEncoder: QueryEncoder = new QueryEncoder()) {\n    this.paramsMap = paramParser(rawParams);\n  }\n/**\n * @return {?}\n */\nclone(): URLSearchParams {\n    const /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n    clone.appendAll(this);\n    return clone;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\nhas(param: string): boolean { return this.paramsMap.has(param); }\n/**\n * @param {?} param\n * @return {?}\n */\nget(param: string): string|null {\n    const /** @type {?} */ storedParam = this.paramsMap.get(param);\n\n    return Array.isArray(storedParam) ? storedParam[0] : null;\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ngetAll(param: string): string[] { return this.paramsMap.get(param) || []; }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nset(param: string, val: string) {\n    if (val === void 0 || val === null) {\n      this.delete(param);\n      return;\n    }\n    const /** @type {?} */ list = this.paramsMap.get(param) || [];\n    list.length = 0;\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nsetAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      list.length = 0;\n      list.push(value[0]);\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} param\n * @param {?} val\n * @return {?}\n */\nappend(param: string, val: string): void {\n    if (val === void 0 || val === null) return;\n    const /** @type {?} */ list = this.paramsMap.get(param) || [];\n    list.push(val);\n    this.paramsMap.set(param, list);\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nappendAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      for (let /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @param {?} searchParams\n * @return {?}\n */\nreplaceAll(searchParams: URLSearchParams) {\n    searchParams.paramsMap.forEach((value, param) => {\n      const /** @type {?} */ list = this.paramsMap.get(param) || [];\n      list.length = 0;\n      for (let /** @type {?} */ i = 0; i < value.length; ++i) {\n        list.push(value[i]);\n      }\n      this.paramsMap.set(param, list);\n    });\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ paramsList: string[] = [];\n    this.paramsMap.forEach((values, k) => {\n      values.forEach(\n          v => paramsList.push(\n              this.queryEncoder.encodeKey(k) + '=' + this.queryEncoder.encodeValue(v)));\n    });\n    return paramsList.join('&');\n  }\n/**\n * @param {?} param\n * @return {?}\n */\ndelete (param: string): void { this.paramsMap.delete(param); }\n}\n\nfunction URLSearchParams_tsickle_Closure_declarations() {\n/** @type {?} */\nURLSearchParams.prototype.paramsMap;\n/** @type {?} */\nURLSearchParams.prototype.rawParams;\n/** @type {?} */\nURLSearchParams.prototype.queryEncoder;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/url_search_params.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {stringToArrayBuffer} from './http_utils';\nimport {URLSearchParams} from './url_search_params';\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nexport abstract class Body {\n/**\n * \\@internal\n */\nprotected _body: any;\n/**\n * Attempts to return body as parsed `JSON` object, or raises an exception.\n * @return {?}\n */\njson(): any {\n    if (typeof this._body === 'string') {\n      return JSON.parse( /** @type {?} */((<string>this._body)));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return JSON.parse(this.text());\n    }\n\n    return this._body;\n  }\n/**\n * Returns the body as a string, presuming `toString()` can be called on the response body.\n * \n * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n * bytes in the buffer will be interpreted. Valid values are:\n * \n * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n *   into consideration. This is the default behavior to avoid breaking apps, but should be\n *   considered deprecated.\n * \n * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n * @param {?=} encodingHint\n * @return {?}\n */\ntext(encodingHint: 'legacy'|'iso-8859' = 'legacy'): string {\n    if (this._body instanceof URLSearchParams) {\n      return this._body.toString();\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      switch (encodingHint) {\n        case 'legacy':\n          return String.fromCharCode.apply(null, new Uint16Array( /** @type {?} */((this._body as ArrayBuffer))));\n        case 'iso-8859':\n          return String.fromCharCode.apply(null, new Uint8Array( /** @type {?} */((this._body as ArrayBuffer))));\n        default:\n          throw new Error(`Invalid value for encodingHint: ${encodingHint}`);\n      }\n    }\n\n    if (this._body == null) {\n      return '';\n    }\n\n    if (typeof this._body === 'object') {\n      return JSON.stringify(this._body, null, 2);\n    }\n\n    return this._body.toString();\n  }\n/**\n * Return the body as an ArrayBuffer\n * @return {?}\n */\narrayBuffer(): ArrayBuffer {\n    if (this._body instanceof ArrayBuffer) {\n      return /** @type {?} */(( <ArrayBuffer>this._body));\n    }\n\n    return stringToArrayBuffer(this.text());\n  }\n/**\n * Returns the request's body as a Blob, assuming that body exists.\n * @return {?}\n */\nblob(): Blob {\n    if (this._body instanceof Blob) {\n      return /** @type {?} */(( <Blob>this._body));\n    }\n\n    if (this._body instanceof ArrayBuffer) {\n      return new Blob([this._body]);\n    }\n\n    throw new Error('The request body isn\\'t either a blob or an array buffer');\n  }\n}\n\nfunction Body_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nBody.prototype._body;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/body.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\nimport {ResponseOptions} from './base_response_options';\nimport {Body} from './body';\nimport {ResponseType} from './enums';\nimport {Headers} from './headers';\n/**\n * Creates `Response` instances from provided values.\n * \n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n * \n * ### Example\n * \n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n * \n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n * \n * \\@experimental\n */\nexport class Response extends Body {\n/**\n * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n * \n * Defaults to \"default\".\n */\ntype: ResponseType;\n/**\n * True if the response's status is within 200-299\n */\nok: boolean;\n/**\n * URL of response.\n * \n * Defaults to empty string.\n */\nurl: string;\n/**\n * Status code returned by server.\n * \n * Defaults to 200.\n */\nstatus: number;\n/**\n * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n * \n * Defaults to \"OK\"\n */\nstatusText: string|null;\n/**\n * Non-standard property\n * \n * Denotes how many of the response body's bytes have been loaded, for example if the response is\n * the result of a progress event.\n */\nbytesLoaded: number;\n/**\n * Non-standard property\n * \n * Denotes how many bytes are expected in the final response body.\n */\ntotalBytes: number;\n/**\n * Headers object based on the `Headers` class in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#headers-class).\n */\nheaders: Headers|null;\n/**\n * @param {?} responseOptions\n */\nconstructor(responseOptions: ResponseOptions) {\n    super();\n    this._body = responseOptions.body;\n    this.status = responseOptions.status !;\n    this.ok = (this.status >= 200 && this.status <= 299);\n    this.statusText = responseOptions.statusText;\n    this.headers = responseOptions.headers;\n    this.type = responseOptions.type !;\n    this.url = responseOptions.url !;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return `Response with status: ${this.status} ${this.statusText} for URL: ${this.url}`;\n  }\n}\n\nfunction Response_tsickle_Closure_declarations() {\n/**\n * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n * \n * Defaults to \"default\".\n * @type {?}\n */\nResponse.prototype.type;\n/**\n * True if the response's status is within 200-299\n * @type {?}\n */\nResponse.prototype.ok;\n/**\n * URL of response.\n * \n * Defaults to empty string.\n * @type {?}\n */\nResponse.prototype.url;\n/**\n * Status code returned by server.\n * \n * Defaults to 200.\n * @type {?}\n */\nResponse.prototype.status;\n/**\n * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n * \n * Defaults to \"OK\"\n * @type {?}\n */\nResponse.prototype.statusText;\n/**\n * Non-standard property\n * \n * Denotes how many of the response body's bytes have been loaded, for example if the response is\n * the result of a progress event.\n * @type {?}\n */\nResponse.prototype.bytesLoaded;\n/**\n * Non-standard property\n * \n * Denotes how many bytes are expected in the final response body.\n * @type {?}\n */\nResponse.prototype.totalBytes;\n/**\n * Headers object based on the `Headers` class in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#headers-class).\n * @type {?}\n */\nResponse.prototype.headers;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/static_response.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\nlet /** @type {?} */ _nextRequestId = 0;\nexport const /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nlet /** @type {?} */ _jsonpConnections: {[key: string]: any}|null = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections(): {[key: string]: any} {\n  const /** @type {?} */ w: {[key: string]: any} = typeof window == 'object' ? window : {};\n  if (_jsonpConnections === null) {\n    _jsonpConnections = w[JSONP_HOME] = {};\n  }\n  return _jsonpConnections;\n}\nexport class BrowserJsonp {\n/**\n * @param {?} url\n * @return {?}\n */\nbuild(url: string): any {\n    const /** @type {?} */ node = document.createElement('script');\n    node.src = url;\n    return node;\n  }\n/**\n * @return {?}\n */\nnextRequestID(): string { return `__req${_nextRequestId++}`; }\n/**\n * @param {?} id\n * @return {?}\n */\nrequestCallback(id: string): string { return `${JSONP_HOME}.${id}.finished`; }\n/**\n * @param {?} id\n * @param {?} connection\n * @return {?}\n */\nexposeConnection(id: string, connection: any) {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = connection;\n  }\n/**\n * @param {?} id\n * @return {?}\n */\nremoveConnection(id: string) {\n    const /** @type {?} */ connections = _getJsonpConnections();\n    connections[id] = null;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nsend(node: any) { document.body.appendChild( /** @type {?} */((<Node>(node)))); }\n/**\n * @param {?} node\n * @return {?}\n */\ncleanup(node: any) {\n    if (node.parentNode) {\n      node.parentNode.removeChild( /** @type {?} */((<Node>(node))));\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BrowserJsonp_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserJsonp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserJsonp.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/backends/browser_jsonp.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\n\nimport {ResponseOptions} from '../base_response_options';\nimport {ReadyState, RequestMethod, ResponseType} from '../enums';\nimport {Connection, ConnectionBackend} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\n\nimport {BrowserJsonp} from './browser_jsonp';\n\nconst /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nconst /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Abstract base class for an in-flight JSONP request.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPConnection implements Connection {\n/**\n * The {\\@link ReadyState} of this request.\n */\nreadyState: ReadyState;\n/**\n * The outgoing HTTP request.\n */\nrequest: Request;\n/**\n * An observable that completes with the response, when the request is finished.\n */\nresponse: Observable<Response>;\n/**\n * Callback called when the JSONP request completes, to notify the application\n * of the new data.\n * @abstract\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {}\n}\n\nfunction JSONPConnection_tsickle_Closure_declarations() {\n/**\n * The {\\@link ReadyState} of this request.\n * @type {?}\n */\nJSONPConnection.prototype.readyState;\n/**\n * The outgoing HTTP request.\n * @type {?}\n */\nJSONPConnection.prototype.request;\n/**\n * An observable that completes with the response, when the request is finished.\n * @type {?}\n */\nJSONPConnection.prototype.response;\n}\n\nexport class JSONPConnection_ extends JSONPConnection {\nprivate _id: string;\nprivate _script: Element;\nprivate _responseData: any;\nprivate _finished: boolean = false;\n/**\n * @param {?} req\n * @param {?} _dom\n * @param {?=} baseResponseOptions\n */\nconstructor(\n      req: Request,\nprivate _dom: BrowserJsonp,\nprivate baseResponseOptions?: ResponseOptions) {\n    super();\n    if (req.method !== RequestMethod.Get) {\n      throw new TypeError(JSONP_ERR_WRONG_METHOD);\n    }\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n\n      this.readyState = ReadyState.Loading;\n      const id = this._id = _dom.nextRequestID();\n\n      _dom.exposeConnection(id, this);\n\n      // Workaround Dart\n      // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n      const callback = _dom.requestCallback(this._id);\n      let url: string = req.url;\n      if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n        url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\n      } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n        url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\n      }\n\n      const script = this._script = _dom.build(url);\n\n      const onLoad = (event: Event) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        if (!this._finished) {\n          let responseOptions =\n              new ResponseOptions({body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url});\n          if (baseResponseOptions) {\n            responseOptions = baseResponseOptions.merge(responseOptions);\n          }\n          responseObserver.error(new Response(responseOptions));\n          return;\n        }\n\n        let responseOptions = new ResponseOptions({body: this._responseData, url});\n        if (this.baseResponseOptions) {\n          responseOptions = this.baseResponseOptions.merge(responseOptions);\n        }\n\n        responseObserver.next(new Response(responseOptions));\n        responseObserver.complete();\n      };\n\n      const onError = (error: Error) => {\n        if (this.readyState === ReadyState.Cancelled) return;\n        this.readyState = ReadyState.Done;\n        _dom.cleanup(script);\n        let responseOptions = new ResponseOptions({body: error.message, type: ResponseType.Error});\n        if (baseResponseOptions) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      script.addEventListener('load', onLoad);\n      script.addEventListener('error', onError);\n\n      _dom.send(script);\n\n      return () => {\n        this.readyState = ReadyState.Cancelled;\n        script.removeEventListener('load', onLoad);\n        script.removeEventListener('error', onError);\n        this._dom.cleanup(script);\n      };\n    });\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\nfinished(data?: any) {\n    // Don't leak connections\n    this._finished = true;\n    this._dom.removeConnection(this._id);\n    if (this.readyState === ReadyState.Cancelled) return;\n    this._responseData = data;\n  }\n}\n\nfunction JSONPConnection__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPConnection_.prototype._id;\n/** @type {?} */\nJSONPConnection_.prototype._script;\n/** @type {?} */\nJSONPConnection_.prototype._responseData;\n/** @type {?} */\nJSONPConnection_.prototype._finished;\n/** @type {?} */\nJSONPConnection_.prototype._dom;\n/** @type {?} */\nJSONPConnection_.prototype.baseResponseOptions;\n}\n\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class JSONPBackend extends ConnectionBackend {}\nexport class JSONPBackend_ extends JSONPBackend {\n/**\n * @param {?} _browserJSONP\n * @param {?} _baseResponseOptions\n */\nconstructor(private _browserJSONP: BrowserJsonp,\nprivate _baseResponseOptions: ResponseOptions) {\n    super();\n  }\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): JSONPConnection {\n    return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserJsonp, },\n{type: ResponseOptions, },\n];\n}\n\nfunction JSONPBackend__tsickle_Closure_declarations() {\n/** @type {?} */\nJSONPBackend_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJSONPBackend_.ctorParameters;\n/** @type {?} */\nJSONPBackend_.prototype._browserJSONP;\n/** @type {?} */\nJSONPBackend_.prototype._baseResponseOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/backends/jsonp_backend.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {ResponseOptions} from '../base_response_options';\nimport {ContentType, ReadyState, RequestMethod, ResponseContentType, ResponseType} from '../enums';\nimport {Headers} from '../headers';\nimport {getResponseURL, isSuccess} from '../http_utils';\nimport {Connection, ConnectionBackend, XSRFStrategy} from '../interfaces';\nimport {Request} from '../static_request';\nimport {Response} from '../static_response';\nimport {BrowserXhr} from './browser_xhr';\n\nconst /** @type {?} */ XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n * \n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n * \n * \\@experimental\n */\nexport class XHRConnection implements Connection {\n  request: Request;\n/**\n * Response {\\@link EventEmitter} which emits a single {\\@link Response} value on load event of\n * `XMLHttpRequest`.\n */\nresponse: Observable<Response>;\n  readyState: ReadyState;\n/**\n * @param {?} req\n * @param {?} browserXHR\n * @param {?=} baseResponseOptions\n */\nconstructor(req: Request, browserXHR: BrowserXhr, baseResponseOptions?: ResponseOptions) {\n    this.request = req;\n    this.response = new Observable<Response>((responseObserver: Observer<Response>) => {\n      const _xhr: XMLHttpRequest = browserXHR.build();\n      _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n      if (req.withCredentials != null) {\n        _xhr.withCredentials = req.withCredentials;\n      }\n      // load event handler\n      const onLoad = () => {\n        // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n        let status: number = _xhr.status === 1223 ? 204 : _xhr.status;\n\n        let body: any = null;\n\n        // HTTP 204 means no content\n        if (status !== 204) {\n          // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n          // response/responseType properties were introduced in ResourceLoader Level2 spec\n          // (supported by IE10)\n          body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n\n          // Implicitly strip a potential XSSI prefix.\n          if (typeof body === 'string') {\n            body = body.replace(XSSI_PREFIX, '');\n          }\n        }\n\n        // fix status code when it is 0 (0 status is undocumented).\n        // Occurs when accessing file resources or on Android 4.1 stock browser\n        // while retrieving files from application cache.\n        if (status === 0) {\n          status = body ? 200 : 0;\n        }\n\n        const headers: Headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n        // IE 9 does not provide the way to get URL of response\n        const url = getResponseURL(_xhr) || req.url;\n        const statusText: string = _xhr.statusText || 'OK';\n\n        let responseOptions = new ResponseOptions({body, status, headers, statusText, url});\n        if (baseResponseOptions != null) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        const response = new Response(responseOptions);\n        response.ok = isSuccess(status);\n        if (response.ok) {\n          responseObserver.next(response);\n          // TODO(gdi2290): defer complete if array buffer until done\n          responseObserver.complete();\n          return;\n        }\n        responseObserver.error(response);\n      };\n      // error event handler\n      const onError = (err: ErrorEvent) => {\n        let responseOptions = new ResponseOptions({\n          body: err,\n          type: ResponseType.Error,\n          status: _xhr.status,\n          statusText: _xhr.statusText,\n        });\n        if (baseResponseOptions != null) {\n          responseOptions = baseResponseOptions.merge(responseOptions);\n        }\n        responseObserver.error(new Response(responseOptions));\n      };\n\n      this.setDetectedContentType(req, _xhr);\n\n      if (req.headers == null) {\n        req.headers = new Headers();\n      }\n      if (!req.headers.has('Accept')) {\n        req.headers.append('Accept', 'application/json, text/plain, */*');\n      }\n      req.headers.forEach((values, name) => _xhr.setRequestHeader(name !, values.join(',')));\n\n      // Select the correct buffer type to store the response\n      if (req.responseType != null && _xhr.responseType != null) {\n        switch (req.responseType) {\n          case ResponseContentType.ArrayBuffer:\n            _xhr.responseType = 'arraybuffer';\n            break;\n          case ResponseContentType.Json:\n            _xhr.responseType = 'json';\n            break;\n          case ResponseContentType.Text:\n            _xhr.responseType = 'text';\n            break;\n          case ResponseContentType.Blob:\n            _xhr.responseType = 'blob';\n            break;\n          default:\n            throw new Error('The selected responseType is not supported');\n        }\n      }\n\n      _xhr.addEventListener('load', onLoad);\n      _xhr.addEventListener('error', onError);\n\n      _xhr.send(this.request.getBody());\n\n      return () => {\n        _xhr.removeEventListener('load', onLoad);\n        _xhr.removeEventListener('error', onError);\n        _xhr.abort();\n      };\n    });\n  }\n/**\n * @param {?} req\n * @param {?} _xhr\n * @return {?}\n */\nsetDetectedContentType(req: any /** TODO Request */, _xhr: any /** XMLHttpRequest */) {\n    // Skip if a custom Content-Type header is provided\n    if (req.headers != null && req.headers.get('Content-Type') != null) {\n      return;\n    }\n\n    // Set the detected content type\n    switch (req.contentType) {\n      case ContentType.NONE:\n        break;\n      case ContentType.JSON:\n        _xhr.setRequestHeader('content-type', 'application/json');\n        break;\n      case ContentType.FORM:\n        _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        break;\n      case ContentType.TEXT:\n        _xhr.setRequestHeader('content-type', 'text/plain');\n        break;\n      case ContentType.BLOB:\n        const /** @type {?} */ blob = req.blob();\n        if (blob.type) {\n          _xhr.setRequestHeader('content-type', blob.type);\n        }\n        break;\n    }\n  }\n}\n\nfunction XHRConnection_tsickle_Closure_declarations() {\n/** @type {?} */\nXHRConnection.prototype.request;\n/**\n * Response {\\@link EventEmitter} which emits a single {\\@link Response} value on load event of\n * `XMLHttpRequest`.\n * @type {?}\n */\nXHRConnection.prototype.response;\n/** @type {?} */\nXHRConnection.prototype.readyState;\n}\n\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n * \n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n * \n * \\@experimental\n */\nexport class CookieXSRFStrategy implements XSRFStrategy {\n/**\n * @param {?=} _cookieName\n * @param {?=} _headerName\n */\nconstructor(\nprivate _cookieName: string = 'XSRF-TOKEN',\nprivate _headerName: string = 'X-XSRF-TOKEN') {}\n/**\n * @param {?} req\n * @return {?}\n */\nconfigureRequest(req: Request): void {\n    const /** @type {?} */ xsrfToken = getDOM().getCookie(this._cookieName);\n    if (xsrfToken) {\n      req.headers.set(this._headerName, xsrfToken);\n    }\n  }\n}\n\nfunction CookieXSRFStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nCookieXSRFStrategy.prototype._cookieName;\n/** @type {?} */\nCookieXSRFStrategy.prototype._headerName;\n}\n\n/**\n * Creates {\\@link XHRConnection} instances.\n * \n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n * \n * ### Example\n * \n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({ \n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * \\@experimental\n */\nexport class XHRBackend implements ConnectionBackend {\n/**\n * @param {?} _browserXHR\n * @param {?} _baseResponseOptions\n * @param {?} _xsrfStrategy\n */\nconstructor(\nprivate _browserXHR: BrowserXhr,\nprivate _baseResponseOptions: ResponseOptions,\nprivate _xsrfStrategy: XSRFStrategy) {}\n/**\n * @param {?} request\n * @return {?}\n */\ncreateConnection(request: Request): XHRConnection {\n    this._xsrfStrategy.configureRequest(request);\n    return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserXhr, },\n{type: ResponseOptions, },\n{type: XSRFStrategy, },\n];\n}\n\nfunction XHRBackend_tsickle_Closure_declarations() {\n/** @type {?} */\nXHRBackend.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nXHRBackend.ctorParameters;\n/** @type {?} */\nXHRBackend.prototype._browserXHR;\n/** @type {?} */\nXHRBackend.prototype._baseResponseOptions;\n/** @type {?} */\nXHRBackend.prototype._xsrfStrategy;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/backends/xhr_backend.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\nimport {RequestMethod, ResponseContentType} from './enums';\nimport {Headers} from './headers';\nimport {normalizeMethodName} from './http_utils';\nimport {RequestOptionsArgs} from './interfaces';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n * \n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n * \n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n * \n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n * \n * \\@experimental\n */\nexport class RequestOptions {\n/**\n * Http method with which to execute a {\\@link Request}.\n * Acceptable methods are defined in the {\\@link RequestMethod} enum.\n */\nmethod: RequestMethod|string|null;\n/**\n * {\\@link Headers} to be attached to a {\\@link Request}.\n */\nheaders: Headers|null;\n/**\n * Body to be used when creating a {\\@link Request}.\n */\nbody: any;\n/**\n * Url with which to perform a {\\@link Request}.\n */\nurl: string|null;\n/**\n * Search parameters to be included in a {\\@link Request}.\n */\nparams: URLSearchParams;\n/**\n * @deprecated from 4.0.0. Use params instead.\n * @return {?}\n */\nget search(): URLSearchParams { return this.params; }\n/**\n * @deprecated from 4.0.0. Use params instead.\n * @param {?} params\n * @return {?}\n */\nset search(params: URLSearchParams) { this.params = params; }\n/**\n * Enable use credentials for a {\\@link Request}.\n */\nwithCredentials: boolean|null;\n  /*\n   * Select a buffer to store the response, such as ArrayBuffer, Blob, Json (or Document)\n   */\n  responseType: ResponseContentType|null;\n/**\n * @param {?=} opts\n */\nconstructor(opts: RequestOptionsArgs = {}) {\n    const {method, headers, body, url, search, params, withCredentials, responseType} = opts;\n    this.method = method != null ? normalizeMethodName(method) : null;\n    this.headers = headers != null ? headers : null;\n    this.body = body != null ? body : null;\n    this.url = url != null ? url : null;\n    this.params = this._mergeSearchParams(params || search);\n    this.withCredentials = withCredentials != null ? withCredentials : null;\n    this.responseType = responseType != null ? responseType : null;\n  }\n/**\n * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n * existing values. This method will not change the values of the instance on which it is being\n * called.\n * \n * Note that `headers` and `search` will override existing values completely if present in\n * the `options` object. If these values should be merged, it should be done prior to calling\n * `merge` on the `RequestOptions` instance.\n * \n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * const options = new RequestOptions({\n *   method: RequestMethod.Post\n * });\n * const req = new Request(options.merge({\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n * @param {?=} options\n * @return {?}\n */\nmerge(options?: RequestOptionsArgs): RequestOptions {\n    return new RequestOptions({\n      method: options && options.method != null ? options.method : this.method,\n      headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n      body: options && options.body != null ? options.body : this.body,\n      url: options && options.url != null ? options.url : this.url,\n      params: options && this._mergeSearchParams(options.params || options.search),\n      withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                                                                    this.withCredentials,\n      responseType: options && options.responseType != null ? options.responseType :\n                                                              this.responseType\n    });\n  }\n/**\n * @param {?=} params\n * @return {?}\n */\nprivate _mergeSearchParams(params?: string|URLSearchParams|{[key: string]: any | any[]}|\n                             null): URLSearchParams {\n    if (!params) return this.params;\n\n    if (params instanceof URLSearchParams) {\n      return params.clone();\n    }\n\n    if (typeof params === 'string') {\n      return new URLSearchParams(params);\n    }\n\n    return this._parseParams(params);\n  }\n/**\n * @param {?=} objParams\n * @return {?}\n */\nprivate _parseParams(objParams: {[key: string]: any | any[]} = {}): URLSearchParams {\n    const /** @type {?} */ params = new URLSearchParams();\n    Object.keys(objParams).forEach((key: string) => {\n      const /** @type {?} */ value: any|any[] = objParams[key];\n      if (Array.isArray(value)) {\n        value.forEach((item: any) => this._appendParam(key, item, params));\n      } else {\n        this._appendParam(key, value, params);\n      }\n    });\n    return params;\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?} params\n * @return {?}\n */\nprivate _appendParam(key: string, value: any, params: URLSearchParams): void {\n    if (typeof value !== 'string') {\n      value = JSON.stringify(value);\n    }\n    params.append(key, value);\n  }\n}\n\nfunction RequestOptions_tsickle_Closure_declarations() {\n/**\n * Http method with which to execute a {\\@link Request}.\n * Acceptable methods are defined in the {\\@link RequestMethod} enum.\n * @type {?}\n */\nRequestOptions.prototype.method;\n/**\n * {\\@link Headers} to be attached to a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.headers;\n/**\n * Body to be used when creating a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.body;\n/**\n * Url with which to perform a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.url;\n/**\n * Search parameters to be included in a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.params;\n/**\n * Enable use credentials for a {\\@link Request}.\n * @type {?}\n */\nRequestOptions.prototype.withCredentials;\n/** @type {?} */\nRequestOptions.prototype.responseType;\n}\n\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n * \n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n * \n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n * \n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n * \n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n * \n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n * \n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n * \n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n * \n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n * \n * \\@experimental\n */\nexport class BaseRequestOptions extends RequestOptions {\nconstructor() { super({method: RequestMethod.Get, headers: new Headers()}); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BaseRequestOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nBaseRequestOptions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBaseRequestOptions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/base_request_options.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Body} from './body';\nimport {ContentType, RequestMethod, ResponseContentType} from './enums';\nimport {Headers} from './headers';\nimport {normalizeMethodName} from './http_utils';\nimport {RequestArgs} from './interfaces';\nimport {URLSearchParams} from './url_search_params';\n/**\n * Creates `Request` instances from provided values.\n * \n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n * \n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n * \n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n * \n * \\@Injectable() \n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n * \n * \\@experimental\n */\nexport class Request extends Body {\n/**\n * Http method with which to perform the request.\n */\nmethod: RequestMethod;\n/**\n * {\\@link Headers} instance\n */\nheaders: Headers;\n/**\n * Url of the remote resource\n */\nurl: string;\n/**\n * Type of the request body *\n */\nprivate contentType: ContentType;\n/**\n * Enable use credentials\n */\nwithCredentials: boolean;\n/**\n * Buffer to store the response\n */\nresponseType: ResponseContentType;\n/**\n * @param {?} requestOptions\n */\nconstructor(requestOptions: RequestArgs) {\n    super();\n    // TODO: assert that url is present\n    const url = requestOptions.url;\n    this.url = requestOptions.url !;\n    const paramsArg = requestOptions.params || requestOptions.search;\n    if (paramsArg) {\n      let params: string;\n      if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n        params = urlEncodeParams(paramsArg).toString();\n      } else {\n        params = paramsArg.toString();\n      }\n      if (params.length > 0) {\n        let prefix = '?';\n        if (this.url.indexOf('?') != -1) {\n          prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\n        }\n        // TODO: just delete search-query-looking string in url?\n        this.url = url + prefix + params;\n      }\n    }\n    this._body = requestOptions.body;\n    this.method = normalizeMethodName(requestOptions.method !);\n    // TODO(jeffbcross): implement behavior\n    // Defaults to 'omit', consistent with browser\n    this.headers = new Headers(requestOptions.headers);\n    this.contentType = this.detectContentType();\n    this.withCredentials = requestOptions.withCredentials !;\n    this.responseType = requestOptions.responseType !;\n  }\n/**\n * Returns the content type enum based on header options.\n * @return {?}\n */\ndetectContentType(): ContentType {\n    switch (this.headers.get('content-type')) {\n      case 'application/json':\n        return ContentType.JSON;\n      case 'application/x-www-form-urlencoded':\n        return ContentType.FORM;\n      case 'multipart/form-data':\n        return ContentType.FORM_DATA;\n      case 'text/plain':\n      case 'text/html':\n        return ContentType.TEXT;\n      case 'application/octet-stream':\n        return this._body instanceof ArrayBuffer ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n      default:\n        return this.detectContentTypeFromBody();\n    }\n  }\n/**\n * Returns the content type of request's body based on its type.\n * @return {?}\n */\ndetectContentTypeFromBody(): ContentType {\n    if (this._body == null) {\n      return ContentType.NONE;\n    } else if (this._body instanceof URLSearchParams) {\n      return ContentType.FORM;\n    } else if (this._body instanceof FormData) {\n      return ContentType.FORM_DATA;\n    } else if (this._body instanceof Blob) {\n      return ContentType.BLOB;\n    } else if (this._body instanceof ArrayBuffer) {\n      return ContentType.ARRAY_BUFFER;\n    } else if (this._body && typeof this._body === 'object') {\n      return ContentType.JSON;\n    } else {\n      return ContentType.TEXT;\n    }\n  }\n/**\n * Returns the request's body according to its type. If body is undefined, return\n * null.\n * @return {?}\n */\ngetBody(): any {\n    switch (this.contentType) {\n      case ContentType.JSON:\n        return this.text();\n      case ContentType.FORM:\n        return this.text();\n      case ContentType.FORM_DATA:\n        return this._body;\n      case ContentType.TEXT:\n        return this.text();\n      case ContentType.BLOB:\n        return this.blob();\n      case ContentType.ARRAY_BUFFER:\n        return this.arrayBuffer();\n      default:\n        return null;\n    }\n  }\n}\n\nfunction Request_tsickle_Closure_declarations() {\n/**\n * Http method with which to perform the request.\n * @type {?}\n */\nRequest.prototype.method;\n/**\n * {\\@link Headers} instance\n * @type {?}\n */\nRequest.prototype.headers;\n/**\n * Url of the remote resource\n * @type {?}\n */\nRequest.prototype.url;\n/**\n * Type of the request body *\n * @type {?}\n */\nRequest.prototype.contentType;\n/**\n * Enable use credentials\n * @type {?}\n */\nRequest.prototype.withCredentials;\n/**\n * Buffer to store the response\n * @type {?}\n */\nRequest.prototype.responseType;\n}\n\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params: {[key: string]: any}): URLSearchParams {\n  const /** @type {?} */ searchParams = new URLSearchParams();\n  Object.keys(params).forEach(key => {\n    const /** @type {?} */ value = params[key];\n    if (value && Array.isArray(value)) {\n      value.forEach(element => searchParams.append(key, element.toString()));\n    } else {\n      searchParams.append(key, value.toString());\n    }\n  });\n  return searchParams;\n}\n\nconst /** @type {?} */ noop = function() {};\nconst /** @type {?} */ w = typeof window == 'object' ? window : noop;\nconst /** @type {?} */ FormData = ( /** @type {?} */((w as any)) /** TODO #9100 */)['FormData'] || noop;\nconst /** @type {?} */ Blob = ( /** @type {?} */((w as any)) /** TODO #9100 */)['Blob'] || noop;\nexport const /** @type {?} */ ArrayBuffer: ArrayBufferConstructor =\n    ( /** @type {?} */((w as any)) /** TODO #9100 */)['ArrayBuffer'] || noop;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/static_request.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {RequestMethod} from './enums';\nimport {ConnectionBackend, RequestArgs, RequestOptionsArgs} from './interfaces';\nimport {Request} from './static_request';\nimport {Response} from './static_response';\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend: ConnectionBackend, request: Request): Observable<Response> {\n  return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(\n    defaultOpts: BaseRequestOptions, providedOpts: RequestOptionsArgs | undefined,\n    method: RequestMethod, url: string): RequestArgs {\n  const /** @type {?} */ newOptions = defaultOpts;\n  if (providedOpts) {\n    // Hack so Dart can used named parameters\n    return /** @type {?} */(( newOptions.merge(new RequestOptions({\n      method: providedOpts.method || method,\n      url: providedOpts.url || url,\n      search: providedOpts.search,\n      params: providedOpts.params,\n      headers: providedOpts.headers,\n      body: providedOpts.body,\n      withCredentials: providedOpts.withCredentials,\n      responseType: providedOpts.responseType\n    })) as RequestArgs));\n  }\n\n  return /** @type {?} */(( newOptions.merge(new RequestOptions({method, url})) as RequestArgs));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n * \n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n * \n * ### Example\n * \n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({ \n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n * \n * \n * ### Example\n * \n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n * \n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n * \n * ### Example\n * \n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n * \n * \\@experimental\n */\nexport class Http {\n/**\n * @param {?} _backend\n * @param {?} _defaultOptions\n */\nconstructor(protected _backend: ConnectionBackend, protected _defaultOptions: RequestOptions) {}\n/**\n * Performs any type of http request. First argument is required, and can either be a url or\n * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n * object can be provided as the 2nd argument. The options object will be merged with the values\n * of {\\@link BaseRequestOptions} before performing the request.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string|Request, options?: RequestOptionsArgs): Observable<Response> {\n    let /** @type {?} */ responseObservable: any;\n    if (typeof url === 'string') {\n      responseObservable = httpRequest(\n          this._backend,\n          new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */(( <string>url)))));\n    } else if (url instanceof Request) {\n      responseObservable = httpRequest(this._backend, url);\n    } else {\n      throw new Error('First argument must be a url string or Request instance.');\n    }\n    return responseObservable;\n  }\n/**\n * Performs a request with `get` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nget(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n  }\n/**\n * Performs a request with `post` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npost(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Post,\n        url)));\n  }\n/**\n * Performs a request with `put` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\nput(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Put,\n        url)));\n  }\n/**\n * Performs a request with `delete` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\ndelete (url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n  }\n/**\n * Performs a request with `patch` http method.\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npatch(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(new Request(mergeOptions(\n        this._defaultOptions.merge(new RequestOptions({body: body})), options, RequestMethod.Patch,\n        url)));\n  }\n/**\n * Performs a request with `head` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nhead(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n  }\n/**\n * Performs a request with `options` http method.\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\noptions(url: string, options?: RequestOptionsArgs): Observable<Response> {\n    return this.request(\n        new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConnectionBackend, },\n{type: RequestOptions, },\n];\n}\n\nfunction Http_tsickle_Closure_declarations() {\n/** @type {?} */\nHttp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttp.ctorParameters;\n/** @type {?} */\nHttp.prototype._backend;\n/** @type {?} */\nHttp.prototype._defaultOptions;\n}\n\n/**\n * \\@experimental\n */\nexport class Jsonp extends Http {\n/**\n * @param {?} backend\n * @param {?} defaultOptions\n */\nconstructor(backend: ConnectionBackend, defaultOptions: RequestOptions) {\n    super(backend, defaultOptions);\n  }\n/**\n * Performs any type of http request. First argument is required, and can either be a url or\n * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n * object can be provided as the 2nd argument. The options object will be merged with the values\n * of {\\@link BaseRequestOptions} before performing the request.\n * \n * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n * supported by all current browsers. Because JSONP creates a `<script>` element with\n * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n * source could expose your application to XSS risks. Data exposed by JSONP may also be\n * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n * future security issues (e.g. content sniffing).  For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string|Request, options?: RequestOptionsArgs): Observable<Response> {\n    let /** @type {?} */ responseObservable: any;\n    if (typeof url === 'string') {\n      url =\n          new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */(( <string>url))));\n    }\n    if (url instanceof Request) {\n      if (url.method !== RequestMethod.Get) {\n        throw new Error('JSONP requests must use GET request method.');\n      }\n      responseObservable = httpRequest(this._backend, url);\n    } else {\n      throw new Error('First argument must be a url string or Request instance.');\n    }\n    return responseObservable;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConnectionBackend, },\n{type: RequestOptions, },\n];\n}\n\nfunction Jsonp_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonp.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/http.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The http module provides services to perform http requests. To get started, see the {@link Http}\n * class.\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {BrowserJsonp} from './backends/browser_jsonp';\nimport {BrowserXhr} from './backends/browser_xhr';\nimport {JSONPBackend, JSONPBackend_} from './backends/jsonp_backend';\nimport {CookieXSRFStrategy, XHRBackend} from './backends/xhr_backend';\nimport {BaseRequestOptions, RequestOptions} from './base_request_options';\nimport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nimport {Http, Jsonp} from './http';\nimport {XSRFStrategy} from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n  return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend: XHRBackend, requestOptions: RequestOptions): Http {\n  return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend: JSONPBackend, requestOptions: RequestOptions): Jsonp {\n  return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n * \n * \\@experimental\n */\nexport class HttpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions]},\n    BrowserXhr,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    XHRBackend,\n    {provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HttpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nHttpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHttpModule.ctorParameters;\n}\n\n/**\n * The module that includes jsonp's providers\n * \n * \\@experimental\n */\nexport class JsonpModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    // TODO(pascal): use factory type annotations once supported in DI\n    // issue: https://github.com/angular/angular/issues/3183\n    {provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions]},\n    BrowserJsonp,\n    {provide: RequestOptions, useClass: BaseRequestOptions},\n    {provide: ResponseOptions, useClass: BaseResponseOptions},\n    {provide: JSONPBackend, useClass: JSONPBackend_},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonpModule_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonpModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonpModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/http_module.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {BrowserXhr} from './backends/browser_xhr';\nexport {JSONPBackend, JSONPConnection} from './backends/jsonp_backend';\nexport {CookieXSRFStrategy, XHRBackend, XHRConnection} from './backends/xhr_backend';\nexport {BaseRequestOptions, RequestOptions} from './base_request_options';\nexport {BaseResponseOptions, ResponseOptions} from './base_response_options';\nexport {ReadyState, RequestMethod, ResponseContentType, ResponseType} from './enums';\nexport {Headers} from './headers';\nexport {Http, Jsonp} from './http';\nexport {HttpModule, JsonpModule} from './http_module';\nexport {Connection, ConnectionBackend, RequestOptionsArgs, ResponseOptionsArgs, XSRFStrategy} from './interfaces';\nexport {Request} from './static_request';\nexport {Response} from './static_response';\nexport {QueryEncoder, URLSearchParams} from './url_search_params';\nexport {VERSION} from './version';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/src/index.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the http package.\n */\nexport {BrowserXhr,JSONPBackend,JSONPConnection,CookieXSRFStrategy,XHRBackend,XHRConnection,BaseRequestOptions,RequestOptions,BaseResponseOptions,ResponseOptions,ReadyState,RequestMethod,ResponseContentType,ResponseType,Headers,Http,Jsonp,HttpModule,JsonpModule,Connection,ConnectionBackend,RequestOptionsArgs,ResponseOptionsArgs,XSRFStrategy,Request,Response,QueryEncoder,URLSearchParams,VERSION} from './src/index';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/http/public_api.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Route} from './config';\nimport {RouterStateSnapshot} from './router_state';\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n * \n * \\@stable\n */\nexport class NavigationStart {\n/**\n * @param {?} id\n * @param {?} url\n */\nconstructor(\npublic id: number,\npublic url: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n\nfunction NavigationStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationStart.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationStart.prototype.url;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n * \n * \\@stable\n */\nexport class NavigationEnd {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n\nfunction NavigationEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationEnd.prototype.urlAfterRedirects;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n * \n * \\@stable\n */\nexport class NavigationCancel {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} reason\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic reason: string) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n\nfunction NavigationCancel_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationCancel.prototype.reason;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n * \n * \\@stable\n */\nexport class NavigationError {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} error\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic error: any) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n\nfunction NavigationError_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nNavigationError.prototype.error;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n * \n * \\@stable\n */\nexport class RoutesRecognized {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {}\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction RoutesRecognized_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nRoutesRecognized.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n * \n * \\@experimental\n */\nexport class RouteConfigLoadStart {\n/**\n * @param {?} route\n */\nconstructor(public route: Route) {}\n/**\n * @return {?}\n */\ntoString(): string { return `RouteConfigLoadStart(path: ${this.route.path})`; }\n}\n\nfunction RouteConfigLoadStart_tsickle_Closure_declarations() {\n/** @type {?} */\nRouteConfigLoadStart.prototype.route;\n}\n\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n * \n * \\@experimental\n */\nexport class RouteConfigLoadEnd {\n/**\n * @param {?} route\n */\nconstructor(public route: Route) {}\n/**\n * @return {?}\n */\ntoString(): string { return `RouteConfigLoadEnd(path: ${this.route.path})`; }\n}\n\nfunction RouteConfigLoadEnd_tsickle_Closure_declarations() {\n/** @type {?} */\nRouteConfigLoadEnd.prototype.route;\n}\n\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n * \n * \\@experimental\n */\nexport class GuardsCheckStart {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction GuardsCheckStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckStart.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n * \n * \\@experimental\n */\nexport class GuardsCheckEnd {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n * @param {?} shouldActivate\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot,\npublic shouldActivate: boolean) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n\nfunction GuardsCheckEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.state;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nGuardsCheckEnd.prototype.shouldActivate;\n}\n\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n * \n * \\@experimental\n */\nexport class ResolveStart {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction ResolveStart_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveStart.prototype.state;\n}\n\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n * \n * \\@experimental\n */\nexport class ResolveEnd {\n/**\n * @param {?} id\n * @param {?} url\n * @param {?} urlAfterRedirects\n * @param {?} state\n */\nconstructor(\npublic id: number,\npublic url: string,\npublic urlAfterRedirects: string,\npublic state: RouterStateSnapshot) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n\nfunction ResolveEnd_tsickle_Closure_declarations() {\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.id;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.url;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.urlAfterRedirects;\n/**\n * \\@docsNotRequired\n * @type {?}\n */\nResolveEnd.prototype.state;\n}\n\n\n/**\n * @whatItDoes Represents a router event, allowing you to track the lifecycle of the router.\n *\n * The sequence of router events is:\n *\n * - {@link NavigationStart},\n * - {@link RouteConfigLoadStart},\n * - {@link RouteConfigLoadEnd},\n * - {@link RoutesRecognized},\n * - {@link GuardsCheckStart},\n * - {@link GuardsCheckEnd},\n * - {@link ResolveStart},\n * - {@link ResolveEnd},\n * - {@link NavigationEnd},\n * - {@link NavigationCancel},\n * - {@link NavigationError}\n *\n * @stable\n */\nexport type Event = NavigationStart | NavigationEnd | NavigationCancel | NavigationError |\n    RoutesRecognized | RouteConfigLoadStart | RouteConfigLoadEnd | GuardsCheckStart |\n    GuardsCheckEnd | ResolveStart | ResolveEnd;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/events.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {Route, UrlMatchResult} from './config';\nimport {UrlSegment, UrlSegmentGroup} from './url_tree';\n/**\n * \\@whatItDoes Name of the primary outlet.\n * \n * \\@stable\n */\nexport const PRIMARY_OUTLET = 'primary';\n\n/**\n * A collection of parameters.\n *\n * @stable\n */\nexport type Params = {\n  [key: string]: any\n};\n\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * @stable\n */\nexport interface ParamMap {\n  has(name: string): boolean;\n  /**\n   * Return a single value for the given parameter name:\n   * - the value when the parameter has a single value,\n   * - the first value if the parameter has multiple values,\n   * - `null` when there is no such parameter.\n   */\n  get(name: string): string|null;\n  /**\n   * Return an array of values for the given parameter name.\n   *\n   * If there is no such parameter, an empty array is returned.\n   */\n  getAll(name: string): string[];\n\n  /** Name of the parameters */\n  readonly keys: string[];\n}\nclass ParamsAsMap implements ParamMap {\nprivate params: Params;\n/**\n * @param {?} params\n */\nconstructor(params: Params) { this.params = params || {}; }\n/**\n * @param {?} name\n * @return {?}\n */\nhas(name: string): boolean { return this.params.hasOwnProperty(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nget(name: string): string|null {\n    if (this.has(name)) {\n      const /** @type {?} */ v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n\n    return null;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetAll(name: string): string[] {\n    if (this.has(name)) {\n      const /** @type {?} */ v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n\n    return [];\n  }\n/**\n * @return {?}\n */\nget keys(): string[] { return Object.keys(this.params); }\n}\n\nfunction ParamsAsMap_tsickle_Closure_declarations() {\n/** @type {?} */\nParamsAsMap.prototype.params;\n}\n\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n * \n * \\@stable\n * @param {?} params\n * @return {?}\n */\nexport function convertToParamMap(params: Params): ParamMap {\n  return new ParamsAsMap(params);\n}\n\nconst /** @type {?} */ NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nexport function navigationCancelingError(message: string) {\n  const /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n  ( /** @type {?} */((error as any)))[NAVIGATION_CANCELING_ERROR] = true;\n  return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isNavigationCancelingError(error: Error) {\n  return ( /** @type {?} */((error as any)))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nexport function defaultUrlMatcher(\n    segments: UrlSegment[], segmentGroup: UrlSegmentGroup, route: Route): UrlMatchResult|null {\n  const /** @type {?} */ parts = /** @type {?} */(( route.path)).split('/');\n\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n\n  if (route.pathMatch === 'full' &&\n      (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n\n  const /** @type {?} */ posParams: {[key: string]: UrlSegment} = {};\n\n  // Check each config part against the actual URL\n  for (let /** @type {?} */ index = 0; index < parts.length; index++) {\n    const /** @type {?} */ part = parts[index];\n    const /** @type {?} */ segment = segments[index];\n    const /** @type {?} */ isParameter = part.startsWith(':');\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n\n  return {consumed: segments.slice(0, parts.length), posParams};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/shared.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModuleFactory, NgModuleRef, Type} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {PRIMARY_OUTLET} from './shared';\nimport {UrlSegment, UrlSegmentGroup} from './url_tree';\n\n/**\n * @whatItDoes Represents router configuration.\n *\n * @description\n * `Routes` is an array of route configurations. Each one has the following properties:\n *\n * - `path` is a string that uses the route matcher DSL.\n * - `pathMatch` is a string that specifies the matching strategy.\n * - `matcher` defines a custom strategy for path matching and supersedes `path` and `pathMatch`.\n * - `component` is a component type.\n * - `redirectTo` is the url fragment which will replace the current matched segment.\n * - `outlet` is the name of the outlet the component should be placed into.\n * - `canActivate` is an array of DI tokens used to look up CanActivate handlers. See\n *   {@link CanActivate} for more info.\n * - `canActivateChild` is an array of DI tokens used to look up CanActivateChild handlers. See\n *   {@link CanActivateChild} for more info.\n * - `canDeactivate` is an array of DI tokens used to look up CanDeactivate handlers. See\n *   {@link CanDeactivate} for more info.\n * - `canLoad` is an array of DI tokens used to look up CanLoad handlers. See\n *   {@link CanLoad} for more info.\n * - `data` is additional data provided to the component via `ActivatedRoute`.\n * - `resolve` is a map of DI tokens used to look up data resolvers. See {@link Resolve} for more\n *   info.\n * - `runGuardsAndResolvers` defines when guards and resolvers will be run. By default they run only\n *    when the matrix parameters of the route change. When set to `paramsOrQueryParamsChange` they\n *    will also run when query params change. And when set to `always`, they will run every time.\n * - `children` is an array of child route definitions.\n * - `loadChildren` is a reference to lazy loaded child routes. See {@link LoadChildren} for more\n *   info.\n *\n * ### Simple Configuration\n *\n * ```\n * [{\n *   path: 'team/:id',\n  *  component: Team,\n *   children: [{\n *     path: 'user/:name',\n *     component: User\n *   }]\n * }]\n * ```\n *\n * When navigating to `/team/11/user/bob`, the router will create the team component with the user\n * component in it.\n *\n * ### Multiple Outlets\n *\n * ```\n * [{\n *   path: 'team/:id',\n *   component: Team\n * }, {\n *   path: 'chat/:user',\n *   component: Chat\n *   outlet: 'aux'\n * }]\n * ```\n *\n * When navigating to `/team/11(aux:chat/jim)`, the router will create the team component next to\n * the chat component. The chat component will be placed into the aux outlet.\n *\n * ### Wild Cards\n *\n * ```\n * [{\n *   path: '**',\n *   component: Sink\n * }]\n * ```\n *\n * Regardless of where you navigate to, the router will instantiate the sink component.\n *\n * ### Redirects\n *\n * ```\n * [{\n *   path: 'team/:id',\n *   component: Team,\n *   children: [{\n *     path: 'legacy/user/:name',\n *     redirectTo: 'user/:name'\n *   }, {\n *     path: 'user/:name',\n *     component: User\n *   }]\n * }]\n * ```\n *\n * When navigating to '/team/11/legacy/user/jim', the router will change the url to\n * '/team/11/user/jim', and then will instantiate the team component with the user component\n * in it.\n *\n * If the `redirectTo` value starts with a '/', then it is an absolute redirect. E.g., if in the\n * example above we change the `redirectTo` to `/user/:name`, the result url will be '/user/jim'.\n *\n * ### Empty Path\n *\n * Empty-path route configurations can be used to instantiate components that do not 'consume'\n * any url segments. Let's look at the following configuration:\n *\n * ```\n * [{\n *   path: 'team/:id',\n *   component: Team,\n *   children: [{\n *     path: '',\n *     component: AllUsers\n *   }, {\n *     path: 'user/:name',\n *     component: User\n *   }]\n * }]\n * ```\n *\n * When navigating to `/team/11`, the router will instantiate the AllUsers component.\n *\n * Empty-path routes can have children.\n *\n * ```\n * [{\n *   path: 'team/:id',\n *   component: Team,\n *   children: [{\n *     path: '',\n *     component: WrapperCmp,\n *     children: [{\n *       path: 'user/:name',\n *       component: User\n *     }]\n *   }]\n * }]\n * ```\n *\n * When navigating to `/team/11/user/jim`, the router will instantiate the wrapper component with\n * the user component in it.\n *\n * An empty path route inherits its parent's params and data. This is because it cannot have its\n * own params, and, as a result, it often uses its parent's params and data as its own.\n *\n * ### Matching Strategy\n *\n * By default the router will look at what is left in the url, and check if it starts with\n * the specified path (e.g., `/team/11/user` starts with `team/:id`).\n *\n * We can change the matching strategy to make sure that the path covers the whole unconsumed url,\n * which is akin to `unconsumedUrl === path` or `$` regular expressions.\n *\n * This is particularly important when redirecting empty-path routes.\n *\n * ```\n * [{\n *   path: '',\n *   pathMatch: 'prefix', //default\n *   redirectTo: 'main'\n * }, {\n *   path: 'main',\n *   component: Main\n * }]\n * ```\n *\n * Since an empty path is a prefix of any url, even when navigating to '/main', the router will\n * still apply the redirect.\n *\n * If `pathMatch: full` is provided, the router will apply the redirect if and only if navigating to\n * '/'.\n *\n * ```\n * [{\n *   path: '',\n *   pathMatch: 'full',\n *   redirectTo: 'main'\n * }, {\n *   path: 'main',\n *   component: Main\n * }]\n * ```\n *\n * ### Componentless Routes\n *\n * It is useful at times to have the ability to share parameters between sibling components.\n *\n * Say we have two components--ChildCmp and AuxCmp--that we want to put next to each other and both\n * of them require some id parameter.\n *\n * One way to do that would be to have a bogus parent component, so both the siblings can get the id\n * parameter from it. This is not ideal. Instead, you can use a componentless route.\n *\n * ```\n * [{\n *    path: 'parent/:id',\n *    children: [\n *      { path: 'a', component: MainChild },\n *      { path: 'b', component: AuxChild, outlet: 'aux' }\n *    ]\n * }]\n * ```\n *\n * So when navigating to `parent/10/(a//aux:b)`, the route will instantiate the main child and aux\n * child components next to each other. In this example, the application component\n * has to have the primary and aux outlets defined.\n *\n * The router will also merge the `params`, `data`, and `resolve` of the componentless parent into\n * the `params`, `data`, and `resolve` of the children. This is done because there is no component\n * that can inject the activated route of the componentless parent.\n *\n * This is especially useful when child components are defined as follows:\n *\n * ```\n * [{\n *    path: 'parent/:id',\n *    children: [\n *      { path: '', component: MainChild },\n *      { path: '', component: AuxChild, outlet: 'aux' }\n *    ]\n * }]\n * ```\n *\n * With this configuration in place, navigating to '/parent/10' will create the main child and aux\n * components.\n *\n * ### Lazy Loading\n *\n * Lazy loading speeds up our application load time by splitting it into multiple bundles, and\n * loading them on demand. The router is designed to make lazy loading simple and easy. Instead of\n * providing the children property, you can provide the `loadChildren` property, as follows:\n *\n * ```\n * [{\n *   path: 'team/:id',\n *   component: Team,\n *   loadChildren: 'team'\n * }]\n * ```\n *\n * The router will use registered NgModuleFactoryLoader to fetch an NgModule associated with 'team'.\n * Then it will extract the set of routes defined in that NgModule, and will transparently add\n * those routes to the main configuration.\n *\n * @stable use Routes\n */\nexport type Routes = Route[];\n\n/**\n * @whatItDoes Represents the results of the URL matching.\n *\n * * `consumed` is an array of the consumed URL segments.\n * * `posParams` is a map of positional parameters.\n *\n * @experimental\n */\nexport type UrlMatchResult = {\n  consumed: UrlSegment[]; posParams?: {[name: string]: UrlSegment};\n};\n\n/**\n * @whatItDoes A function matching URLs\n *\n * @description\n *\n * A custom URL matcher can be provided when a combination of `path` and `pathMatch` isn't\n * expressive enough.\n *\n * For instance, the following matcher matches html files.\n *\n * ```\n * function htmlFiles(url: UrlSegment[]) {\n *  return url.length === 1 && url[0].path.endsWith('.html') ? ({consumed: url}) : null;\n * }\n *\n * const routes = [{ matcher: htmlFiles, component: HtmlCmp }];\n * ```\n *\n * @experimental\n */\nexport type UrlMatcher = (segments: UrlSegment[], group: UrlSegmentGroup, route: Route) =>\n    UrlMatchResult;\n\n/**\n * @whatItDoes Represents the static data associated with a particular route.\n * See {@link Routes} for more details.\n * @stable\n */\nexport type Data = {\n  [name: string]: any\n};\n\n/**\n * @whatItDoes Represents the resolved data associated with a particular route.\n * See {@link Routes} for more details.\n * @stable\n */\nexport type ResolveData = {\n  [name: string]: any\n};\n\n/**\n * @whatItDoes The type of `loadChildren`.\n * See {@link Routes} for more details.\n * @stable\n */\nexport type LoadChildrenCallback = () =>\n    Type<any>| NgModuleFactory<any>| Promise<Type<any>>| Observable<Type<any>>;\n\n/**\n * @whatItDoes The type of `loadChildren`.\n * See {@link Routes} for more details.\n * @stable\n */\nexport type LoadChildren = string | LoadChildrenCallback;\n\n/**\n * @whatItDoes The type of `queryParamsHandling`.\n * See {@link RouterLink} for more details.\n * @stable\n */\nexport type QueryParamsHandling = 'merge' | 'preserve' | '';\n\n/**\n * @whatItDoes The type of `runGuardsAndResolvers`.\n * See {@link Routes} for more details.\n * @experimental\n */\nexport type RunGuardsAndResolvers = 'paramsChange' | 'paramsOrQueryParamsChange' | 'always';\n\n/**\n * See {@link Routes} for more details.\n * @stable\n */\nexport interface Route {\n  path?: string;\n  pathMatch?: string;\n  matcher?: UrlMatcher;\n  component?: Type<any>;\n  redirectTo?: string;\n  outlet?: string;\n  canActivate?: any[];\n  canActivateChild?: any[];\n  canDeactivate?: any[];\n  canLoad?: any[];\n  data?: Data;\n  resolve?: ResolveData;\n  children?: Routes;\n  loadChildren?: LoadChildren;\n  runGuardsAndResolvers?: RunGuardsAndResolvers;\n  /**\n   * Filled for routes with `loadChildren` once the module has been loaded\n   * @internal\n   */\n  _loadedConfig?: LoadedRouterConfig;\n}\nexport class LoadedRouterConfig {\n/**\n * @param {?} routes\n * @param {?} module\n */\nconstructor(public routes: Route[],\npublic module: NgModuleRef<any>) {}\n}\n\nfunction LoadedRouterConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadedRouterConfig.prototype.routes;\n/** @type {?} */\nLoadedRouterConfig.prototype.module;\n}\n\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nexport function validateConfig(config: Routes, parentPath: string = ''): void {\n  // forEach doesn't iterate undefined values\n  for (let /** @type {?} */ i = 0; i < config.length; i++) {\n    const /** @type {?} */ route: Route = config[i];\n    const /** @type {?} */ fullPath: string = getFullPath(parentPath, route);\n    validateNode(route, fullPath);\n  }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route: Route, fullPath: string): void {\n  if (!route) {\n    throw new Error(`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n  }\n  if (Array.isArray(route)) {\n    throw new Error(`Invalid configuration of route '${fullPath}': Array cannot be specified`);\n  }\n  if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': a componentless route cannot have a named outlet set`);\n  }\n  if (route.redirectTo && route.children) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n  }\n  if (route.redirectTo && route.loadChildren) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n  }\n  if (route.children && route.loadChildren) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n  }\n  if (route.redirectTo && route.component) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': redirectTo and component cannot be used together`);\n  }\n  if (route.path && route.matcher) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n  }\n  if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, redirectTo, children or loadChildren`);\n  }\n  if (route.path === void 0 && route.matcher === void 0) {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n  }\n  if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n    throw new Error(`Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n  }\n  if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n    const /** @type {?} */ exp =\n        `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n    throw new Error(\n        `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n  }\n  if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n    throw new Error(\n        `Invalid configuration of route '${fullPath}': pathMatch can only be set to 'prefix' or 'full'`);\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath);\n  }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath: string, currentRoute: Route): string {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/config.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModuleFactory, ɵisObservable as isObservable, ɵisPromise as isPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\nimport {concatAll} from 'rxjs/operator/concatAll';\nimport {every} from 'rxjs/operator/every';\nimport * as l from 'rxjs/operator/last';\nimport {map} from 'rxjs/operator/map';\nimport {mergeAll} from 'rxjs/operator/mergeAll';\nimport {PRIMARY_OUTLET} from '../shared';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function shallowEqualArrays(a: any[], b: any[]): boolean {\n  if (a.length !== b.length) return false;\n  for (let /** @type {?} */ i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function shallowEqual(a: {[x: string]: any}, b: {[x: string]: any}): boolean {\n  const /** @type {?} */ k1 = Object.keys(a);\n  const /** @type {?} */ k2 = Object.keys(b);\n  if (k1.length != k2.length) {\n    return false;\n  }\n  let /** @type {?} */ key: string;\n  for (let /** @type {?} */ i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * @template T\n * @param {?} arr\n * @return {?}\n */\nexport function flatten<T>(arr: T[][]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n/**\n * @template T\n * @param {?} a\n * @return {?}\n */\nexport function last<T>(a: T[]): T|null {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @param {?} bools\n * @return {?}\n */\nexport function and(bools: boolean[]): boolean {\n  return !bools.some(v => !v);\n}\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nexport function forEach<K, V>(map: {[key: string]: V}, callback: (v: V, k: string) => void): void {\n  for (const /** @type {?} */ prop in map) {\n    if (map.hasOwnProperty(prop)) {\n      callback(map[prop], prop);\n    }\n  }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function waitForMap<A, B>(\n    obj: {[k: string]: A}, fn: (k: string, a: A) => Observable<B>): Observable<{[k: string]: B}> {\n  if (Object.keys(obj).length === 0) {\n    return of ({});\n  }\n\n  const /** @type {?} */ waitHead: Observable<B>[] = [];\n  const /** @type {?} */ waitTail: Observable<B>[] = [];\n  const /** @type {?} */ res: {[k: string]: B} = {};\n\n  forEach(obj, (a: A, k: string) => {\n    const /** @type {?} */ mapped = map.call(fn(k, a), (r: B) => res[k] = r);\n    if (k === PRIMARY_OUTLET) {\n      waitHead.push(mapped);\n    } else {\n      waitTail.push(mapped);\n    }\n  });\n\n  const /** @type {?} */ concat$ = concatAll.call(of (...waitHead, ...waitTail));\n  const /** @type {?} */ last$ = l.last.call(concat$);\n  return map.call(last$, () => res);\n}\n/**\n * @param {?} observables\n * @return {?}\n */\nexport function andObservables(observables: Observable<Observable<any>>): Observable<boolean> {\n  const /** @type {?} */ merged$ = mergeAll.call(observables);\n  return every.call(merged$, (result: any) => result === true);\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nexport function wrapIntoObservable<T>(value: T | NgModuleFactory<T>| Promise<T>| Observable<T>):\n    Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return fromPromise(Promise.resolve(value));\n  }\n\n  return of ( /** @type {?} */((value as T)));\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/utils/collection.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PRIMARY_OUTLET, ParamMap, convertToParamMap} from './shared';\nimport {forEach, shallowEqual} from './utils/collection';\n/**\n * @return {?}\n */\nexport function createEmptyUrlTree() {\n  return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nexport function containsTree(container: UrlTree, containee: UrlTree, exact: boolean): boolean {\n  if (exact) {\n    return equalQueryParams(container.queryParams, containee.queryParams) &&\n        equalSegmentGroups(container.root, containee.root);\n  }\n\n  return containsQueryParams(container.queryParams, containee.queryParams) &&\n      containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(\n    container: {[k: string]: string}, containee: {[k: string]: string}): boolean {\n  return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const /** @type {?} */ c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c])) return false;\n  }\n  return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(\n    container: {[k: string]: string}, containee: {[k: string]: string}): boolean {\n  return Object.keys(containee).length <= Object.keys(container).length &&\n      Object.keys(containee).every(key => containee[key] === container[key]);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container: UrlSegmentGroup, containee: UrlSegmentGroup): boolean {\n  return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(\n    container: UrlSegmentGroup, containee: UrlSegmentGroup, containeePaths: UrlSegment[]): boolean {\n  if (container.segments.length > containeePaths.length) {\n    const /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    return true;\n\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    for (const /** @type {?} */ c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c])) return false;\n    }\n    return true;\n\n  } else {\n    const /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n    const /** @type {?} */ next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n  }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({templateUrl:'template.html'}) \n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n * \n * \\@description \n * \n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n * \n * \\@stable\n */\nexport class UrlTree {\n/**\n * \\@internal\n */\n_queryParamMap: ParamMap;\n/**\n * \\@internal\n * @param {?} root\n * @param {?} queryParams\n * @param {?} fragment\n */\nconstructor(\npublic root: UrlSegmentGroup,\npublic queryParams: {[key: string]: string},\npublic fragment: string|null) {}\n/**\n * @return {?}\n */\nget queryParamMap(): ParamMap {\n    if (!this._queryParamMap) {\n      this._queryParamMap = convertToParamMap(this.queryParams);\n    }\n    return this._queryParamMap;\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return DEFAULT_SERIALIZER.serialize(this); }\n}\n\nfunction UrlTree_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nUrlTree.prototype._queryParamMap;\n/**\n * The root segment group of the URL tree\n * @type {?}\n */\nUrlTree.prototype.root;\n/**\n * The query params of the URL\n * @type {?}\n */\nUrlTree.prototype.queryParams;\n/**\n * The fragment of the URL\n * @type {?}\n */\nUrlTree.prototype.fragment;\n}\n\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n * \n * See {\\@link UrlTree} for more information.\n * \n * \\@stable\n */\nexport class UrlSegmentGroup {\n/**\n * \\@internal\n */\n_sourceSegment: UrlSegmentGroup;\n/**\n * \\@internal\n */\n_segmentIndexShift: number;\n/**\n * The parent node in the url tree\n */\nparent: UrlSegmentGroup|null = null;\n/**\n * @param {?} segments\n * @param {?} children\n */\nconstructor(\npublic segments: UrlSegment[],\npublic children: {[key: string]: UrlSegmentGroup}) {\n    forEach(children, (v: any, k: any) => v.parent = this);\n  }\n/**\n * Whether the segment has child segments\n * @return {?}\n */\nhasChildren(): boolean { return this.numberOfChildren > 0; }\n/**\n * Number of child segments\n * @return {?}\n */\nget numberOfChildren(): number { return Object.keys(this.children).length; }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return serializePaths(this); }\n}\n\nfunction UrlSegmentGroup_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nUrlSegmentGroup.prototype._sourceSegment;\n/**\n * \\@internal\n * @type {?}\n */\nUrlSegmentGroup.prototype._segmentIndexShift;\n/**\n * The parent node in the url tree\n * @type {?}\n */\nUrlSegmentGroup.prototype.parent;\n/**\n * The URL segments of this group. See {\\@link UrlSegment} for more information\n * @type {?}\n */\nUrlSegmentGroup.prototype.segments;\n/**\n * The list of children of this group\n * @type {?}\n */\nUrlSegmentGroup.prototype.children;\n}\n\n/**\n * \\@whatItDoes Represents a single URL segment.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({templateUrl:'template.html'}) \n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n * \n * \\@description \n * \n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n * \n * \\@stable\n */\nexport class UrlSegment {\n/**\n * \\@internal\n */\n_parameterMap: ParamMap;\n/**\n * @param {?} path\n * @param {?} parameters\n */\nconstructor(\npublic path: string,\npublic parameters: {[name: string]: string}) {}\n/**\n * @return {?}\n */\nget parameterMap() {\n    if (!this._parameterMap) {\n      this._parameterMap = convertToParamMap(this.parameters);\n    }\n    return this._parameterMap;\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\ntoString(): string { return serializePath(this); }\n}\n\nfunction UrlSegment_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nUrlSegment.prototype._parameterMap;\n/**\n * The path part of a URL segment\n * @type {?}\n */\nUrlSegment.prototype.path;\n/**\n * The matrix parameters associated with a segment\n * @type {?}\n */\nUrlSegment.prototype.parameters;\n}\n\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nexport function equalSegments(as: UrlSegment[], bs: UrlSegment[]): boolean {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nexport function equalPath(as: UrlSegment[], bs: UrlSegment[]): boolean {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nexport function mapChildrenIntoArray<T>(\n    segment: UrlSegmentGroup, fn: (v: UrlSegmentGroup, k: string) => T[]): T[] {\n  let /** @type {?} */ res: T[] = [];\n  forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  forEach(segment.children, (child: UrlSegmentGroup, childOutlet: string) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n * \n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n * \n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class UrlSerializer {\n/**\n * Parse a url into a {\\@link UrlTree}\n * @abstract\n * @param {?} url\n * @return {?}\n */\nparse(url: string) {}\n/**\n * Converts a {\\@link UrlTree} into a url\n * @abstract\n * @param {?} tree\n * @return {?}\n */\nserialize(tree: UrlTree) {}\n}\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n * \n * \\@description \n * \n * Example URLs:\n * \n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n * \n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n * \n * \\@stable\n */\nexport class DefaultUrlSerializer implements UrlSerializer {\n/**\n * Parses a url into a {\\@link UrlTree}\n * @param {?} url\n * @return {?}\n */\nparse(url: string): UrlTree {\n    const /** @type {?} */ p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n/**\n * Converts a {\\@link UrlTree} into a url\n * @param {?} tree\n * @return {?}\n */\nserialize(tree: UrlTree): string {\n    const /** @type {?} */ segment = `/${serializeSegment(tree.root, true)}`;\n    const /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n    const /** @type {?} */ fragment = typeof tree.fragment === `string` ? `#${encodeURI( /** @type {?} */((tree.fragment)))}` : '';\n\n    return `${segment}${query}${fragment}`;\n  }\n}\n\nconst /** @type {?} */ DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nexport function serializePaths(segment: UrlSegmentGroup): string {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment: UrlSegmentGroup, root: boolean): string {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n\n  if (root) {\n    const /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n        serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n        '';\n    const /** @type {?} */ children: string[] = [];\n\n    forEach(segment.children, (v: UrlSegmentGroup, k: string) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n\n  } else {\n    const /** @type {?} */ children = mapChildrenIntoArray(segment, (v: UrlSegmentGroup, k: string) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n\n      return [`${k}:${serializeSegment(v, false)}`];\n\n    });\n\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nexport function encode(s: string): string {\n  return encodeURIComponent(s)\n      .replace(/%40/g, '@')\n      .replace(/%3A/gi, ':')\n      .replace(/%24/g, '$')\n      .replace(/%2C/gi, ',')\n      .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nexport function decode(s: string): string {\n  return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nexport function serializePath(path: UrlSegment): string {\n  return `${encode(path.path)}${serializeParams(path.parameters)}`;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params: {[key: string]: string}): string {\n  return Object.keys(params).map(key => `;${encode(key)}=${encode(params[key])}`).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params: {[key: string]: any}): string {\n  const /** @type {?} */ strParams: string[] = Object.keys(params).map((name) => {\n    const /** @type {?} */ value = params[name];\n    return Array.isArray(value) ? value.map(v => `${encode(name)}=${encode(v)}`).join('&') :\n                                  `${encode(name)}=${encode(value)}`;\n  });\n\n  return strParams.length ? `?${strParams.join(\"&\")}` : '';\n}\n\nconst /** @type {?} */ SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str: string): string {\n  const /** @type {?} */ match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\n\nconst /** @type {?} */ QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str: string): string {\n  const /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\n\nconst /** @type {?} */ QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str: string): string {\n  const /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\nprivate remaining: string;\n/**\n * @param {?} url\n */\nconstructor(private url: string) { this.remaining = url; }\n/**\n * @return {?}\n */\nparseRootSegment(): UrlSegmentGroup {\n    this.consumeOptional('/');\n\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n/**\n * @return {?}\n */\nparseQueryParams(): {[key: string]: any} {\n    const /** @type {?} */ params: {[key: string]: any} = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n/**\n * @return {?}\n */\nparseFragment(): string|null {\n    return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n  }\n/**\n * @return {?}\n */\nprivate parseChildren(): {[outlet: string]: UrlSegmentGroup} {\n    if (this.remaining === '') {\n      return {};\n    }\n\n    this.consumeOptional('/');\n\n    const /** @type {?} */ segments: UrlSegment[] = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n\n    let /** @type {?} */ children: {[outlet: string]: UrlSegmentGroup} = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n\n    let /** @type {?} */ res: {[outlet: string]: UrlSegmentGroup} = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n\n    return res;\n  }\n/**\n * @return {?}\n */\nprivate parseSegment(): UrlSegment {\n    const /** @type {?} */ path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n/**\n * @return {?}\n */\nprivate parseMatrixParams(): {[key: string]: any} {\n    const /** @type {?} */ params: {[key: string]: any} = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n/**\n * @param {?} params\n * @return {?}\n */\nprivate parseParam(params: {[key: string]: any}): void {\n    const /** @type {?} */ key = matchSegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let /** @type {?} */ value: any = '';\n    if (this.consumeOptional('=')) {\n      const /** @type {?} */ valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n\n    params[decode(key)] = decode(value);\n  }\n/**\n * @param {?} params\n * @return {?}\n */\nprivate parseQueryParam(params: {[key: string]: any}): void {\n    const /** @type {?} */ key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let /** @type {?} */ value: any = '';\n    if (this.consumeOptional('=')) {\n      const /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n\n    const /** @type {?} */ decodedKey = decode(key);\n    const /** @type {?} */ decodedVal = decode(value);\n\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let /** @type {?} */ currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n/**\n * @param {?} allowPrimary\n * @return {?}\n */\nprivate parseParens(allowPrimary: boolean): {[outlet: string]: UrlSegmentGroup} {\n    const /** @type {?} */ segments: {[key: string]: UrlSegmentGroup} = {};\n    this.capture('(');\n\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const /** @type {?} */ path = matchSegments(this.remaining);\n\n      const /** @type {?} */ next = this.remaining[path.length];\n\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new Error(`Cannot parse url '${this.url}'`);\n      }\n\n      let /** @type {?} */ outletName: string = /** @type {?} */(( undefined));\n      if (path.indexOf(':') > -1) {\n        outletName = path.substr(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n\n      const /** @type {?} */ children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                                                                  new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n\n    return segments;\n  }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate peekStartsWith(str: string): boolean { return this.remaining.startsWith(str); }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate consumeOptional(str: string): boolean {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n/**\n * @param {?} str\n * @return {?}\n */\nprivate capture(str: string): void {\n    if (!this.consumeOptional(str)) {\n      throw new Error(`Expected \"${str}\".`);\n    }\n  }\n}\n\nfunction UrlParser_tsickle_Closure_declarations() {\n/** @type {?} */\nUrlParser.prototype.remaining;\n/** @type {?} */\nUrlParser.prototype.url;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/url_tree.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector, NgModuleRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {_catch} from 'rxjs/operator/catch';\nimport {concatAll} from 'rxjs/operator/concatAll';\nimport {first} from 'rxjs/operator/first';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {EmptyError} from 'rxjs/util/EmptyError';\n\nimport {LoadedRouterConfig, Route, Routes} from './config';\nimport {RouterConfigLoader} from './router_config_loader';\nimport {PRIMARY_OUTLET, Params, defaultUrlMatcher, navigationCancelingError} from './shared';\nimport {UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree} from './url_tree';\nimport {andObservables, forEach, waitForMap, wrapIntoObservable} from './utils/collection';\nclass NoMatch {\npublic segmentGroup: UrlSegmentGroup|null;\n/**\n * @param {?=} segmentGroup\n */\nconstructor(segmentGroup?: UrlSegmentGroup) { this.segmentGroup = segmentGroup || null; }\n}\n\nfunction NoMatch_tsickle_Closure_declarations() {\n/** @type {?} */\nNoMatch.prototype.segmentGroup;\n}\n\nclass AbsoluteRedirect {\n/**\n * @param {?} urlTree\n */\nconstructor(public urlTree: UrlTree) {}\n}\n\nfunction AbsoluteRedirect_tsickle_Closure_declarations() {\n/** @type {?} */\nAbsoluteRedirect.prototype.urlTree;\n}\n\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup: UrlSegmentGroup): Observable<UrlSegmentGroup> {\n  return new Observable<UrlSegmentGroup>(\n      (obs: Observer<UrlSegmentGroup>) => obs.error(new NoMatch(segmentGroup)));\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree: UrlTree): Observable<any> {\n  return new Observable<UrlSegmentGroup>(\n      (obs: Observer<UrlSegmentGroup>) => obs.error(new AbsoluteRedirect(newTree)));\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo: string): Observable<any> {\n  return new Observable<UrlSegmentGroup>(\n      (obs: Observer<UrlSegmentGroup>) => obs.error(new Error(\n          `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`)));\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route: Route): Observable<LoadedRouterConfig> {\n  return new Observable<LoadedRouterConfig>(\n      (obs: Observer<LoadedRouterConfig>) => obs.error(navigationCancelingError(\n          `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`)));\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n * \n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nexport function applyRedirects(\n    moduleInjector: Injector, configLoader: RouterConfigLoader, urlSerializer: UrlSerializer,\n    urlTree: UrlTree, config: Routes): Observable<UrlTree> {\n  return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nclass ApplyRedirects {\nprivate allowRedirects: boolean = true;\nprivate ngModule: NgModuleRef<any>;\n/**\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n */\nconstructor(\n      moduleInjector: Injector,\nprivate configLoader: RouterConfigLoader,\nprivate urlSerializer: UrlSerializer,\nprivate urlTree: UrlTree,\nprivate config: Routes) {\n    this.ngModule = moduleInjector.get(NgModuleRef);\n  }\n/**\n * @return {?}\n */\napply(): Observable<UrlTree> {\n    const /** @type {?} */ expanded$ =\n        this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n    const /** @type {?} */ urlTrees$ = map.call(\n        expanded$, (rootSegmentGroup: UrlSegmentGroup) => this.createUrlTree(\n                       rootSegmentGroup, this.urlTree.queryParams, /** @type {?} */(( this.urlTree.fragment))));\n    return _catch.call(urlTrees$, (e: any) => {\n      if (e instanceof AbsoluteRedirect) {\n        // after an absolute redirect we do not apply any more redirects!\n        this.allowRedirects = false;\n        // we need to run matching, so we can fetch all lazy-loaded modules\n        return this.match(e.urlTree);\n      }\n\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n\n      throw e;\n    });\n  }\n/**\n * @param {?} tree\n * @return {?}\n */\nprivate match(tree: UrlTree): Observable<UrlTree> {\n    const /** @type {?} */ expanded$ =\n        this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n    const /** @type {?} */ mapped$ = map.call(\n        expanded$, (rootSegmentGroup: UrlSegmentGroup) =>\n                       this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */(( tree.fragment))));\n    return _catch.call(mapped$, (e: any): Observable<UrlTree> => {\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n\n      throw e;\n    });\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate noMatchError(e: NoMatch): any {\n    return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`);\n  }\n/**\n * @param {?} rootCandidate\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nprivate createUrlTree(rootCandidate: UrlSegmentGroup, queryParams: Params, fragment: string):\n      UrlTree {\n    const /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n        new UrlSegmentGroup([], {[PRIMARY_OUTLET]: rootCandidate}) :\n        rootCandidate;\n    return new UrlTree(root, queryParams, fragment);\n  }\n/**\n * @param {?} ngModule\n * @param {?} routes\n * @param {?} segmentGroup\n * @param {?} outlet\n * @return {?}\n */\nprivate expandSegmentGroup(\n      ngModule: NgModuleRef<any>, routes: Route[], segmentGroup: UrlSegmentGroup,\n      outlet: string): Observable<UrlSegmentGroup> {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return map.call(\n          this.expandChildren(ngModule, routes, segmentGroup),\n          (children: any) => new UrlSegmentGroup([], children));\n    }\n\n    return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n  }\n/**\n * @param {?} ngModule\n * @param {?} routes\n * @param {?} segmentGroup\n * @return {?}\n */\nprivate expandChildren(\n      ngModule: NgModuleRef<any>, routes: Route[],\n      segmentGroup: UrlSegmentGroup): Observable<{[name: string]: UrlSegmentGroup}> {\n    return waitForMap(\n        segmentGroup.children,\n        (childOutlet, child) => this.expandSegmentGroup(ngModule, routes, child, childOutlet));\n  }\n/**\n * @param {?} ngModule\n * @param {?} segmentGroup\n * @param {?} routes\n * @param {?} segments\n * @param {?} outlet\n * @param {?} allowRedirects\n * @return {?}\n */\nprivate expandSegment(\n      ngModule: NgModuleRef<any>, segmentGroup: UrlSegmentGroup, routes: Route[],\n      segments: UrlSegment[], outlet: string,\n      allowRedirects: boolean): Observable<UrlSegmentGroup> {\n    const /** @type {?} */ routes$ = of (...routes);\n    const /** @type {?} */ processedRoutes$ = map.call(routes$, (r: any) => {\n      const /** @type {?} */ expanded$ = this.expandSegmentAgainstRoute(\n          ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n      return _catch.call(expanded$, (e: any) => {\n        if (e instanceof NoMatch) {\n          return of (null);\n        }\n\n        throw e;\n      });\n    });\n    const /** @type {?} */ concattedProcessedRoutes$ = concatAll.call(processedRoutes$);\n    const /** @type {?} */ first$ = first.call(concattedProcessedRoutes$, (s: any) => !!s);\n    return _catch.call(first$, (e: any, _: any): Observable<UrlSegmentGroup> => {\n      if (e instanceof EmptyError) {\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of (new UrlSegmentGroup([], {}));\n        }\n\n        throw new NoMatch(segmentGroup);\n      }\n\n      throw e;\n    });\n  }\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprivate noLeftoversInUrl(segmentGroup: UrlSegmentGroup, segments: UrlSegment[], outlet: string):\n      boolean {\n    return segments.length === 0 && !segmentGroup.children[outlet];\n  }\n/**\n * @param {?} ngModule\n * @param {?} segmentGroup\n * @param {?} routes\n * @param {?} route\n * @param {?} paths\n * @param {?} outlet\n * @param {?} allowRedirects\n * @return {?}\n */\nprivate expandSegmentAgainstRoute(\n      ngModule: NgModuleRef<any>, segmentGroup: UrlSegmentGroup, routes: Route[], route: Route,\n      paths: UrlSegment[], outlet: string, allowRedirects: boolean): Observable<UrlSegmentGroup> {\n    if (getOutlet(route) !== outlet) {\n      return noMatch(segmentGroup);\n    }\n\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n    }\n\n    if (allowRedirects && this.allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(\n          ngModule, segmentGroup, routes, route, paths, outlet);\n    }\n\n    return noMatch(segmentGroup);\n  }\n/**\n * @param {?} ngModule\n * @param {?} segmentGroup\n * @param {?} routes\n * @param {?} route\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprivate expandSegmentAgainstRouteUsingRedirect(\n      ngModule: NgModuleRef<any>, segmentGroup: UrlSegmentGroup, routes: Route[], route: Route,\n      segments: UrlSegment[], outlet: string): Observable<UrlSegmentGroup> {\n    if (route.path === '**') {\n      return this.expandWildCardWithParamsAgainstRouteUsingRedirect(\n          ngModule, routes, route, outlet);\n    }\n\n    return this.expandRegularSegmentAgainstRouteUsingRedirect(\n        ngModule, segmentGroup, routes, route, segments, outlet);\n  }\n/**\n * @param {?} ngModule\n * @param {?} routes\n * @param {?} route\n * @param {?} outlet\n * @return {?}\n */\nprivate expandWildCardWithParamsAgainstRouteUsingRedirect(\n      ngModule: NgModuleRef<any>, routes: Route[], route: Route,\n      outlet: string): Observable<UrlSegmentGroup> {\n    const /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */(( route.redirectTo)), {});\n    if ( /** @type {?} */((route.redirectTo)).startsWith('/')) {\n      return absoluteRedirect(newTree);\n    }\n\n    return mergeMap.call(this.lineralizeSegments(route, newTree), (newSegments: UrlSegment[]) => {\n      const /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n      return this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n    });\n  }\n/**\n * @param {?} ngModule\n * @param {?} segmentGroup\n * @param {?} routes\n * @param {?} route\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprivate expandRegularSegmentAgainstRouteUsingRedirect(\n      ngModule: NgModuleRef<any>, segmentGroup: UrlSegmentGroup, routes: Route[], route: Route,\n      segments: UrlSegment[], outlet: string): Observable<UrlSegmentGroup> {\n    const {matched, consumedSegments, lastChild, positionalParamSegments} =\n        match(segmentGroup, route, segments);\n    if (!matched) return noMatch(segmentGroup);\n\n    const /** @type {?} */ newTree = this.applyRedirectCommands(\n        consumedSegments, /** @type {?} */(( route.redirectTo)), /** @type {?} */(( <any>positionalParamSegments)));\n    if ( /** @type {?} */((route.redirectTo)).startsWith('/')) {\n      return absoluteRedirect(newTree);\n    }\n\n    return mergeMap.call(this.lineralizeSegments(route, newTree), (newSegments: UrlSegment[]) => {\n      return this.expandSegment(\n          ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet,\n          false);\n    });\n  }\n/**\n * @param {?} ngModule\n * @param {?} rawSegmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nprivate matchSegmentAgainstRoute(\n      ngModule: NgModuleRef<any>, rawSegmentGroup: UrlSegmentGroup, route: Route,\n      segments: UrlSegment[]): Observable<UrlSegmentGroup> {\n    if (route.path === '**') {\n      if (route.loadChildren) {\n        return map.call(\n            this.configLoader.load(ngModule.injector, route), (cfg: LoadedRouterConfig) => {\n              route._loadedConfig = cfg;\n              return new UrlSegmentGroup(segments, {});\n            });\n      }\n\n      return of (new UrlSegmentGroup(segments, {}));\n    }\n\n    const {matched, consumedSegments, lastChild} = match(rawSegmentGroup, route, segments);\n    if (!matched) return noMatch(rawSegmentGroup);\n\n    const /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n    const /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n\n    return mergeMap.call(childConfig$, (routerConfig: LoadedRouterConfig) => {\n      const /** @type {?} */ childModule = routerConfig.module;\n      const /** @type {?} */ childConfig = routerConfig.routes;\n\n      const {segmentGroup, slicedSegments} =\n          split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig);\n\n      if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n        const /** @type {?} */ expanded$ = this.expandChildren(childModule, childConfig, segmentGroup);\n        return map.call(\n            expanded$, (children: any) => new UrlSegmentGroup(consumedSegments, children));\n      }\n\n      if (childConfig.length === 0 && slicedSegments.length === 0) {\n        return of (new UrlSegmentGroup(consumedSegments, {}));\n      }\n\n      const /** @type {?} */ expanded$ = this.expandSegment(\n          childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n      return map.call(\n          expanded$, (cs: UrlSegmentGroup) =>\n                         new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children));\n    });\n  }\n/**\n * @param {?} ngModule\n * @param {?} route\n * @return {?}\n */\nprivate getChildConfig(ngModule: NgModuleRef<any>, route: Route): Observable<LoadedRouterConfig> {\n    if (route.children) {\n      // The children belong to the same module\n      return of (new LoadedRouterConfig(route.children, ngModule));\n    }\n\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedConfig !== undefined) {\n        return of (route._loadedConfig);\n      }\n\n      return mergeMap.call(runCanLoadGuard(ngModule.injector, route), (shouldLoad: boolean) => {\n\n        if (shouldLoad) {\n          return map.call(\n              this.configLoader.load(ngModule.injector, route), (cfg: LoadedRouterConfig) => {\n                route._loadedConfig = cfg;\n                return cfg;\n              });\n        }\n\n        return canLoadFails(route);\n      });\n    }\n\n    return of (new LoadedRouterConfig([], ngModule));\n  }\n/**\n * @param {?} route\n * @param {?} urlTree\n * @return {?}\n */\nprivate lineralizeSegments(route: Route, urlTree: UrlTree): Observable<UrlSegment[]> {\n    let /** @type {?} */ res: UrlSegment[] = [];\n    let /** @type {?} */ c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of (res);\n      }\n\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect( /** @type {?} */((route.redirectTo)));\n      }\n\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n/**\n * @param {?} segments\n * @param {?} redirectTo\n * @param {?} posParams\n * @return {?}\n */\nprivate applyRedirectCommands(\n      segments: UrlSegment[], redirectTo: string, posParams: {[k: string]: UrlSegment}): UrlTree {\n    return this.applyRedirectCreatreUrlTree(\n        redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n  }\n/**\n * @param {?} redirectTo\n * @param {?} urlTree\n * @param {?} segments\n * @param {?} posParams\n * @return {?}\n */\nprivate applyRedirectCreatreUrlTree(\n      redirectTo: string, urlTree: UrlTree, segments: UrlSegment[],\n      posParams: {[k: string]: UrlSegment}): UrlTree {\n    const /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(\n        newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams),\n        urlTree.fragment);\n  }\n/**\n * @param {?} redirectToParams\n * @param {?} actualParams\n * @return {?}\n */\nprivate createQueryParams(redirectToParams: Params, actualParams: Params): Params {\n    const /** @type {?} */ res: Params = {};\n    forEach(redirectToParams, (v: any, k: string) => {\n      const /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n      if (copySourceValue) {\n        const /** @type {?} */ sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n/**\n * @param {?} redirectTo\n * @param {?} group\n * @param {?} segments\n * @param {?} posParams\n * @return {?}\n */\nprivate createSegmentGroup(\n      redirectTo: string, group: UrlSegmentGroup, segments: UrlSegment[],\n      posParams: {[k: string]: UrlSegment}): UrlSegmentGroup {\n    const /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n\n    let /** @type {?} */ children: {[n: string]: UrlSegmentGroup} = {};\n    forEach(group.children, (child: UrlSegmentGroup, name: string) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n/**\n * @param {?} redirectTo\n * @param {?} redirectToSegments\n * @param {?} actualSegments\n * @param {?} posParams\n * @return {?}\n */\nprivate createSegments(\n      redirectTo: string, redirectToSegments: UrlSegment[], actualSegments: UrlSegment[],\n      posParams: {[k: string]: UrlSegment}): UrlSegment[] {\n    return redirectToSegments.map(\n        s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) :\n                                      this.findOrReturn(s, actualSegments));\n  }\n/**\n * @param {?} redirectTo\n * @param {?} redirectToUrlSegment\n * @param {?} posParams\n * @return {?}\n */\nprivate findPosParam(\n      redirectTo: string, redirectToUrlSegment: UrlSegment,\n      posParams: {[k: string]: UrlSegment}): UrlSegment {\n    const /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos)\n      throw new Error(\n          `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n/**\n * @param {?} redirectToUrlSegment\n * @param {?} actualSegments\n * @return {?}\n */\nprivate findOrReturn(redirectToUrlSegment: UrlSegment, actualSegments: UrlSegment[]): UrlSegment {\n    let /** @type {?} */ idx = 0;\n    for (const /** @type {?} */ s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\n\nfunction ApplyRedirects_tsickle_Closure_declarations() {\n/** @type {?} */\nApplyRedirects.prototype.allowRedirects;\n/** @type {?} */\nApplyRedirects.prototype.ngModule;\n/** @type {?} */\nApplyRedirects.prototype.configLoader;\n/** @type {?} */\nApplyRedirects.prototype.urlSerializer;\n/** @type {?} */\nApplyRedirects.prototype.urlTree;\n/** @type {?} */\nApplyRedirects.prototype.config;\n}\n\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector: Injector, route: Route): Observable<boolean> {\n  const /** @type {?} */ canLoad = route.canLoad;\n  if (!canLoad || canLoad.length === 0) return of (true);\n\n  const /** @type {?} */ obs = map.call(from(canLoad), (injectionToken: any) => {\n    const /** @type {?} */ guard = moduleInjector.get(injectionToken);\n    return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n  });\n\n  return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup: UrlSegmentGroup, route: Route, segments: UrlSegment[]): {\n  matched: boolean,\n  consumedSegments: UrlSegment[],\n  lastChild: number,\n  positionalParamSegments: {[k: string]: UrlSegment}\n} {\n  if (route.path === '') {\n    if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {}};\n    }\n\n    return {matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {}};\n  }\n\n  const /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n  const /** @type {?} */ res = matcher(segments, segmentGroup, route);\n\n  if (!res) {\n    return {\n      matched: false,\n      consumedSegments: /** @type {?} */(( <any[]>[])),\n      lastChild: 0,\n      positionalParamSegments: {},\n    };\n  }\n\n  return {\n    matched: true,\n    consumedSegments: /** @type {?} */(( res.consumed)),\n    lastChild: /** @type {?} */(( res.consumed.length)),\n    positionalParamSegments: /** @type {?} */(( res.posParams)),\n  };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(\n    segmentGroup: UrlSegmentGroup, consumedSegments: UrlSegment[], slicedSegments: UrlSegment[],\n    config: Route[]) {\n  if (slicedSegments.length > 0 &&\n      containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const /** @type {?} */ s = new UrlSegmentGroup(\n        consumedSegments, createChildrenForEmptySegments(\n                              config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {segmentGroup: mergeTrivialChildren(s), slicedSegments: []};\n  }\n\n  if (slicedSegments.length === 0 &&\n      containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n    const /** @type {?} */ s = new UrlSegmentGroup(\n        segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(\n                                   segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {segmentGroup: mergeTrivialChildren(s), slicedSegments};\n  }\n\n  return {segmentGroup, slicedSegments};\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s: UrlSegmentGroup): UrlSegmentGroup {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n\n  return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(\n    segmentGroup: UrlSegmentGroup, slicedSegments: UrlSegment[], routes: Route[],\n    children: {[name: string]: UrlSegmentGroup}): {[name: string]: UrlSegmentGroup} {\n  const /** @type {?} */ res: {[name: string]: UrlSegmentGroup} = {};\n  for (const /** @type {?} */ r of routes) {\n    if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      res[getOutlet(r)] = new UrlSegmentGroup([], {});\n    }\n  }\n  return {...children, ...res};\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(\n    routes: Route[], primarySegmentGroup: UrlSegmentGroup): {[name: string]: UrlSegmentGroup} {\n  const /** @type {?} */ res: {[name: string]: UrlSegmentGroup} = {};\n  res[PRIMARY_OUTLET] = primarySegmentGroup;\n  for (const /** @type {?} */ r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      res[getOutlet(r)] = new UrlSegmentGroup([], {});\n    }\n  }\n  return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(\n    segmentGroup: UrlSegmentGroup, segments: UrlSegment[], routes: Route[]): boolean {\n  return routes.some(\n      r => isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(\n    segmentGroup: UrlSegmentGroup, segments: UrlSegment[], routes: Route[]): boolean {\n  return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(\n    segmentGroup: UrlSegmentGroup, segments: UrlSegment[], r: Route): boolean {\n  if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n\n  return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route: Route): string {\n  return route.outlet || PRIMARY_OUTLET;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/apply_redirects.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class Tree<T> {\n/**\n * \\@internal\n */\n_root: TreeNode<T>;\n/**\n * @param {?} root\n */\nconstructor(root: TreeNode<T>) { this._root = root; }\n/**\n * @return {?}\n */\nget root(): T { return this._root.value; }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nparent(t: T): T|null {\n    const /** @type {?} */ p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nchildren(t: T): T[] {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nfirstChild(t: T): T|null {\n    const /** @type {?} */ n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\nsiblings(t: T): T[] {\n    const /** @type {?} */ p = findPath(t, this._root);\n    if (p.length < 2) return [];\n\n    const /** @type {?} */ c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n/**\n * \\@internal\n * @param {?} t\n * @return {?}\n */\npathFromRoot(t: T): T[] { return findPath(t, this._root).map(s => s.value); }\n}\n\nfunction Tree_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTree.prototype._root;\n}\n\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode<T>(value: T, node: TreeNode<T>): TreeNode<T>|null {\n  if (value === node.value) return node;\n\n  for (const /** @type {?} */ child of node.children) {\n    const /** @type {?} */ node = findNode(value, child);\n    if (node) return node;\n  }\n\n  return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath<T>(value: T, node: TreeNode<T>): TreeNode<T>[] {\n  if (value === node.value) return [node];\n\n  for (const /** @type {?} */ child of node.children) {\n    const /** @type {?} */ path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n\n  return [];\n}\nexport class TreeNode<T> {\n/**\n * @param {?} value\n * @param {?} children\n */\nconstructor(public value: T,\npublic children: TreeNode<T>[]) {}\n/**\n * @return {?}\n */\ntoString(): string { return `TreeNode(${this.value})`; }\n}\n\nfunction TreeNode_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeNode.prototype.value;\n/** @type {?} */\nTreeNode.prototype.children;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/utils/tree.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {map} from 'rxjs/operator/map';\n\nimport {Data, ResolveData, Route} from './config';\nimport {PRIMARY_OUTLET, ParamMap, Params, convertToParamMap} from './shared';\nimport {UrlSegment, UrlSegmentGroup, UrlTree, equalSegments} from './url_tree';\nimport {shallowEqual, shallowEqualArrays} from './utils/collection';\nimport {Tree, TreeNode} from './utils/tree';\n/**\n * \\@whatItDoes Represents the state of the router.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({templateUrl:'template.html'}) \n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n * \n * \\@description \n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n * \n * See {\\@link ActivatedRoute} for more information.\n * \n * \\@stable\n */\nexport class RouterState extends Tree<ActivatedRoute> {\n/**\n * \\@internal\n * @param {?} root\n * @param {?} snapshot\n */\nconstructor(\n      root: TreeNode<ActivatedRoute>,\npublic snapshot: RouterStateSnapshot) {\n    super(root);\n    setRouterState(<RouterState>this, root);\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.snapshot.toString(); }\n}\n\nfunction RouterState_tsickle_Closure_declarations() {\n/**\n * The current snapshot of the router state\n * @type {?}\n */\nRouterState.prototype.snapshot;\n}\n\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nexport function createEmptyState(urlTree: UrlTree, rootComponent: Type<any>| null): RouterState {\n  const /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n  const /** @type {?} */ emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const /** @type {?} */ emptyParams = new BehaviorSubject({});\n  const /** @type {?} */ emptyData = new BehaviorSubject({});\n  const /** @type {?} */ emptyQueryParams = new BehaviorSubject({});\n  const /** @type {?} */ fragment = new BehaviorSubject('');\n  const /** @type {?} */ activated = new ActivatedRoute(\n      emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent,\n      snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode<ActivatedRoute>(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nexport function createEmptyStateSnapshot(\n    urlTree: UrlTree, rootComponent: Type<any>| null): RouterStateSnapshot {\n  const /** @type {?} */ emptyParams = {};\n  const /** @type {?} */ emptyData = {};\n  const /** @type {?} */ emptyQueryParams = {};\n  const /** @type {?} */ fragment = '';\n  const /** @type {?} */ activated = new ActivatedRouteSnapshot(\n      [], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null,\n      urlTree.root, -1, {});\n  return new RouterStateSnapshot('', new TreeNode<ActivatedRouteSnapshot>(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({...}) \n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n * \n * \\@stable\n */\nexport class ActivatedRoute {\n/**\n * The current snapshot of this route\n */\nsnapshot: ActivatedRouteSnapshot;\n/**\n * \\@internal\n */\n_futureSnapshot: ActivatedRouteSnapshot;\n/**\n * \\@internal\n */\n_routerState: RouterState;\n/**\n * \\@internal\n */\n_paramMap: Observable<ParamMap>;\n/**\n * \\@internal\n */\n_queryParamMap: Observable<ParamMap>;\n/**\n * \\@internal\n * @param {?} url\n * @param {?} params\n * @param {?} queryParams\n * @param {?} fragment\n * @param {?} data\n * @param {?} outlet\n * @param {?} component\n * @param {?} futureSnapshot\n */\nconstructor(\npublic url: Observable<UrlSegment[]>,\npublic params: Observable<Params>,\npublic queryParams: Observable<Params>,\npublic fragment: Observable<string>,\npublic data: Observable<Data>,\npublic outlet: string,\npublic component: Type<any>|string|null, futureSnapshot: ActivatedRouteSnapshot) {\n    this._futureSnapshot = futureSnapshot;\n  }\n/**\n * The configuration used to match this route\n * @return {?}\n */\nget routeConfig(): Route|null { return this._futureSnapshot.routeConfig; }\n/**\n * The root of the router state\n * @return {?}\n */\nget root(): ActivatedRoute { return this._routerState.root; }\n/**\n * The parent of this route in the router state tree\n * @return {?}\n */\nget parent(): ActivatedRoute|null { return this._routerState.parent(this); }\n/**\n * The first child of this route in the router state tree\n * @return {?}\n */\nget firstChild(): ActivatedRoute|null { return this._routerState.firstChild(this); }\n/**\n * The children of this route in the router state tree\n * @return {?}\n */\nget children(): ActivatedRoute[] { return this._routerState.children(this); }\n/**\n * The path from the root of the router state tree to this route\n * @return {?}\n */\nget pathFromRoot(): ActivatedRoute[] { return this._routerState.pathFromRoot(this); }\n/**\n * @return {?}\n */\nget paramMap(): Observable<ParamMap> {\n    if (!this._paramMap) {\n      this._paramMap = map.call(this.params, (p: Params): ParamMap => convertToParamMap(p));\n    }\n    return this._paramMap;\n  }\n/**\n * @return {?}\n */\nget queryParamMap(): Observable<ParamMap> {\n    if (!this._queryParamMap) {\n      this._queryParamMap =\n          map.call(this.queryParams, (p: Params): ParamMap => convertToParamMap(p));\n    }\n    return this._queryParamMap;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n\nfunction ActivatedRoute_tsickle_Closure_declarations() {\n/**\n * The current snapshot of this route\n * @type {?}\n */\nActivatedRoute.prototype.snapshot;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRoute.prototype._futureSnapshot;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRoute.prototype._routerState;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRoute.prototype._paramMap;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRoute.prototype._queryParamMap;\n/**\n * An observable of the URL segments matched by this route\n * @type {?}\n */\nActivatedRoute.prototype.url;\n/**\n * An observable of the matrix parameters scoped to this route\n * @type {?}\n */\nActivatedRoute.prototype.params;\n/**\n * An observable of the query parameters shared by all the routes\n * @type {?}\n */\nActivatedRoute.prototype.queryParams;\n/**\n * An observable of the URL fragment shared by all the routes\n * @type {?}\n */\nActivatedRoute.prototype.fragment;\n/**\n * An observable of the static and resolved data of this route.\n * @type {?}\n */\nActivatedRoute.prototype.data;\n/**\n * The outlet name of the route. It's a constant\n * @type {?}\n */\nActivatedRoute.prototype.outlet;\n/** @type {?} */\nActivatedRoute.prototype.component;\n}\n\n\n/** @internal */\nexport type Inherited = {\n  params: Params,\n  data: Data,\n  resolve: Data,\n};\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nexport function inheritedParamsDataResolve(route: ActivatedRouteSnapshot): Inherited {\n  const /** @type {?} */ pathToRoot = route.pathFromRoot;\n\n  let /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n\n  while (inhertingStartingFrom >= 1) {\n    const /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n    const /** @type {?} */ parent = pathToRoot[inhertingStartingFrom - 1];\n    // current route is an empty path => inherits its parent's params and data\n    if (current.routeConfig && current.routeConfig.path === '') {\n      inhertingStartingFrom--;\n\n      // parent is componentless => current route should inherit its params and data\n    } else if (!parent.component) {\n      inhertingStartingFrom--;\n\n    } else {\n      break;\n    }\n  }\n\n  return pathToRoot.slice(inhertingStartingFrom).reduce((res, curr) => {\n    const /** @type {?} */ params = {...res.params, ...curr.params};\n    const /** @type {?} */ data = {...res.data, ...curr.data};\n    const /** @type {?} */ resolve = {...res.resolve, ...curr._resolvedData};\n    return {params, data, resolve};\n  }, /** @type {?} */(( <any>{params: {}, data: {}, resolve: {}})));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({templateUrl:'./my-component.html'}) \n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n * \n * \\@stable\n */\nexport class ActivatedRouteSnapshot {\n/**\n * \\@internal *\n */\n_routeConfig: Route|null;\n/**\n * \\@internal *\n */\n_urlSegment: UrlSegmentGroup;\n/**\n * \\@internal\n */\n_lastPathIndex: number;\n/**\n * \\@internal\n */\n_resolve: ResolveData;\n/**\n * \\@internal\n */\n_resolvedData: Data;\n/**\n * \\@internal\n */\n_routerState: RouterStateSnapshot;\n/**\n * \\@internal\n */\n_paramMap: ParamMap;\n/**\n * \\@internal\n */\n_queryParamMap: ParamMap;\n/**\n * \\@internal\n * @param {?} url\n * @param {?} params\n * @param {?} queryParams\n * @param {?} fragment\n * @param {?} data\n * @param {?} outlet\n * @param {?} component\n * @param {?} routeConfig\n * @param {?} urlSegment\n * @param {?} lastPathIndex\n * @param {?} resolve\n */\nconstructor(\npublic url: UrlSegment[],\npublic params: Params,\npublic queryParams: Params,\npublic fragment: string,\npublic data: Data,\npublic outlet: string,\npublic component: Type<any>|string|null, routeConfig: Route|null, urlSegment: UrlSegmentGroup,\n      lastPathIndex: number, resolve: ResolveData) {\n    this._routeConfig = routeConfig;\n    this._urlSegment = urlSegment;\n    this._lastPathIndex = lastPathIndex;\n    this._resolve = resolve;\n  }\n/**\n * The configuration used to match this route\n * @return {?}\n */\nget routeConfig(): Route|null { return this._routeConfig; }\n/**\n * The root of the router state\n * @return {?}\n */\nget root(): ActivatedRouteSnapshot { return this._routerState.root; }\n/**\n * The parent of this route in the router state tree\n * @return {?}\n */\nget parent(): ActivatedRouteSnapshot|null { return this._routerState.parent(this); }\n/**\n * The first child of this route in the router state tree\n * @return {?}\n */\nget firstChild(): ActivatedRouteSnapshot|null { return this._routerState.firstChild(this); }\n/**\n * The children of this route in the router state tree\n * @return {?}\n */\nget children(): ActivatedRouteSnapshot[] { return this._routerState.children(this); }\n/**\n * The path from the root of the router state tree to this route\n * @return {?}\n */\nget pathFromRoot(): ActivatedRouteSnapshot[] { return this._routerState.pathFromRoot(this); }\n/**\n * @return {?}\n */\nget paramMap(): ParamMap {\n    if (!this._paramMap) {\n      this._paramMap = convertToParamMap(this.params);\n    }\n    return this._paramMap;\n  }\n/**\n * @return {?}\n */\nget queryParamMap(): ParamMap {\n    if (!this._queryParamMap) {\n      this._queryParamMap = convertToParamMap(this.queryParams);\n    }\n    return this._queryParamMap;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ url = this.url.map(segment => segment.toString()).join('/');\n    const /** @type {?} */ matched = this._routeConfig ? this._routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n\nfunction ActivatedRouteSnapshot_tsickle_Closure_declarations() {\n/**\n * \\@internal *\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._routeConfig;\n/**\n * \\@internal *\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._urlSegment;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._lastPathIndex;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._resolve;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._resolvedData;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._routerState;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._paramMap;\n/**\n * \\@internal\n * @type {?}\n */\nActivatedRouteSnapshot.prototype._queryParamMap;\n/**\n * The URL segments matched by this route\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.url;\n/**\n * The matrix parameters scoped to this route\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.params;\n/**\n * The query parameters shared by all the routes\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.queryParams;\n/**\n * The URL fragment shared by all the routes\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.fragment;\n/**\n * The static and resolved data of this route\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.data;\n/**\n * The outlet name of the route\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.outlet;\n/**\n * The component of the route\n * @type {?}\n */\nActivatedRouteSnapshot.prototype.component;\n}\n\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n * \n * \\@howToUse \n * \n * ```\n * \\@Component({templateUrl:'template.html'}) \n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n * \n * \\@description \n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n * \n * \\@stable\n */\nexport class RouterStateSnapshot extends Tree<ActivatedRouteSnapshot> {\n/**\n * \\@internal\n * @param {?} url\n * @param {?} root\n */\nconstructor(\npublic url: string, root: TreeNode<ActivatedRouteSnapshot>) {\n    super(root);\n    setRouterState(<RouterStateSnapshot>this, root);\n  }\n/**\n * @return {?}\n */\ntoString(): string { return serializeNode(this._root); }\n}\n\nfunction RouterStateSnapshot_tsickle_Closure_declarations() {\n/**\n * The url from which this snapshot was created\n * @type {?}\n */\nRouterStateSnapshot.prototype.url;\n}\n\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState<U, T extends{_routerState: U}>(state: U, node: TreeNode<T>): void {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node: TreeNode<ActivatedRouteSnapshot>): string {\n  const /** @type {?} */ c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(\", \")} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nexport function advanceActivatedRoute(route: ActivatedRoute): void {\n  if (route.snapshot) {\n    const /** @type {?} */ currentSnapshot = route.snapshot;\n    const /** @type {?} */ nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      ( /** @type {?} */((<any>route.queryParams))).next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      ( /** @type {?} */((<any>route.fragment))).next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      ( /** @type {?} */((<any>route.params))).next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      ( /** @type {?} */((<any>route.url))).next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      ( /** @type {?} */((<any>route.data))).next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n\n    // this is for resolved data\n    ( /** @type {?} */((<any>route.data))).next(route._futureSnapshot.data);\n  }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function equalParamsAndUrlSegments(\n    a: ActivatedRouteSnapshot, b: ActivatedRouteSnapshot): boolean {\n  const /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n\n  return equalUrlParams && !parentsMismatch &&\n      (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */(( b.parent))));\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router_state.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\n\nimport {DetachedRouteHandleInternal, RouteReuseStrategy} from './route_reuse_strategy';\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot} from './router_state';\nimport {TreeNode} from './utils/tree';\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nexport function createRouterState(\n    routeReuseStrategy: RouteReuseStrategy, curr: RouterStateSnapshot,\n    prevState: RouterState): RouterState {\n  const /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(\n    routeReuseStrategy: RouteReuseStrategy, curr: TreeNode<ActivatedRouteSnapshot>,\n    prevState?: TreeNode<ActivatedRoute>): TreeNode<ActivatedRoute> {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const /** @type {?} */ value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode<ActivatedRoute>(value, children);\n\n    // retrieve an activated route that is used to be displayed, but is not currently displayed\n  } else if (routeReuseStrategy.retrieve(curr.value)) {\n    const /** @type {?} */ tree: TreeNode<ActivatedRoute> =\n        ( /** @type {?} */((<DetachedRouteHandleInternal>routeReuseStrategy.retrieve(curr.value)))).route;\n    setFutureSnapshotsOfActivatedRoutes(curr, tree);\n    return tree;\n\n  } else {\n    const /** @type {?} */ value = createActivatedRoute(curr.value);\n    const /** @type {?} */ children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode<ActivatedRoute>(value, children);\n  }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(\n    curr: TreeNode<ActivatedRouteSnapshot>, result: TreeNode<ActivatedRoute>): void {\n  if (curr.value.routeConfig !== result.value.routeConfig) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n  }\n  if (curr.children.length !== result.children.length) {\n    throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n  }\n  result.value._futureSnapshot = curr.value;\n  for (let /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n    setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n  }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(\n    routeReuseStrategy: RouteReuseStrategy, curr: TreeNode<ActivatedRouteSnapshot>,\n    prevState: TreeNode<ActivatedRoute>) {\n  return curr.children.map(child => {\n    for (const /** @type {?} */ p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c: ActivatedRouteSnapshot) {\n  return new ActivatedRoute(\n      new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams),\n      new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/create_router_state.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ActivatedRoute} from './router_state';\nimport {PRIMARY_OUTLET, Params} from './shared';\nimport {UrlSegment, UrlSegmentGroup, UrlTree} from './url_tree';\nimport {forEach, last, shallowEqual} from './utils/collection';\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nexport function createUrlTree(\n    route: ActivatedRoute, urlTree: UrlTree, commands: any[], queryParams: Params,\n    fragment: string): UrlTree {\n  if (commands.length === 0) {\n    return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n  }\n\n  const /** @type {?} */ nav = computeNavigation(commands);\n\n  if (nav.toRoot()) {\n    return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n  }\n\n  const /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n\n  const /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n      updateSegmentGroupChildren(\n          startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n      updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n  return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command: any): boolean {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(\n    oldSegmentGroup: UrlSegmentGroup, newSegmentGroup: UrlSegmentGroup, urlTree: UrlTree,\n    queryParams: Params, fragment: string): UrlTree {\n  let /** @type {?} */ qp: any = {};\n  if (queryParams) {\n    forEach(queryParams, (value: any, name: any) => {\n      qp[name] = Array.isArray(value) ? value.map((v: any) => `${v}`) : `${value}`;\n    });\n  }\n\n  if (urlTree.root === oldSegmentGroup) {\n    return new UrlTree(newSegmentGroup, qp, fragment);\n  }\n\n  return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(\n    current: UrlSegmentGroup, oldSegment: UrlSegmentGroup,\n    newSegment: UrlSegmentGroup): UrlSegmentGroup {\n  const /** @type {?} */ children: {[key: string]: UrlSegmentGroup} = {};\n  forEach(current.children, (c: UrlSegmentGroup, outletName: string) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n/**\n * @param {?} isAbsolute\n * @param {?} numberOfDoubleDots\n * @param {?} commands\n */\nconstructor(\npublic isAbsolute: boolean,\npublic numberOfDoubleDots: number,\npublic commands: any[]) {\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new Error('Root segment cannot have matrix parameters');\n    }\n\n    const cmdWithOutlet = commands.find(c => typeof c === 'object' && c != null && c.outlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new Error('{outlets:{}} has to be the last command');\n    }\n  }\n/**\n * @return {?}\n */\npublic toRoot(): boolean {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n\nfunction Navigation_tsickle_Closure_declarations() {\n/** @type {?} */\nNavigation.prototype.isAbsolute;\n/** @type {?} */\nNavigation.prototype.numberOfDoubleDots;\n/** @type {?} */\nNavigation.prototype.commands;\n}\n\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands: any[]): Navigation {\n  if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n\n  let /** @type {?} */ numberOfDoubleDots = 0;\n  let /** @type {?} */ isAbsolute = false;\n\n  const /** @type {?} */ res: any[] = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const /** @type {?} */ outlets: {[k: string]: any} = {};\n        forEach(cmd.outlets, (commands: any, name: string) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {outlets}];\n      }\n\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') {\n          // skip './a'\n        } else if (partIndex == 0 && urlPart === '') {  //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {  //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n\n      return res;\n    }\n\n    return [...res, cmd];\n  }, []);\n\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n/**\n * @param {?} segmentGroup\n * @param {?} processChildren\n * @param {?} index\n */\nconstructor(\npublic segmentGroup: UrlSegmentGroup,\npublic processChildren: boolean,\npublic index: number) {\n  }\n}\n\nfunction Position_tsickle_Closure_declarations() {\n/** @type {?} */\nPosition.prototype.segmentGroup;\n/** @type {?} */\nPosition.prototype.processChildren;\n/** @type {?} */\nPosition.prototype.index;\n}\n\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav: Navigation, tree: UrlTree, route: ActivatedRoute): Position {\n  if (nav.isAbsolute) {\n    return new Position(tree.root, true, 0);\n  }\n\n  if (route.snapshot._lastPathIndex === -1) {\n    return new Position(route.snapshot._urlSegment, true, 0);\n  }\n\n  const /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n  return createPositionApplyingDoubleDots(\n      route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(\n    group: UrlSegmentGroup, index: number, numberOfDoubleDots: number): Position {\n  let /** @type {?} */ g = group;\n  let /** @type {?} */ ci = index;\n  let /** @type {?} */ dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = /** @type {?} */(( g.parent));\n    if (!g) {\n      throw new Error('Invalid number of \\'../\\'');\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command: any): any {\n  if (typeof command === 'object' && command != null && command.outlets) {\n    return command.outlets[PRIMARY_OUTLET];\n  }\n  return `${command}`;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands: any[]): {[k: string]: any[]} {\n  if (!(typeof commands[0] === 'object')) return {[PRIMARY_OUTLET]: commands};\n  if (commands[0].outlets === undefined) return {[PRIMARY_OUTLET]: commands};\n  return commands[0].outlets;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(\n    segmentGroup: UrlSegmentGroup, startIndex: number, commands: any[]): UrlSegmentGroup {\n  if (!segmentGroup) {\n    segmentGroup = new UrlSegmentGroup([], {});\n  }\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n\n  const /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n  const /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] =\n        new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(\n    segmentGroup: UrlSegmentGroup, startIndex: number, commands: any[]): UrlSegmentGroup {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const /** @type {?} */ outlets = getOutlets(commands);\n    const /** @type {?} */ children: {[key: string]: UrlSegmentGroup} = {};\n\n    forEach(outlets, (commands: any, outlet: string) => {\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n\n    forEach(segmentGroup.children, (child: UrlSegmentGroup, childOutlet: string) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup: UrlSegmentGroup, startIndex: number, commands: any[]) {\n  let /** @type {?} */ currentCommandIndex = 0;\n  let /** @type {?} */ currentPathIndex = startIndex;\n\n  const /** @type {?} */ noMatch = {match: false, pathIndex: 0, commandIndex: 0};\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n    const /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n    const /** @type {?} */ next =\n        currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n\n    if (currentPathIndex > 0 && curr === undefined) break;\n\n    if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n\n  return {match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex};\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(\n    segmentGroup: UrlSegmentGroup, startIndex: number, commands: any[]): UrlSegmentGroup {\n  const /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n\n  let /** @type {?} */ i = 0;\n  while (i < commands.length) {\n    if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n      const /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const /** @type {?} */ p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, commands[0]));\n      i++;\n      continue;\n    }\n\n    const /** @type {?} */ curr = getPath(commands[i]);\n    const /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets: {[name: string]: any}): any {\n  const /** @type {?} */ children: {[key: string]: UrlSegmentGroup} = {};\n  forEach(outlets, (commands: any, outlet: string) => {\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params: {[key: string]: any}): {[key: string]: string} {\n  const /** @type {?} */ res: {[key: string]: string} = {};\n  forEach(params, (v: any, k: string) => res[k] = `${v}`);\n  return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path: string, params: {[key: string]: any}, segment: UrlSegment): boolean {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/create_url_tree.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {of } from 'rxjs/observable/of';\n\nimport {Data, ResolveData, Route, Routes} from './config';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot, inheritedParamsDataResolve} from './router_state';\nimport {PRIMARY_OUTLET, defaultUrlMatcher} from './shared';\nimport {UrlSegment, UrlSegmentGroup, UrlTree, mapChildrenIntoArray} from './url_tree';\nimport {forEach, last} from './utils/collection';\nimport {TreeNode} from './utils/tree';\nclass NoMatch {}\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nexport function recognize(\n    rootComponentType: Type<any>| null, config: Routes, urlTree: UrlTree,\n    url: string): Observable<RouterStateSnapshot> {\n  return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nclass Recognizer {\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n */\nconstructor(\nprivate rootComponentType: Type<any>|null,\nprivate config: Routes,\nprivate urlTree: UrlTree,\nprivate url: string) {}\n/**\n * @return {?}\n */\nrecognize(): Observable<RouterStateSnapshot> {\n    try {\n      const /** @type {?} */ rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n\n      const /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n\n      const /** @type {?} */ root = new ActivatedRouteSnapshot(\n          [], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */(( this.urlTree.fragment)),\n          {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n\n      const /** @type {?} */ rootNode = new TreeNode<ActivatedRouteSnapshot>(root, children);\n      const /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n      this.inheritParamsAndData(routeState._root);\n      return of (routeState);\n\n    } catch ( /** @type {?} */e) {\n      return new Observable<RouterStateSnapshot>(\n          (obs: Observer<RouterStateSnapshot>) => obs.error(e));\n    }\n  }\n/**\n * @param {?} routeNode\n * @return {?}\n */\ninheritParamsAndData(routeNode: TreeNode<ActivatedRouteSnapshot>): void {\n    const /** @type {?} */ route = routeNode.value;\n\n    const /** @type {?} */ i = inheritedParamsDataResolve(route);\n    route.params = Object.freeze(i.params);\n    route.data = Object.freeze(i.data);\n\n    routeNode.children.forEach(n => this.inheritParamsAndData(n));\n  }\n/**\n * @param {?} config\n * @param {?} segmentGroup\n * @param {?} outlet\n * @return {?}\n */\nprocessSegmentGroup(config: Route[], segmentGroup: UrlSegmentGroup, outlet: string):\n      TreeNode<ActivatedRouteSnapshot>[] {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(config, segmentGroup);\n    }\n\n    return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n  }\n/**\n * @param {?} config\n * @param {?} segmentGroup\n * @return {?}\n */\nprocessChildren(config: Route[], segmentGroup: UrlSegmentGroup):\n      TreeNode<ActivatedRouteSnapshot>[] {\n    const /** @type {?} */ children = mapChildrenIntoArray(\n        segmentGroup, (child, childOutlet) => this.processSegmentGroup(config, child, childOutlet));\n    checkOutletNameUniqueness(children);\n    sortActivatedRouteSnapshots(children);\n    return children;\n  }\n/**\n * @param {?} config\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprocessSegment(\n      config: Route[], segmentGroup: UrlSegmentGroup, segments: UrlSegment[],\n      outlet: string): TreeNode<ActivatedRouteSnapshot>[] {\n    for (const /** @type {?} */ r of config) {\n      try {\n        return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n      } catch ( /** @type {?} */e) {\n        if (!(e instanceof NoMatch)) throw e;\n      }\n    }\n    if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n      return [];\n    }\n\n    throw new NoMatch();\n  }\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprivate noLeftoversInUrl(segmentGroup: UrlSegmentGroup, segments: UrlSegment[], outlet: string):\n      boolean {\n    return segments.length === 0 && !segmentGroup.children[outlet];\n  }\n/**\n * @param {?} route\n * @param {?} rawSegment\n * @param {?} segments\n * @param {?} outlet\n * @return {?}\n */\nprocessSegmentAgainstRoute(\n      route: Route, rawSegment: UrlSegmentGroup, segments: UrlSegment[],\n      outlet: string): TreeNode<ActivatedRouteSnapshot>[] {\n    if (route.redirectTo) throw new NoMatch();\n\n    if ((route.outlet || PRIMARY_OUTLET) !== outlet) throw new NoMatch();\n\n    if (route.path === '**') {\n      const /** @type {?} */ params = segments.length > 0 ? /** @type {?} */(( last(segments))).parameters : {};\n      const /** @type {?} */ snapshot = new ActivatedRouteSnapshot(\n          segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */(( this.urlTree.fragment)),\n          getData(route), outlet, /** @type {?} */(( route.component)), route, getSourceSegmentGroup(rawSegment),\n          getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n      return [new TreeNode<ActivatedRouteSnapshot>(snapshot, [])];\n    }\n\n    const {consumedSegments, parameters, lastChild} = match(rawSegment, route, segments);\n    const /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n    const /** @type {?} */ childConfig = getChildConfig(route);\n\n    const {segmentGroup, slicedSegments} =\n        split(rawSegment, consumedSegments, rawSlicedSegments, childConfig);\n\n    const /** @type {?} */ snapshot = new ActivatedRouteSnapshot(\n        consumedSegments, parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */((\n        this.urlTree.fragment)), getData(route), outlet, /** @type {?} */(( route.component)), route,\n        getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length,\n        getResolve(route));\n\n\n    if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n      const /** @type {?} */ children = this.processChildren(childConfig, segmentGroup);\n      return [new TreeNode<ActivatedRouteSnapshot>(snapshot, children)];\n    }\n\n    if (childConfig.length === 0 && slicedSegments.length === 0) {\n      return [new TreeNode<ActivatedRouteSnapshot>(snapshot, [])];\n    }\n\n    const /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n    return [new TreeNode<ActivatedRouteSnapshot>(snapshot, children)];\n  }\n}\n\nfunction Recognizer_tsickle_Closure_declarations() {\n/** @type {?} */\nRecognizer.prototype.rootComponentType;\n/** @type {?} */\nRecognizer.prototype.config;\n/** @type {?} */\nRecognizer.prototype.urlTree;\n/** @type {?} */\nRecognizer.prototype.url;\n}\n\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes: TreeNode<ActivatedRouteSnapshot>[]): void {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route: Route): Route[] {\n  if (route.children) {\n    return route.children;\n  }\n\n  if (route.loadChildren) {\n    return /** @type {?} */(( route._loadedConfig)).routes;\n  }\n\n  return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup: UrlSegmentGroup, route: Route, segments: UrlSegment[]) {\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      throw new NoMatch();\n    }\n\n    return {consumedSegments: [], lastChild: 0, parameters: {}};\n  }\n\n  const /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n  const /** @type {?} */ res = matcher(segments, segmentGroup, route);\n  if (!res) throw new NoMatch();\n\n  const /** @type {?} */ posParams: {[n: string]: string} = {};\n  forEach( /** @type {?} */((res.posParams)), (v: UrlSegment, k: string) => { posParams[k] = v.path; });\n  const /** @type {?} */ parameters = res.consumed.length > 0 ?\n      {...posParams, ...res.consumed[res.consumed.length - 1].parameters} :\n      posParams;\n\n  return {consumedSegments: res.consumed, lastChild: res.consumed.length, parameters};\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes: TreeNode<ActivatedRouteSnapshot>[]): void {\n  const /** @type {?} */ names: {[k: string]: ActivatedRouteSnapshot} = {};\n  nodes.forEach(n => {\n    const /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const /** @type {?} */ p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const /** @type {?} */ c = n.value.url.map(s => s.toString()).join('/');\n      throw new Error(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup: UrlSegmentGroup): UrlSegmentGroup {\n  let /** @type {?} */ s = segmentGroup;\n  while (s._sourceSegment) {\n    s = s._sourceSegment;\n  }\n  return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup: UrlSegmentGroup): number {\n  let /** @type {?} */ s = segmentGroup;\n  let /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n  while (s._sourceSegment) {\n    s = s._sourceSegment;\n    res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n  }\n  return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(\n    segmentGroup: UrlSegmentGroup, consumedSegments: UrlSegment[], slicedSegments: UrlSegment[],\n    config: Route[]) {\n  if (slicedSegments.length > 0 &&\n      containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const /** @type {?} */ s = new UrlSegmentGroup(\n        consumedSegments, createChildrenForEmptyPaths(\n                              segmentGroup, consumedSegments, config,\n                              new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return {segmentGroup: s, slicedSegments: []};\n  }\n\n  if (slicedSegments.length === 0 &&\n      containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const /** @type {?} */ s = new UrlSegmentGroup(\n        segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(\n                                   segmentGroup, slicedSegments, config, segmentGroup.children));\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return {segmentGroup: s, slicedSegments};\n  }\n\n  const /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  s._sourceSegment = segmentGroup;\n  s._segmentIndexShift = consumedSegments.length;\n  return {segmentGroup: s, slicedSegments};\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(\n    segmentGroup: UrlSegmentGroup, slicedSegments: UrlSegment[], routes: Route[],\n    children: {[name: string]: UrlSegmentGroup}): {[name: string]: UrlSegmentGroup} {\n  const /** @type {?} */ res: {[name: string]: UrlSegmentGroup} = {};\n  for (const /** @type {?} */ r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const /** @type {?} */ s = new UrlSegmentGroup([], {});\n      s._sourceSegment = segmentGroup;\n      s._segmentIndexShift = segmentGroup.segments.length;\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {...children, ...res};\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(\n    segmentGroup: UrlSegmentGroup, consumedSegments: UrlSegment[], routes: Route[],\n    primarySegment: UrlSegmentGroup): {[name: string]: UrlSegmentGroup} {\n  const /** @type {?} */ res: {[name: string]: UrlSegmentGroup} = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  primarySegment._sourceSegment = segmentGroup;\n  primarySegment._segmentIndexShift = consumedSegments.length;\n\n  for (const /** @type {?} */ r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const /** @type {?} */ s = new UrlSegmentGroup([], {});\n      s._sourceSegment = segmentGroup;\n      s._segmentIndexShift = consumedSegments.length;\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(\n    segmentGroup: UrlSegmentGroup, slicedSegments: UrlSegment[], routes: Route[]): boolean {\n  return routes.some(\n      r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(\n    segmentGroup: UrlSegmentGroup, slicedSegments: UrlSegment[], routes: Route[]): boolean {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(\n    segmentGroup: UrlSegmentGroup, slicedSegments: UrlSegment[], r: Route): boolean {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n\n  return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route: Route): string {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route: Route): Data {\n  return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route: Route): ResolveData {\n  return route.resolve || {};\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/recognize.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentRef} from '@angular/core';\n\nimport {OutletContext} from './router_outlet_context';\nimport {ActivatedRoute, ActivatedRouteSnapshot} from './router_state';\nimport {TreeNode} from './utils/tree';\n\n/**\n * @whatItDoes Represents the detached route tree.\n *\n * This is an opaque value the router will give to a custom route reuse strategy\n * to store and retrieve later on.\n *\n * @experimental\n */\nexport type DetachedRouteHandle = {};\n\n/** @internal */\nexport type DetachedRouteHandleInternal = {\n  contexts: Map<string, OutletContext>,\n  componentRef: ComponentRef<any>,\n  route: TreeNode<ActivatedRoute>,\n};\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class RouteReuseStrategy {\n/**\n * Determines if this route (and its subtree) should be detached to be reused later\n * @abstract\n * @param {?} route\n * @return {?}\n */\nshouldDetach(route: ActivatedRouteSnapshot) {}\n/**\n * Stores the detached route.\n * \n * Storing a `null` value should erase the previously stored value.\n * @abstract\n * @param {?} route\n * @param {?} handle\n * @return {?}\n */\nstore(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle|null) {}\n/**\n * Determines if this route (and its subtree) should be reattached\n * @abstract\n * @param {?} route\n * @return {?}\n */\nshouldAttach(route: ActivatedRouteSnapshot) {}\n/**\n * Retrieves the previously stored route\n * @abstract\n * @param {?} route\n * @return {?}\n */\nretrieve(route: ActivatedRouteSnapshot) {}\n/**\n * Determines if a route should be reused\n * @abstract\n * @param {?} future\n * @param {?} curr\n * @return {?}\n */\nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) {}\n}\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nexport class DefaultRouteReuseStrategy implements RouteReuseStrategy {\n/**\n * @param {?} route\n * @return {?}\n */\nshouldDetach(route: ActivatedRouteSnapshot): boolean { return false; }\n/**\n * @param {?} route\n * @param {?} detachedTree\n * @return {?}\n */\nstore(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle): void {}\n/**\n * @param {?} route\n * @return {?}\n */\nshouldAttach(route: ActivatedRouteSnapshot): boolean { return false; }\n/**\n * @param {?} route\n * @return {?}\n */\nretrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle|null { return null; }\n/**\n * @param {?} future\n * @param {?} curr\n * @return {?}\n */\nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/route_reuse_strategy.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Compiler, InjectionToken, Injector, NgModuleFactory, NgModuleFactoryLoader, NgModuleRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {of } from 'rxjs/observable/of';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {LoadChildren, LoadedRouterConfig, Route} from './config';\nimport {flatten, wrapIntoObservable} from './utils/collection';\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nexport const ROUTES = new InjectionToken<Route[][]>('ROUTES');\nexport class RouterConfigLoader {\n/**\n * @param {?} loader\n * @param {?} compiler\n * @param {?=} onLoadStartListener\n * @param {?=} onLoadEndListener\n */\nconstructor(\nprivate loader: NgModuleFactoryLoader,\nprivate compiler: Compiler,\nprivate onLoadStartListener?: (r: Route) => void,\nprivate onLoadEndListener?: (r: Route) => void) {}\n/**\n * @param {?} parentInjector\n * @param {?} route\n * @return {?}\n */\nload(parentInjector: Injector, route: Route): Observable<LoadedRouterConfig> {\n    if (this.onLoadStartListener) {\n      this.onLoadStartListener(route);\n    }\n\n    const /** @type {?} */ moduleFactory$ = this.loadModuleFactory( /** @type {?} */((route.loadChildren)));\n\n    return map.call(moduleFactory$, (factory: NgModuleFactory<any>) => {\n      if (this.onLoadEndListener) {\n        this.onLoadEndListener(route);\n      }\n\n      const /** @type {?} */ module = factory.create(parentInjector);\n\n      return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n    });\n  }\n/**\n * @param {?} loadChildren\n * @return {?}\n */\nprivate loadModuleFactory(loadChildren: LoadChildren): Observable<NgModuleFactory<any>> {\n    if (typeof loadChildren === 'string') {\n      return fromPromise(this.loader.load(loadChildren));\n    } else {\n      return mergeMap.call(wrapIntoObservable(loadChildren()), (t: any) => {\n        if (t instanceof NgModuleFactory) {\n          return of (t);\n        } else {\n          return fromPromise(this.compiler.compileModuleAsync(t));\n        }\n      });\n    }\n  }\n}\n\nfunction RouterConfigLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterConfigLoader.prototype.loader;\n/** @type {?} */\nRouterConfigLoader.prototype.compiler;\n/** @type {?} */\nRouterConfigLoader.prototype.onLoadStartListener;\n/** @type {?} */\nRouterConfigLoader.prototype.onLoadEndListener;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router_config_loader.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {UrlTree} from './url_tree';\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class UrlHandlingStrategy {\n/**\n * Tells the router if this URL should be processed.\n * \n * When it returns true, the router will execute the regular navigation.\n * When it returns false, the router will set the router state to an empty state.\n * As a result, all the active components will be destroyed.\n * \n * @abstract\n * @param {?} url\n * @return {?}\n */\nshouldProcessUrl(url: UrlTree) {}\n/**\n * Extracts the part of the URL that should be handled by the router.\n * The rest of the URL will remain untouched.\n * @abstract\n * @param {?} url\n * @return {?}\n */\nextract(url: UrlTree) {}\n/**\n * Merges the URL fragment with the rest of the URL.\n * @abstract\n * @param {?} newUrlPart\n * @param {?} rawUrl\n * @return {?}\n */\nmerge(newUrlPart: UrlTree, rawUrl: UrlTree) {}\n}\n/**\n * \\@experimental\n */\nexport class DefaultUrlHandlingStrategy implements UrlHandlingStrategy {\n/**\n * @param {?} url\n * @return {?}\n */\nshouldProcessUrl(url: UrlTree): boolean { return true; }\n/**\n * @param {?} url\n * @return {?}\n */\nextract(url: UrlTree): UrlTree { return url; }\n/**\n * @param {?} newUrlPart\n * @param {?} wholeUrl\n * @return {?}\n */\nmerge(newUrlPart: UrlTree, wholeUrl: UrlTree): UrlTree { return newUrlPart; }\n}\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/url_handling_strategy.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Location} from '@angular/common';\nimport {Compiler, Injector, NgModuleFactoryLoader, NgModuleRef, Type, isDevMode} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {concatMap} from 'rxjs/operator/concatMap';\nimport {every} from 'rxjs/operator/every';\nimport {first} from 'rxjs/operator/first';\nimport {last} from 'rxjs/operator/last';\nimport {map} from 'rxjs/operator/map';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {reduce} from 'rxjs/operator/reduce';\n\nimport {applyRedirects} from './apply_redirects';\nimport {LoadedRouterConfig, QueryParamsHandling, ResolveData, Route, Routes, RunGuardsAndResolvers, validateConfig} from './config';\nimport {createRouterState} from './create_router_state';\nimport {createUrlTree} from './create_url_tree';\nimport {Event, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RoutesRecognized} from './events';\nimport {recognize} from './recognize';\nimport {DefaultRouteReuseStrategy, DetachedRouteHandleInternal, RouteReuseStrategy} from './route_reuse_strategy';\nimport {RouterConfigLoader} from './router_config_loader';\nimport {ChildrenOutletContexts, OutletContext} from './router_outlet_context';\nimport {ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, advanceActivatedRoute, createEmptyState, equalParamsAndUrlSegments, inheritedParamsDataResolve} from './router_state';\nimport {Params, isNavigationCancelingError} from './shared';\nimport {DefaultUrlHandlingStrategy, UrlHandlingStrategy} from './url_handling_strategy';\nimport {UrlSerializer, UrlTree, containsTree, createEmptyUrlTree} from './url_tree';\nimport {andObservables, forEach, shallowEqual, waitForMap, wrapIntoObservable} from './utils/collection';\nimport {TreeNode} from './utils/tree';\n\ndeclare let Zone: any;\n\n/**\n * @whatItDoes Represents the extra options used during navigation.\n *\n * @stable\n */\nexport interface NavigationExtras {\n  /**\n  * Enables relative navigation from the current ActivatedRoute.\n  *\n  * Configuration:\n  *\n  * ```\n  * [{\n  *   path: 'parent',\n  *   component: ParentComponent,\n  *   children: [{\n  *     path: 'list',\n  *     component: ListComponent\n  *   },{\n  *     path: 'child',\n  *     component: ChildComponent\n  *   }]\n  * }]\n  * ```\n  *\n  * Navigate to list route from child route:\n  *\n  * ```\n  *  @Component({...})\n  *  class ChildComponent {\n  *    constructor(private router: Router, private route: ActivatedRoute) {}\n  *\n  *    go() {\n  *      this.router.navigate(['../list'], { relativeTo: this.route });\n  *    }\n  *  }\n  * ```\n  */\n  relativeTo?: ActivatedRoute|null;\n\n  /**\n  * Sets query parameters to the URL.\n  *\n  * ```\n  * // Navigate to /results?page=1\n  * this.router.navigate(['/results'], { queryParams: { page: 1 } });\n  * ```\n  */\n  queryParams?: Params|null;\n\n  /**\n  * Sets the hash fragment for the URL.\n  *\n  * ```\n  * // Navigate to /results#top\n  * this.router.navigate(['/results'], { fragment: 'top' });\n  * ```\n  */\n  fragment?: string;\n\n  /**\n  * Preserves the query parameters for the next navigation.\n  *\n  * deprecated, use `queryParamsHandling` instead\n  *\n  * ```\n  * // Preserve query params from /results?page=1 to /view?page=1\n  * this.router.navigate(['/view'], { preserveQueryParams: true });\n  * ```\n  *\n  * @deprecated since v4\n  */\n  preserveQueryParams?: boolean;\n\n  /**\n  *  config strategy to handle the query parameters for the next navigation.\n  *\n  * ```\n  * // from /results?page=1 to /view?page=1&page=2\n  * this.router.navigate(['/view'], { queryParams: { page: 2 },  queryParamsHandling: \"merge\" });\n  * ```\n  */\n  queryParamsHandling?: QueryParamsHandling|null;\n  /**\n  * Preserves the fragment for the next navigation\n  *\n  * ```\n  * // Preserve fragment from /results#top to /view#top\n  * this.router.navigate(['/view'], { preserveFragment: true });\n  * ```\n  */\n  preserveFragment?: boolean;\n  /**\n  * Navigates without pushing a new state into history.\n  *\n  * ```\n  * // Navigate silently to /view\n  * this.router.navigate(['/view'], { skipLocationChange: true });\n  * ```\n  */\n  skipLocationChange?: boolean;\n  /**\n  * Navigates while replacing the current state in history.\n  *\n  * ```\n  * // Navigate to /view\n  * this.router.navigate(['/view'], { replaceUrl: true });\n  * ```\n  */\n  replaceUrl?: boolean;\n}\n\n/**\n * @whatItDoes Error handler that is invoked when a navigation errors.\n *\n * @description\n * If the handler returns a value, the navigation promise will be resolved with this value.\n * If the handler throws an exception, the navigation promise will be rejected with\n * the exception.\n *\n * @stable\n */\nexport type ErrorHandler = (error: any) => any;\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error: any): any {\n  throw error;\n}\n\ntype NavigationSource = 'imperative' | 'popstate' | 'hashchange';\n\ntype NavigationParams = {\n  id: number,\n  rawUrl: UrlTree,\n  extras: NavigationExtras,\n  resolve: any,\n  reject: any,\n  promise: Promise<boolean>,\n  source: NavigationSource,\n};\n\n/**\n * @internal\n */\nexport type RouterHook = (snapshot: RouterStateSnapshot) => Observable<void>;\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot: RouterStateSnapshot): Observable<void> {\n  return /** @type {?} */(( of (null) as any));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n * \n * See {\\@link Routes} for more details and examples.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class Router {\nprivate currentUrlTree: UrlTree;\nprivate rawUrlTree: UrlTree;\nprivate navigations = new BehaviorSubject<NavigationParams>( /** @type {?} */((null)));\nprivate routerEvents = new Subject<Event>();\nprivate currentRouterState: RouterState;\nprivate locationSubscription: Subscription;\nprivate navigationId: number = 0;\nprivate configLoader: RouterConfigLoader;\nprivate ngModule: NgModuleRef<any>;\n/**\n * Error handler that is invoked when a navigation errors.\n * \n * See {\\@link ErrorHandler} for more information.\n */\nerrorHandler: ErrorHandler = defaultErrorHandler;\n/**\n * Indicates if at least one navigation happened.\n */\nnavigated: boolean = false;\n/**\n * Used by RouterModule. This allows us to\n * pause the navigation either before preactivation or after it.\n * \\@internal\n */\nhooks: {beforePreactivation: RouterHook, afterPreactivation: RouterHook} = {\n    beforePreactivation: defaultRouterHook,\n    afterPreactivation: defaultRouterHook\n  };\n/**\n * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n */\nurlHandlingStrategy: UrlHandlingStrategy = new DefaultUrlHandlingStrategy();\n\n  routeReuseStrategy: RouteReuseStrategy = new DefaultRouteReuseStrategy();\n/**\n * @param {?} rootComponentType\n * @param {?} urlSerializer\n * @param {?} rootContexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n */\nconstructor(\nprivate rootComponentType: Type<any>|null,\nprivate urlSerializer: UrlSerializer,\nprivate rootContexts: ChildrenOutletContexts,\nprivate location: Location, injector: Injector,\n      loader: NgModuleFactoryLoader, compiler: Compiler,\npublic config: Routes) {\n    const onLoadStart = (r: Route) => this.triggerEvent(new RouteConfigLoadStart(r));\n    const onLoadEnd = (r: Route) => this.triggerEvent(new RouteConfigLoadEnd(r));\n\n    this.ngModule = injector.get(NgModuleRef);\n\n    this.resetConfig(config);\n    this.currentUrlTree = createEmptyUrlTree();\n    this.rawUrlTree = this.currentUrlTree;\n\n    this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n    this.currentRouterState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n    this.processNavigations();\n  }\n/**\n * \\@internal \n * TODO: this should be removed once the constructor of the router made internal\n * @param {?} rootComponentType\n * @return {?}\n */\nresetRootComponentType(rootComponentType: Type<any>): void {\n    this.rootComponentType = rootComponentType;\n    // TODO: vsavkin router 4.0 should make the root component set to null\n    // this will simplify the lifecycle of the router.\n    this.currentRouterState.root.component = this.rootComponentType;\n  }\n/**\n * Sets up the location change listener and performs the initial navigation.\n * @return {?}\n */\ninitialNavigation(): void {\n    this.setUpLocationChangeListener();\n    if (this.navigationId === 0) {\n      this.navigateByUrl(this.location.path(true), {replaceUrl: true});\n    }\n  }\n/**\n * Sets up the location change listener.\n * @return {?}\n */\nsetUpLocationChangeListener(): void {\n    // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n    // which does not work properly with zone.js in IE and Safari\n    if (!this.locationSubscription) {\n      this.locationSubscription = /** @type {?} */(( <any>this.location.subscribe(Zone.current.wrap((change: any) => {\n        const /** @type {?} */ rawUrlTree = this.urlSerializer.parse(change['url']);\n        const /** @type {?} */ source: NavigationSource = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n        setTimeout(() => { this.scheduleNavigation(rawUrlTree, source, {replaceUrl: true}); }, 0);\n      }))));\n    }\n  }\n/**\n * The current route state\n * @return {?}\n */\nget routerState(): RouterState { return this.currentRouterState; }\n/**\n * The current url\n * @return {?}\n */\nget url(): string { return this.serializeUrl(this.currentUrlTree); }\n/**\n * An observable of router events\n * @return {?}\n */\nget events(): Observable<Event> { return this.routerEvents; }\n/**\n * \\@internal\n * @param {?} e\n * @return {?}\n */\ntriggerEvent(e: Event): void { this.routerEvents.next(e); }\n/**\n * Resets the configuration used for navigation and generating links.\n * \n * ### Usage\n * \n * ```\n * router.resetConfig([\n *  { path: 'team/:id', component: TeamCmp, children: [\n *    { path: 'simple', component: SimpleCmp },\n *    { path: 'user/:name', component: UserCmp }\n *  ]}\n * ]);\n * ```\n * @param {?} config\n * @return {?}\n */\nresetConfig(config: Routes): void {\n    validateConfig(config);\n    this.config = config;\n    this.navigated = false;\n  }\n/**\n * \\@docsNotRequired\n * @return {?}\n */\nngOnDestroy(): void { this.dispose(); }\n/**\n * Disposes of the router\n * @return {?}\n */\ndispose(): void {\n    if (this.locationSubscription) {\n      this.locationSubscription.unsubscribe();\n      this.locationSubscription = /** @type {?} */(( null));\n    }\n  }\n/**\n * Applies an array of commands to the current url tree and creates a new url tree.\n * \n * When given an activate route, applies the given commands starting from the route.\n * When not given a route, applies the given command starting from the root.\n * \n * ### Usage\n * \n * ```\n * // create /team/33/user/11\n * router.createUrlTree(['/team', 33, 'user', 11]);\n * \n * // create /team/33;expand=true/user/11\n * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n * \n * // you can collapse static segments like this (this works only with the first passed-in value):\n * router.createUrlTree(['/team/33/user', userId]);\n * \n * // If the first segment can contain slashes, and you do not want the router to split it, you\n * // can do the following:\n * \n * router.createUrlTree([{segmentPath: '/one/two'}]);\n * \n * // create /team/33/(user/11//right:chat)\n * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n * \n * // remove the right secondary node\n * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n * \n * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n * \n * // navigate to /team/33/user/11/details\n * router.createUrlTree(['details'], {relativeTo: route});\n * \n * // navigate to /team/33/user/22\n * router.createUrlTree(['../22'], {relativeTo: route});\n * \n * // navigate to /team/44/user/22\n * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n * ```\n * @param {?} commands\n * @param {?=} navigationExtras\n * @return {?}\n */\ncreateUrlTree(commands: any[], navigationExtras: NavigationExtras = {}): UrlTree {\n    const {relativeTo,          queryParams,         fragment,\n           preserveQueryParams, queryParamsHandling, preserveFragment} = navigationExtras;\n    if (isDevMode() && preserveQueryParams && /** @type {?} */(( <any>console)) && /** @type {?} */(( <any>console.warn))) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    const /** @type {?} */ a = relativeTo || this.routerState.root;\n    const /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n    let /** @type {?} */ q: Params|null = null;\n    if (queryParamsHandling) {\n      switch (queryParamsHandling) {\n        case 'merge':\n          q = {...this.currentUrlTree.queryParams, ...queryParams};\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams || null;\n      }\n    } else {\n      q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n    }\n    return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */(( q)), /** @type {?} */(( f)));\n  }\n/**\n * Navigate based on the provided url. This navigation is always absolute.\n * \n * Returns a promise that:\n * - resolves to 'true' when navigation succeeds,\n * - resolves to 'false' when navigation fails,\n * - is rejected when an error happens.\n * \n * ### Usage\n * \n * ```\n * router.navigateByUrl(\"/team/33/user/11\");\n * \n * // Navigate without updating the URL\n * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n * ```\n * \n * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n * and does not apply any delta to the current one.\n * @param {?} url\n * @param {?=} extras\n * @return {?}\n */\nnavigateByUrl(url: string|UrlTree, extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    const /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n    const /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n\n    return this.scheduleNavigation(mergedTree, 'imperative', extras);\n  }\n/**\n * Navigate based on the provided array of commands and a starting point.\n * If no starting route is provided, the navigation is absolute.\n * \n * Returns a promise that:\n * - resolves to 'true' when navigation succeeds,\n * - resolves to 'false' when navigation fails,\n * - is rejected when an error happens.\n * \n * ### Usage\n * \n * ```\n * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n * \n * // Navigate without updating the URL\n * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n * ```\n * \n * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n * URL.\n * @param {?} commands\n * @param {?=} extras\n * @return {?}\n */\nnavigate(commands: any[], extras: NavigationExtras = {skipLocationChange: false}):\n      Promise<boolean> {\n    validateCommands(commands);\n    if (typeof extras.queryParams === 'object' && extras.queryParams !== null) {\n      extras.queryParams = this.removeEmptyProps(extras.queryParams);\n    }\n    return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n  }\n/**\n * Serializes a {\\@link UrlTree} into a string\n * @param {?} url\n * @return {?}\n */\nserializeUrl(url: UrlTree): string { return this.urlSerializer.serialize(url); }\n/**\n * Parses a string into a {\\@link UrlTree}\n * @param {?} url\n * @return {?}\n */\nparseUrl(url: string): UrlTree { return this.urlSerializer.parse(url); }\n/**\n * Returns whether the url is activated\n * @param {?} url\n * @param {?} exact\n * @return {?}\n */\nisActive(url: string|UrlTree, exact: boolean): boolean {\n    if (url instanceof UrlTree) {\n      return containsTree(this.currentUrlTree, url, exact);\n    }\n\n    const /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n    return containsTree(this.currentUrlTree, urlTree, exact);\n  }\n/**\n * @param {?} params\n * @return {?}\n */\nprivate removeEmptyProps(params: Params): Params {\n    return Object.keys(params).reduce((result: Params, key: string) => {\n      const /** @type {?} */ value: any = params[key];\n      if (value !== null && value !== undefined) {\n        result[key] = value;\n      }\n      return result;\n    }, {});\n  }\n/**\n * @return {?}\n */\nprivate processNavigations(): void {\n    concatMap\n        .call(\n            this.navigations,\n            (nav: NavigationParams) => {\n              if (nav) {\n                this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(() => {});\n              } else {\n                return /** @type {?} */(( <any>of (null)));\n              }\n            })\n        .subscribe(() => {});\n  }\n/**\n * @param {?} rawUrl\n * @param {?} source\n * @param {?} extras\n * @return {?}\n */\nprivate scheduleNavigation(rawUrl: UrlTree, source: NavigationSource, extras: NavigationExtras):\n      Promise<boolean> {\n    const /** @type {?} */ lastNavigation = this.navigations.value;\n\n    // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n    // and that navigation results in 'replaceState' that leads to the same URL,\n    // we should skip those.\n    if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n        lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n      return Promise.resolve(true);  // return value is not used\n    }\n\n    // Because of a bug in IE and Edge, the location class fires two events (popstate and\n    // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n    // flicker.\n    if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n        lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n      return Promise.resolve(true);  // return value is not used\n    }\n\n    let /** @type {?} */ resolve: any = null;\n    let /** @type {?} */ reject: any = null;\n\n    const /** @type {?} */ promise = new Promise<boolean>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n\n    const /** @type {?} */ id = ++this.navigationId;\n    this.navigations.next({id, source, rawUrl, extras, resolve, reject, promise});\n\n    // Make sure that the error is propagated even though `processNavigations` catch\n    // handler does not rethrow\n    return promise.catch((e: any) => Promise.reject(e));\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nprivate executeScheduledNavigation({id, rawUrl, extras, resolve, reject}: NavigationParams):\n      void {\n    const /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n    const /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n\n    if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n      this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n      Promise.resolve()\n          .then(\n              (_) => this.runNavigate(\n                  url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null))\n          .then(resolve, reject);\n\n      // we cannot process the current URL, but we could process the previous one =>\n      // we need to do some cleanup\n    } else if (\n        urlTransition && this.rawUrlTree &&\n        this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n      this.routerEvents.next(new NavigationStart(id, this.serializeUrl(url)));\n      Promise.resolve()\n          .then(\n              (_) => this.runNavigate(\n                  url, rawUrl, false, false, id,\n                  createEmptyState(url, this.rootComponentType).snapshot))\n          .then(resolve, reject);\n\n    } else {\n      this.rawUrlTree = rawUrl;\n      resolve(null);\n    }\n  }\n/**\n * @param {?} url\n * @param {?} rawUrl\n * @param {?} shouldPreventPushState\n * @param {?} shouldReplaceUrl\n * @param {?} id\n * @param {?} precreatedState\n * @return {?}\n */\nprivate runNavigate(\n      url: UrlTree, rawUrl: UrlTree, shouldPreventPushState: boolean, shouldReplaceUrl: boolean,\n      id: number, precreatedState: RouterStateSnapshot|null): Promise<boolean> {\n    if (id !== this.navigationId) {\n      this.location.go(this.urlSerializer.serialize(this.currentUrlTree));\n      this.routerEvents.next(new NavigationCancel(\n          id, this.serializeUrl(url),\n          `Navigation ID ${id} is not equal to the current navigation id ${this.navigationId}`));\n      return Promise.resolve(false);\n    }\n\n    return new Promise((resolvePromise, rejectPromise) => {\n      // create an observable of the url and route state snapshot\n      // this operation do not result in any side effects\n      let /** @type {?} */ urlAndSnapshot$: Observable<{appliedUrl: UrlTree, snapshot: RouterStateSnapshot}>;\n      if (!precreatedState) {\n        const /** @type {?} */ moduleInjector = this.ngModule.injector;\n        const /** @type {?} */ redirectsApplied$ =\n            applyRedirects(moduleInjector, this.configLoader, this.urlSerializer, url, this.config);\n\n        urlAndSnapshot$ = mergeMap.call(redirectsApplied$, (appliedUrl: UrlTree) => {\n          return map.call(\n              recognize(\n                  this.rootComponentType, this.config, appliedUrl, this.serializeUrl(appliedUrl)),\n              (snapshot: any) => {\n\n                this.routerEvents.next(new RoutesRecognized(\n                    id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n\n                return {appliedUrl, snapshot};\n              });\n        });\n      } else {\n        urlAndSnapshot$ = of ({appliedUrl: url, snapshot: precreatedState});\n      }\n\n      const /** @type {?} */ beforePreactivationDone$ = mergeMap.call(\n          urlAndSnapshot$, (p: {appliedUrl: string, snapshot: RouterStateSnapshot}) => {\n            return map.call(this.hooks.beforePreactivation(p.snapshot), () => p);\n          });\n\n      // run preactivation: guards and data resolvers\n      let /** @type {?} */ preActivation: PreActivation;\n\n      const /** @type {?} */ preactivationTraverse$ = map.call(\n          beforePreactivationDone$,\n          ({appliedUrl, snapshot}: {appliedUrl: string, snapshot: RouterStateSnapshot}) => {\n            const /** @type {?} */ moduleInjector = this.ngModule.injector;\n            preActivation =\n                new PreActivation(snapshot, this.currentRouterState.snapshot, moduleInjector);\n            preActivation.traverse(this.rootContexts);\n            return {appliedUrl, snapshot};\n          });\n\n      const /** @type {?} */ preactivationCheckGuards$ = mergeMap.call(\n          preactivationTraverse$,\n          ({appliedUrl, snapshot}: {appliedUrl: string, snapshot: RouterStateSnapshot}) => {\n            if (this.navigationId !== id) return of (false);\n\n            this.triggerEvent(\n                new GuardsCheckStart(id, this.serializeUrl(url), appliedUrl, snapshot));\n\n            return map.call(preActivation.checkGuards(), (shouldActivate: boolean) => {\n              this.triggerEvent(new GuardsCheckEnd(\n                  id, this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n              return {appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate};\n            });\n          });\n\n      const /** @type {?} */ preactivationResolveData$ = mergeMap.call(\n          preactivationCheckGuards$,\n          (p: {appliedUrl: string, snapshot: RouterStateSnapshot, shouldActivate: boolean}) => {\n            if (this.navigationId !== id) return of (false);\n\n            if (p.shouldActivate && preActivation.isActivating()) {\n              this.triggerEvent(\n                  new ResolveStart(id, this.serializeUrl(url), p.appliedUrl, p.snapshot));\n              return map.call(preActivation.resolveData(), () => {\n                this.triggerEvent(\n                    new ResolveEnd(id, this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                return p;\n              });\n            } else {\n              return of (p);\n            }\n          });\n\n      const /** @type {?} */ preactivationDone$ = mergeMap.call(preactivationResolveData$, (p: any) => {\n        return map.call(this.hooks.afterPreactivation(p.snapshot), () => p);\n      });\n\n\n      // create router state\n      // this operation has side effects => route state is being affected\n      const /** @type {?} */ routerState$ =\n          map.call(preactivationDone$, ({appliedUrl, snapshot, shouldActivate}: any) => {\n            if (shouldActivate) {\n              const /** @type {?} */ state =\n                  createRouterState(this.routeReuseStrategy, snapshot, this.currentRouterState);\n              return {appliedUrl, state, shouldActivate};\n            } else {\n              return {appliedUrl, state: null, shouldActivate};\n            }\n          });\n\n\n      // applied the new router state\n      // this operation has side effects\n      let /** @type {?} */ navigationIsSuccessful: boolean;\n      const /** @type {?} */ storedState = this.currentRouterState;\n      const /** @type {?} */ storedUrl = this.currentUrlTree;\n\n      routerState$\n          .forEach(({appliedUrl, state, shouldActivate}: any) => {\n            if (!shouldActivate || id !== this.navigationId) {\n              navigationIsSuccessful = false;\n              return;\n            }\n\n            this.currentUrlTree = appliedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n\n            this.currentRouterState = state;\n\n            if (!shouldPreventPushState) {\n              const /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n              if (this.location.isCurrentPathEqualTo(path) || shouldReplaceUrl) {\n                this.location.replaceState(path);\n              } else {\n                this.location.go(path);\n              }\n            }\n\n            new ActivateRoutes(this.routeReuseStrategy, state, storedState)\n                .activate(this.rootContexts);\n\n            navigationIsSuccessful = true;\n          })\n          .then(\n              () => {\n                if (navigationIsSuccessful) {\n                  this.navigated = true;\n                  this.routerEvents.next(new NavigationEnd(\n                      id, this.serializeUrl(url), this.serializeUrl(this.currentUrlTree)));\n                  resolvePromise(true);\n                } else {\n                  this.resetUrlToCurrentUrlTree();\n                  this.routerEvents.next(new NavigationCancel(id, this.serializeUrl(url), ''));\n                  resolvePromise(false);\n                }\n              },\n              (e: any) => {\n                if (isNavigationCancelingError(e)) {\n                  this.resetUrlToCurrentUrlTree();\n                  this.navigated = true;\n                  this.routerEvents.next(\n                      new NavigationCancel(id, this.serializeUrl(url), e.message));\n                  resolvePromise(false);\n                } else {\n                  this.routerEvents.next(new NavigationError(id, this.serializeUrl(url), e));\n                  try {\n                    resolvePromise(this.errorHandler(e));\n                  } catch ( /** @type {?} */ee) {\n                    rejectPromise(ee);\n                  }\n                }\n\n                this.currentRouterState = storedState;\n                this.currentUrlTree = storedUrl;\n                this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n                this.location.replaceState(this.serializeUrl(this.rawUrlTree));\n              });\n    });\n  }\n/**\n * @return {?}\n */\nprivate resetUrlToCurrentUrlTree(): void {\n    const /** @type {?} */ path = this.urlSerializer.serialize(this.rawUrlTree);\n    this.location.replaceState(path);\n  }\n}\n\nfunction Router_tsickle_Closure_declarations() {\n/** @type {?} */\nRouter.prototype.currentUrlTree;\n/** @type {?} */\nRouter.prototype.rawUrlTree;\n/** @type {?} */\nRouter.prototype.navigations;\n/** @type {?} */\nRouter.prototype.routerEvents;\n/** @type {?} */\nRouter.prototype.currentRouterState;\n/** @type {?} */\nRouter.prototype.locationSubscription;\n/** @type {?} */\nRouter.prototype.navigationId;\n/** @type {?} */\nRouter.prototype.configLoader;\n/** @type {?} */\nRouter.prototype.ngModule;\n/**\n * Error handler that is invoked when a navigation errors.\n * \n * See {\\@link ErrorHandler} for more information.\n * @type {?}\n */\nRouter.prototype.errorHandler;\n/**\n * Indicates if at least one navigation happened.\n * @type {?}\n */\nRouter.prototype.navigated;\n/**\n * Used by RouterModule. This allows us to\n * pause the navigation either before preactivation or after it.\n * \\@internal\n * @type {?}\n */\nRouter.prototype.hooks;\n/**\n * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n * @type {?}\n */\nRouter.prototype.urlHandlingStrategy;\n/** @type {?} */\nRouter.prototype.routeReuseStrategy;\n/** @type {?} */\nRouter.prototype.rootComponentType;\n/** @type {?} */\nRouter.prototype.urlSerializer;\n/** @type {?} */\nRouter.prototype.rootContexts;\n/** @type {?} */\nRouter.prototype.location;\n/** @type {?} */\nRouter.prototype.config;\n}\n\nclass CanActivate {\n/**\n * @param {?} path\n */\nconstructor(public path: ActivatedRouteSnapshot[]) {}\n/**\n * @return {?}\n */\nget route(): ActivatedRouteSnapshot { return this.path[this.path.length - 1]; }\n}\n\nfunction CanActivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanActivate.prototype.path;\n}\n\nclass CanDeactivate {\n/**\n * @param {?} component\n * @param {?} route\n */\nconstructor(public component: Object|null,\npublic route: ActivatedRouteSnapshot) {}\n}\n\nfunction CanDeactivate_tsickle_Closure_declarations() {\n/** @type {?} */\nCanDeactivate.prototype.component;\n/** @type {?} */\nCanDeactivate.prototype.route;\n}\n\nexport class PreActivation {\nprivate canActivateChecks: CanActivate[] = [];\nprivate canDeactivateChecks: CanDeactivate[] = [];\n/**\n * @param {?} future\n * @param {?} curr\n * @param {?} moduleInjector\n */\nconstructor(\nprivate future: RouterStateSnapshot,\nprivate curr: RouterStateSnapshot,\nprivate moduleInjector: Injector) {}\n/**\n * @param {?} parentContexts\n * @return {?}\n */\ntraverse(parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ futureRoot = this.future._root;\n    const /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n    this.traverseChildRoutes(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n  }\n/**\n * @return {?}\n */\ncheckGuards(): Observable<boolean> {\n    if (!this.isDeactivating() && !this.isActivating()) {\n      return of (true);\n    }\n    const /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n    return mergeMap.call(\n        canDeactivate$,\n        (canDeactivate: boolean) => canDeactivate ? this.runCanActivateChecks() : of (false));\n  }\n/**\n * @return {?}\n */\nresolveData(): Observable<any> {\n    if (!this.isActivating()) return of (null);\n    const /** @type {?} */ checks$ = from(this.canActivateChecks);\n    const /** @type {?} */ runningChecks$ =\n        concatMap.call(checks$, (check: CanActivate) => this.runResolve(check.route));\n    return reduce.call(runningChecks$, (_: any, __: any) => _);\n  }\n/**\n * @return {?}\n */\nisDeactivating(): boolean { return this.canDeactivateChecks.length !== 0; }\n/**\n * @return {?}\n */\nisActivating(): boolean { return this.canActivateChecks.length !== 0; }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} contexts\n * @param {?} futurePath\n * @return {?}\n */\nprivate traverseChildRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>|null,\n      contexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n\n    // Process the children of the future route\n    futureNode.children.forEach(c => {\n      this.traverseRoutes(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n      delete prevChildren[c.value.outlet];\n    });\n\n    // Process any children left from the current route (not active for the future route)\n    forEach(\n        prevChildren, (v: TreeNode<ActivatedRouteSnapshot>, k: string) =>\n                          this.deactivateRouteAndItsChildren(v, /** @type {?} */(( contexts)).getContext(k)));\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentContexts\n * @param {?} futurePath\n * @return {?}\n */\nprivate traverseRoutes(\n      futureNode: TreeNode<ActivatedRouteSnapshot>, currNode: TreeNode<ActivatedRouteSnapshot>,\n      parentContexts: ChildrenOutletContexts|null, futurePath: ActivatedRouteSnapshot[]): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n    const /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n\n    // reusing the node\n    if (curr && future._routeConfig === curr._routeConfig) {\n      const /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(\n          curr, future, /** @type {?} */(( future._routeConfig)).runGuardsAndResolvers);\n      if (shouldRunGuardsAndResolvers) {\n        this.canActivateChecks.push(new CanActivate(futurePath));\n      } else {\n        // we need to set the data\n        future.data = curr.data;\n        future._resolvedData = curr._resolvedData;\n      }\n\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(\n            futureNode, currNode, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, currNode, parentContexts, futurePath);\n      }\n\n      if (shouldRunGuardsAndResolvers) {\n        const /** @type {?} */ outlet = /** @type {?} */(( /** @type {?} */(( context)).outlet));\n        this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n      }\n    } else {\n      if (curr) {\n        this.deactivateRouteAndItsChildren(currNode, context);\n      }\n\n      this.canActivateChecks.push(new CanActivate(futurePath));\n      // If we have a component, we need to go through an outlet.\n      if (future.component) {\n        this.traverseChildRoutes(futureNode, null, context ? context.children : null, futurePath);\n\n        // if we have a componentless route, we recurse but keep the same outlet map.\n      } else {\n        this.traverseChildRoutes(futureNode, null, parentContexts, futurePath);\n      }\n    }\n  }\n/**\n * @param {?} curr\n * @param {?} future\n * @param {?} mode\n * @return {?}\n */\nprivate shouldRunGuardsAndResolvers(\n      curr: ActivatedRouteSnapshot, future: ActivatedRouteSnapshot,\n      mode: RunGuardsAndResolvers|undefined): boolean {\n    switch (mode) {\n      case 'always':\n        return true;\n\n      case 'paramsOrQueryParamsChange':\n        return !equalParamsAndUrlSegments(curr, future) ||\n            !shallowEqual(curr.queryParams, future.queryParams);\n\n      case 'paramsChange':\n      default:\n        return !equalParamsAndUrlSegments(curr, future);\n    }\n  }\n/**\n * @param {?} route\n * @param {?} context\n * @return {?}\n */\nprivate deactivateRouteAndItsChildren(\n      route: TreeNode<ActivatedRouteSnapshot>, context: OutletContext|null): void {\n    const /** @type {?} */ children = nodeChildrenAsMap(route);\n    const /** @type {?} */ r = route.value;\n\n    forEach(children, (node: TreeNode<ActivatedRouteSnapshot>, childName: string) => {\n      if (!r.component) {\n        this.deactivateRouteAndItsChildren(node, context);\n      } else if (context) {\n        this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n      } else {\n        this.deactivateRouteAndItsChildren(node, null);\n      }\n    });\n\n    if (!r.component) {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    } else if (context && context.outlet && context.outlet.isActivated) {\n      this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n    } else {\n      this.canDeactivateChecks.push(new CanDeactivate(null, r));\n    }\n  }\n/**\n * @return {?}\n */\nprivate runCanDeactivateChecks(): Observable<boolean> {\n    const /** @type {?} */ checks$ = from(this.canDeactivateChecks);\n    const /** @type {?} */ runningChecks$ = mergeMap.call(\n        checks$, (check: CanDeactivate) => this.runCanDeactivate(check.component, check.route));\n    return every.call(runningChecks$, (result: boolean) => result === true);\n  }\n/**\n * @return {?}\n */\nprivate runCanActivateChecks(): Observable<boolean> {\n    const /** @type {?} */ checks$ = from(this.canActivateChecks);\n    const /** @type {?} */ runningChecks$ = concatMap.call(\n        checks$, (check: CanActivate) => andObservables(from(\n                     [this.runCanActivateChild(check.path), this.runCanActivate(check.route)])));\n    return every.call(runningChecks$, (result: boolean) => result === true);\n  }\n/**\n * @param {?} future\n * @return {?}\n */\nprivate runCanActivate(future: ActivatedRouteSnapshot): Observable<boolean> {\n    const /** @type {?} */ canActivate = future._routeConfig ? future._routeConfig.canActivate : null;\n    if (!canActivate || canActivate.length === 0) return of (true);\n    const /** @type {?} */ obs = map.call(from(canActivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, future);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canActivate) {\n        observable = wrapIntoObservable(guard.canActivate(future, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(future, this.future));\n      }\n      return first.call(observable);\n    });\n    return andObservables(obs);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate runCanActivateChild(path: ActivatedRouteSnapshot[]): Observable<boolean> {\n    const /** @type {?} */ future = path[path.length - 1];\n\n    const /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n                                       .reverse()\n                                       .map(p => this.extractCanActivateChild(p))\n                                       .filter(_ => _ !== null);\n\n    return andObservables(map.call(from(canActivateChildGuards), (d: any) => {\n      const /** @type {?} */ obs = map.call(from(d.guards), (c: any) => {\n        const /** @type {?} */ guard = this.getToken(c, d.node);\n        let /** @type {?} */ observable: Observable<boolean>;\n        if (guard.canActivateChild) {\n          observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n        } else {\n          observable = wrapIntoObservable(guard(future, this.future));\n        }\n        return first.call(observable);\n      });\n      return andObservables(obs);\n    }));\n  }\n/**\n * @param {?} p\n * @return {?}\n */\nprivate extractCanActivateChild(p: ActivatedRouteSnapshot):\n      {node: ActivatedRouteSnapshot, guards: any[]}|null {\n    const /** @type {?} */ canActivateChild = p._routeConfig ? p._routeConfig.canActivateChild : null;\n    if (!canActivateChild || canActivateChild.length === 0) return null;\n    return {node: p, guards: canActivateChild};\n  }\n/**\n * @param {?} component\n * @param {?} curr\n * @return {?}\n */\nprivate runCanDeactivate(component: Object|null, curr: ActivatedRouteSnapshot):\n      Observable<boolean> {\n    const /** @type {?} */ canDeactivate = curr && curr._routeConfig ? curr._routeConfig.canDeactivate : null;\n    if (!canDeactivate || canDeactivate.length === 0) return of (true);\n    const /** @type {?} */ canDeactivate$ = mergeMap.call(from(canDeactivate), (c: any) => {\n      const /** @type {?} */ guard = this.getToken(c, curr);\n      let /** @type {?} */ observable: Observable<boolean>;\n      if (guard.canDeactivate) {\n        observable =\n            wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n      } else {\n        observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n      }\n      return first.call(observable);\n    });\n    return every.call(canDeactivate$, (result: any) => result === true);\n  }\n/**\n * @param {?} future\n * @return {?}\n */\nprivate runResolve(future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ resolve = future._resolve;\n    return map.call(this.resolveNode(resolve, future), (resolvedData: any): any => {\n      future._resolvedData = resolvedData;\n      future.data = {...future.data, ...inheritedParamsDataResolve(future).resolve};\n      return null;\n    });\n  }\n/**\n * @param {?} resolve\n * @param {?} future\n * @return {?}\n */\nprivate resolveNode(resolve: ResolveData, future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ keys = Object.keys(resolve);\n    if (keys.length === 0) {\n      return of ({});\n    }\n    if (keys.length === 1) {\n      const /** @type {?} */ key = keys[0];\n      return map.call(\n          this.getResolver(resolve[key], future), (value: any) => { return {[key]: value}; });\n    }\n    const /** @type {?} */ data: {[k: string]: any} = {};\n    const /** @type {?} */ runningResolvers$ = mergeMap.call(from(keys), (key: string) => {\n      return map.call(this.getResolver(resolve[key], future), (value: any) => {\n        data[key] = value;\n        return value;\n      });\n    });\n    return map.call(last.call(runningResolvers$), () => data);\n  }\n/**\n * @param {?} injectionToken\n * @param {?} future\n * @return {?}\n */\nprivate getResolver(injectionToken: any, future: ActivatedRouteSnapshot): Observable<any> {\n    const /** @type {?} */ resolver = this.getToken(injectionToken, future);\n    return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n                              wrapIntoObservable(resolver(future, this.future));\n  }\n/**\n * @param {?} token\n * @param {?} snapshot\n * @return {?}\n */\nprivate getToken(token: any, snapshot: ActivatedRouteSnapshot): any {\n    const /** @type {?} */ config = closestLoadedConfig(snapshot);\n    const /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n    return injector.get(token);\n  }\n}\n\nfunction PreActivation_tsickle_Closure_declarations() {\n/** @type {?} */\nPreActivation.prototype.canActivateChecks;\n/** @type {?} */\nPreActivation.prototype.canDeactivateChecks;\n/** @type {?} */\nPreActivation.prototype.future;\n/** @type {?} */\nPreActivation.prototype.curr;\n/** @type {?} */\nPreActivation.prototype.moduleInjector;\n}\n\nclass ActivateRoutes {\n/**\n * @param {?} routeReuseStrategy\n * @param {?} futureState\n * @param {?} currState\n */\nconstructor(\nprivate routeReuseStrategy: RouteReuseStrategy,\nprivate futureState: RouterState,\nprivate currState: RouterState) {}\n/**\n * @param {?} parentContexts\n * @return {?}\n */\nactivate(parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ futureRoot = this.futureState._root;\n    const /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} contexts\n * @return {?}\n */\nprivate deactivateChildRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>|null,\n      contexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ children: {[outletName: string]: TreeNode<ActivatedRoute>} = nodeChildrenAsMap(currNode);\n\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const /** @type {?} */ childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n\n    // De-activate the routes that will not be re-used\n    forEach(children, (v: TreeNode<ActivatedRoute>, childName: string) => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentContext\n * @return {?}\n */\nprivate deactivateRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      parentContext: ChildrenOutletContexts): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const /** @type {?} */ context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n/**\n * @param {?} route\n * @param {?} parentContexts\n * @return {?}\n */\nprivate deactivateRouteAndItsChildren(\n      route: TreeNode<ActivatedRoute>, parentContexts: ChildrenOutletContexts): void {\n    if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n/**\n * @param {?} route\n * @param {?} parentContexts\n * @return {?}\n */\nprivate detachAndStoreRouteSubtree(\n      route: TreeNode<ActivatedRoute>, parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n    if (context && context.outlet) {\n      const /** @type {?} */ componentRef = context.outlet.detach();\n      const /** @type {?} */ contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {componentRef, route, contexts});\n    }\n  }\n/**\n * @param {?} route\n * @param {?} parentContexts\n * @return {?}\n */\nprivate deactivateRouteAndOutlet(\n      route: TreeNode<ActivatedRoute>, parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n\n    if (context) {\n      const /** @type {?} */ children: {[outletName: string]: any} = nodeChildrenAsMap(route);\n      const /** @type {?} */ contexts = route.value.component ? context.children : parentContexts;\n\n      forEach(children, (v: any, k: string) => this.deactivateRouteAndItsChildren(v, contexts));\n\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n    }\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} contexts\n * @return {?}\n */\nprivate activateChildRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>|null,\n      contexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ children: {[outlet: string]: any} = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(\n        c => { this.activateRoutes(c, children[c.value.outlet], contexts); });\n  }\n/**\n * @param {?} futureNode\n * @param {?} currNode\n * @param {?} parentContexts\n * @return {?}\n */\nprivate activateRoutes(\n      futureNode: TreeNode<ActivatedRoute>, currNode: TreeNode<ActivatedRoute>,\n      parentContexts: ChildrenOutletContexts): void {\n    const /** @type {?} */ future = futureNode.value;\n    const /** @type {?} */ curr = currNode ? currNode.value : null;\n\n    advanceActivatedRoute(future);\n\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const /** @type {?} */ stored =\n              ( /** @type {?} */((<DetachedRouteHandleInternal>this.routeReuseStrategy.retrieve(future.snapshot))));\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRouteNodeAndItsChildren(stored.route);\n        } else {\n          const /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n          const /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n\n          context.route = future;\n          context.resolver = cmpFactoryResolver;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, cmpFactoryResolver);\n          }\n\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n  }\n}\n\nfunction ActivateRoutes_tsickle_Closure_declarations() {\n/** @type {?} */\nActivateRoutes.prototype.routeReuseStrategy;\n/** @type {?} */\nActivateRoutes.prototype.futureState;\n/** @type {?} */\nActivateRoutes.prototype.currState;\n}\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node: TreeNode<ActivatedRoute>): void {\n  advanceActivatedRoute(node.value);\n  node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig|null {\n  for (let /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n    const /** @type {?} */ route = s._routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n    if (route && route.component) return null;\n  }\n\n  return null;\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot: ActivatedRouteSnapshot): LoadedRouterConfig|null {\n  if (!snapshot) return null;\n\n  for (let /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n    const /** @type {?} */ route = s._routeConfig;\n    if (route && route._loadedConfig) return route._loadedConfig;\n  }\n\n  return null;\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap<T extends{outlet: string}>(node: TreeNode<T>| null) {\n  const /** @type {?} */ map: {[outlet: string]: TreeNode<T>} = {};\n\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n\n  return map;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands: string[]): void {\n  for (let /** @type {?} */ i = 0; i < commands.length; i++) {\n    const /** @type {?} */ cmd = commands[i];\n    if (cmd == null) {\n      throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {LocationStrategy} from '@angular/common';\nimport {Attribute, Directive, ElementRef, HostBinding, HostListener, Input, OnChanges, OnDestroy, Renderer2, isDevMode} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {QueryParamsHandling} from '../config';\nimport {NavigationEnd} from '../events';\nimport {Router} from '../router';\nimport {ActivatedRoute} from '../router_state';\nimport {UrlTree} from '../url_tree';\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n * \n * \\@howToUse \n * \n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n * \n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n * \n * \\@description \n * \n * The RouterLink directives let you link to specific parts of your app.\n * \n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n * \n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n * \n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n * \n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n * \n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n * \n * You can set query params and fragment as follows:\n * \n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n * \n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n * \n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n * \n * You can tell the directive to how to handle queryParams, available options are:\n *  - 'merge' merge the queryParams into the current queryParams\n *  - 'preserve' preserve the current queryParams\n *  - default / '' use the queryParams only\n *  same options for {\\@link NavigationExtras#queryParamsHandling}\n * \n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n * \n * The router link directive always treats the provided input as a delta to the current url.\n * \n * For instance, if the current url is `/user/(box//aux:team)`.\n * \n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n * \n * \\@ngModule RouterModule\n * \n * See {\\@link Router#createUrlTree} for more information.\n * \n * \\@stable\n */\nexport class RouterLink {\n   queryParams: {[k: string]: any};\n   fragment: string;\n   queryParamsHandling: QueryParamsHandling;\n   preserveFragment: boolean;\n   skipLocationChange: boolean;\n   replaceUrl: boolean;\nprivate commands: any[] = [];\nprivate preserve: boolean;\n/**\n * @param {?} router\n * @param {?} route\n * @param {?} tabIndex\n * @param {?} renderer\n * @param {?} el\n */\nconstructor(\nprivate router: Router,\nprivate route: ActivatedRoute,\n       tabIndex: string, renderer: Renderer2, el: ElementRef) {\n    if (tabIndex == null) {\n      renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n    }\n  }\n/**\n * @param {?} commands\n * @return {?}\n */\nset routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n/**\n * @deprecated 4.0.0 use `queryParamsHandling` instead.\n * @param {?} value\n * @return {?}\n */\nset preserveQueryParams(value: boolean) {\n    if (isDevMode() && /** @type {?} */(( <any>console)) && /** @type {?} */(( <any>console.warn))) {\n      console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n/**\n * @return {?}\n */\nonClick(): boolean {\n    const /** @type {?} */ extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return true;\n  }\n/**\n * @return {?}\n */\nget urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: ':not(a)[routerLink]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: ActivatedRoute, },\n{type: undefined, decorators: [{ type: Attribute, args: ['tabindex', ] }, ]},\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'queryParams': [{ type: Input },],\n'fragment': [{ type: Input },],\n'queryParamsHandling': [{ type: Input },],\n'preserveFragment': [{ type: Input },],\n'skipLocationChange': [{ type: Input },],\n'replaceUrl': [{ type: Input },],\n'routerLink': [{ type: Input },],\n'preserveQueryParams': [{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction RouterLink_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterLink.ctorParameters;\n/** @type {?} */\nRouterLink.propDecorators;\n/** @type {?} */\nRouterLink.prototype.queryParams;\n/** @type {?} */\nRouterLink.prototype.fragment;\n/** @type {?} */\nRouterLink.prototype.queryParamsHandling;\n/** @type {?} */\nRouterLink.prototype.preserveFragment;\n/** @type {?} */\nRouterLink.prototype.skipLocationChange;\n/** @type {?} */\nRouterLink.prototype.replaceUrl;\n/** @type {?} */\nRouterLink.prototype.commands;\n/** @type {?} */\nRouterLink.prototype.preserve;\n/** @type {?} */\nRouterLink.prototype.router;\n/** @type {?} */\nRouterLink.prototype.route;\n}\n\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n * \n * See {\\@link RouterLink} for more information.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterLinkWithHref implements OnChanges, OnDestroy {\n    target: string;\n   queryParams: {[k: string]: any};\n   fragment: string;\n   queryParamsHandling: QueryParamsHandling;\n   preserveFragment: boolean;\n   skipLocationChange: boolean;\n   replaceUrl: boolean;\nprivate commands: any[] = [];\nprivate subscription: Subscription;\nprivate preserve: boolean;\n\n  // the url displayed on the anchor element.\n   href: string;\n/**\n * @param {?} router\n * @param {?} route\n * @param {?} locationStrategy\n */\nconstructor(\nprivate router: Router,\nprivate route: ActivatedRoute,\nprivate locationStrategy: LocationStrategy) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.updateTargetUrlAndHref();\n      }\n    });\n  }\n/**\n * @param {?} commands\n * @return {?}\n */\nset routerLink(commands: any[]|string) {\n    if (commands != null) {\n      this.commands = Array.isArray(commands) ? commands : [commands];\n    } else {\n      this.commands = [];\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset preserveQueryParams(value: boolean) {\n    if (isDevMode() && /** @type {?} */(( <any>console)) && /** @type {?} */(( <any>console.warn))) {\n      console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n    }\n    this.preserve = value;\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: {}): any { this.updateTargetUrlAndHref(); }\n/**\n * @return {?}\n */\nngOnDestroy(): any { this.subscription.unsubscribe(); }\n/**\n * @param {?} button\n * @param {?} ctrlKey\n * @param {?} metaKey\n * @param {?} shiftKey\n * @return {?}\n */\nonClick(button: number, ctrlKey: boolean, metaKey: boolean, shiftKey: boolean): boolean {\n    if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n      return true;\n    }\n\n    if (typeof this.target === 'string' && this.target != '_self') {\n      return true;\n    }\n\n    const /** @type {?} */ extras = {\n      skipLocationChange: attrBoolValue(this.skipLocationChange),\n      replaceUrl: attrBoolValue(this.replaceUrl),\n    };\n    this.router.navigateByUrl(this.urlTree, extras);\n    return false;\n  }\n/**\n * @return {?}\n */\nprivate updateTargetUrlAndHref(): void {\n    this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n  }\n/**\n * @return {?}\n */\nget urlTree(): UrlTree {\n    return this.router.createUrlTree(this.commands, {\n      relativeTo: this.route,\n      queryParams: this.queryParams,\n      fragment: this.fragment,\n      preserveQueryParams: attrBoolValue(this.preserve),\n      queryParamsHandling: this.queryParamsHandling,\n      preserveFragment: attrBoolValue(this.preserveFragment),\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'a[routerLink]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: ActivatedRoute, },\n{type: LocationStrategy, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'target': [{ type: HostBinding, args: ['attr.target', ] },{ type: Input },],\n'queryParams': [{ type: Input },],\n'fragment': [{ type: Input },],\n'queryParamsHandling': [{ type: Input },],\n'preserveFragment': [{ type: Input },],\n'skipLocationChange': [{ type: Input },],\n'replaceUrl': [{ type: Input },],\n'href': [{ type: HostBinding },],\n'routerLink': [{ type: Input },],\n'preserveQueryParams': [{ type: Input },],\n'onClick': [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'], ] },],\n};\n}\n\nfunction RouterLinkWithHref_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterLinkWithHref.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterLinkWithHref.ctorParameters;\n/** @type {?} */\nRouterLinkWithHref.propDecorators;\n/** @type {?} */\nRouterLinkWithHref.prototype.target;\n/** @type {?} */\nRouterLinkWithHref.prototype.queryParams;\n/** @type {?} */\nRouterLinkWithHref.prototype.fragment;\n/** @type {?} */\nRouterLinkWithHref.prototype.queryParamsHandling;\n/** @type {?} */\nRouterLinkWithHref.prototype.preserveFragment;\n/** @type {?} */\nRouterLinkWithHref.prototype.skipLocationChange;\n/** @type {?} */\nRouterLinkWithHref.prototype.replaceUrl;\n/** @type {?} */\nRouterLinkWithHref.prototype.commands;\n/** @type {?} */\nRouterLinkWithHref.prototype.subscription;\n/** @type {?} */\nRouterLinkWithHref.prototype.preserve;\n/** @type {?} */\nRouterLinkWithHref.prototype.href;\n/** @type {?} */\nRouterLinkWithHref.prototype.router;\n/** @type {?} */\nRouterLinkWithHref.prototype.route;\n/** @type {?} */\nRouterLinkWithHref.prototype.locationStrategy;\n}\n\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s: any): boolean {\n  return s === '' || !!s;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/directives/router_link.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AfterContentInit, ChangeDetectorRef, ContentChildren, Directive, ElementRef, Input, OnChanges, OnDestroy, QueryList, Renderer2, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {NavigationEnd} from '../events';\nimport {Router} from '../router';\nimport {RouterLink, RouterLinkWithHref} from './router_link';\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n * \n * \\@howToUse \n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * \\@description \n * \n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n * \n * Consider the following example:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n * \n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n * \n * You can set more than one class, as follows:\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n * \n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n * \n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n * \n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n * \n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n * \n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n * \n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n * \n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterLinkActive implements OnChanges,\n    OnDestroy, AfterContentInit {\n   links: QueryList<RouterLink>;\n  \n  linksWithHrefs: QueryList<RouterLinkWithHref>;\nprivate classes: string[] = [];\nprivate subscription: Subscription;\nprivate active: boolean = false;\n\n   routerLinkActiveOptions: {exact: boolean} = {exact: false};\n/**\n * @param {?} router\n * @param {?} element\n * @param {?} renderer\n * @param {?} cdr\n */\nconstructor(\nprivate router: Router,\nprivate element: ElementRef,\nprivate renderer: Renderer2,\nprivate cdr: ChangeDetectorRef) {\n    this.subscription = router.events.subscribe(s => {\n      if (s instanceof NavigationEnd) {\n        this.update();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nget isActive(): boolean { return this.active; }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this.links.changes.subscribe(_ => this.update());\n    this.linksWithHrefs.changes.subscribe(_ => this.update());\n    this.update();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nset routerLinkActive(data: string[]|string) {\n    const /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n    this.classes = classes.filter(c => !!c);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void { this.update(); }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.subscription.unsubscribe(); }\n/**\n * @return {?}\n */\nprivate update(): void {\n    if (!this.links || !this.linksWithHrefs || !this.router.navigated) return;\n    Promise.resolve().then(() => {\n      const /** @type {?} */ hasActiveLinks = this.hasActiveLinks();\n      if (this.active !== hasActiveLinks) {\n        this.active = hasActiveLinks;\n        this.classes.forEach((c) => {\n          if (hasActiveLinks) {\n            this.renderer.addClass(this.element.nativeElement, c);\n          } else {\n            this.renderer.removeClass(this.element.nativeElement, c);\n          }\n        });\n      }\n    });\n  }\n/**\n * @param {?} router\n * @return {?}\n */\nprivate isLinkActive(router: Router): (link: (RouterLink|RouterLinkWithHref)) => boolean {\n    return (link: RouterLink | RouterLinkWithHref) =>\n               router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n  }\n/**\n * @return {?}\n */\nprivate hasActiveLinks(): boolean {\n    return this.links.some(this.isLinkActive(this.router)) ||\n        this.linksWithHrefs.some(this.isLinkActive(this.router));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[routerLinkActive]',\n  exportAs: 'routerLinkActive',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'links': [{ type: ContentChildren, args: [RouterLink, {descendants: true}, ] },],\n'linksWithHrefs': [{ type: ContentChildren, args: [RouterLinkWithHref, {descendants: true}, ] },],\n'routerLinkActiveOptions': [{ type: Input },],\n'routerLinkActive': [{ type: Input },],\n};\n}\n\nfunction RouterLinkActive_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterLinkActive.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterLinkActive.ctorParameters;\n/** @type {?} */\nRouterLinkActive.propDecorators;\n/** @type {?} */\nRouterLinkActive.prototype.links;\n/** @type {?} */\nRouterLinkActive.prototype.linksWithHrefs;\n/** @type {?} */\nRouterLinkActive.prototype.classes;\n/** @type {?} */\nRouterLinkActive.prototype.subscription;\n/** @type {?} */\nRouterLinkActive.prototype.active;\n/** @type {?} */\nRouterLinkActive.prototype.routerLinkActiveOptions;\n/** @type {?} */\nRouterLinkActive.prototype.router;\n/** @type {?} */\nRouterLinkActive.prototype.element;\n/** @type {?} */\nRouterLinkActive.prototype.renderer;\n/** @type {?} */\nRouterLinkActive.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/directives/router_link_active.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactoryResolver, ComponentRef} from '@angular/core';\n\nimport {RouterOutlet} from './directives/router_outlet';\nimport {ActivatedRoute} from './router_state';\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n * \n * \\@stable\n */\nexport class OutletContext {\n  outlet: RouterOutlet|null = null;\n  route: ActivatedRoute|null = null;\n  resolver: ComponentFactoryResolver|null = null;\n  children = new ChildrenOutletContexts();\n  attachRef: ComponentRef<any>|null = null;\n}\n\nfunction OutletContext_tsickle_Closure_declarations() {\n/** @type {?} */\nOutletContext.prototype.outlet;\n/** @type {?} */\nOutletContext.prototype.route;\n/** @type {?} */\nOutletContext.prototype.resolver;\n/** @type {?} */\nOutletContext.prototype.children;\n/** @type {?} */\nOutletContext.prototype.attachRef;\n}\n\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n * \n * \\@stable\n */\nexport class ChildrenOutletContexts {\nprivate contexts = new Map<string, OutletContext>();\n/**\n * Called when a `RouterOutlet` directive is instantiated\n * @param {?} childName\n * @param {?} outlet\n * @return {?}\n */\nonChildOutletCreated(childName: string, outlet: RouterOutlet): void {\n    const /** @type {?} */ context = this.getOrCreateContext(childName);\n    context.outlet = outlet;\n    this.contexts.set(childName, context);\n  }\n/**\n * Called when a `RouterOutlet` directive is destroyed.\n * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n * re-created later.\n * @param {?} childName\n * @return {?}\n */\nonChildOutletDestroyed(childName: string): void {\n    const /** @type {?} */ context = this.getContext(childName);\n    if (context) {\n      context.outlet = null;\n    }\n  }\n/**\n * Called when the corresponding route is deactivated during navigation.\n * Because the component get destroyed, all children outlet are destroyed.\n * @return {?}\n */\nonOutletDeactivated(): Map<string, OutletContext> {\n    const /** @type {?} */ contexts = this.contexts;\n    this.contexts = new Map();\n    return contexts;\n  }\n/**\n * @param {?} contexts\n * @return {?}\n */\nonOutletReAttached(contexts: Map<string, OutletContext>) { this.contexts = contexts; }\n/**\n * @param {?} childName\n * @return {?}\n */\ngetOrCreateContext(childName: string): OutletContext {\n    let /** @type {?} */ context = this.getContext(childName);\n\n    if (!context) {\n      context = new OutletContext();\n      this.contexts.set(childName, context);\n    }\n\n    return context;\n  }\n/**\n * @param {?} childName\n * @return {?}\n */\ngetContext(childName: string): OutletContext|null { return this.contexts.get(childName) || null; }\n}\n\nfunction ChildrenOutletContexts_tsickle_Closure_declarations() {\n/** @type {?} */\nChildrenOutletContexts.prototype.contexts;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router_outlet_context.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Attribute, ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Injector, OnDestroy, OnInit, Output, ViewContainerRef} from '@angular/core';\n\nimport {ChildrenOutletContexts} from '../router_outlet_context';\nimport {ActivatedRoute} from '../router_state';\nimport {PRIMARY_OUTLET} from '../shared';\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n * \n * \\@howToUse \n * \n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n * \n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n * \n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n * \n * \\@stable\n */\nexport class RouterOutlet implements OnDestroy, OnInit {\nprivate activated: ComponentRef<any>|null = null;\nprivate _activatedRoute: ActivatedRoute|null = null;\nprivate name: string;\n\n   activateEvents = new EventEmitter<any>();\n   deactivateEvents = new EventEmitter<any>();\n/**\n * @param {?} parentContexts\n * @param {?} location\n * @param {?} resolver\n * @param {?} name\n * @param {?} changeDetector\n */\nconstructor(\nprivate parentContexts: ChildrenOutletContexts,\nprivate location: ViewContainerRef,\nprivate resolver: ComponentFactoryResolver,  name: string,\nprivate changeDetector: ChangeDetectorRef) {\n    this.name = name || PRIMARY_OUTLET;\n    parentContexts.onChildOutletCreated(this.name, this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.parentContexts.onChildOutletDestroyed(this.name); }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    if (!this.activated) {\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const /** @type {?} */ context = this.parentContexts.getContext(this.name);\n      if (context && context.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.resolver || null);\n        }\n      }\n    }\n  }\n/**\n * @deprecated since v4 *\n * @return {?}\n */\nget locationInjector(): Injector { return this.location.injector; }\n/**\n * @deprecated since v4 *\n * @return {?}\n */\nget locationFactoryResolver(): ComponentFactoryResolver { return this.resolver; }\n/**\n * @return {?}\n */\nget isActivated(): boolean { return !!this.activated; }\n/**\n * @return {?}\n */\nget component(): Object {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this.activated.instance;\n  }\n/**\n * @return {?}\n */\nget activatedRoute(): ActivatedRoute {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return /** @type {?} */(( this._activatedRoute as ActivatedRoute));\n  }\n/**\n * @return {?}\n */\nget activatedRouteData() {\n    if (this._activatedRoute) {\n      return this._activatedRoute.snapshot.data;\n    }\n    return {};\n  }\n/**\n * Called when the `RouteReuseStrategy` instructs to detach the subtree\n * @return {?}\n */\ndetach(): ComponentRef<any> {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    this.location.detach();\n    const /** @type {?} */ cmp = this.activated;\n    this.activated = null;\n    this._activatedRoute = null;\n    return cmp;\n  }\n/**\n * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n * @param {?} ref\n * @param {?} activatedRoute\n * @return {?}\n */\nattach(ref: ComponentRef<any>, activatedRoute: ActivatedRoute) {\n    this.activated = ref;\n    this._activatedRoute = activatedRoute;\n    this.location.insert(ref.hostView);\n  }\n/**\n * @return {?}\n */\ndeactivate(): void {\n    if (this.activated) {\n      const /** @type {?} */ c = this.component;\n      this.activated.destroy();\n      this.activated = null;\n      this._activatedRoute = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n/**\n * @param {?} activatedRoute\n * @param {?} resolver\n * @return {?}\n */\nactivateWith(activatedRoute: ActivatedRoute, resolver: ComponentFactoryResolver|null) {\n    if (this.isActivated) {\n      throw new Error('Cannot activate an already activated outlet');\n    }\n    this._activatedRoute = activatedRoute;\n    const /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n    const /** @type {?} */ component = /** @type {?} */(( <any> /** @type {?} */((snapshot._routeConfig)).component));\n    resolver = resolver || this.resolver;\n    const /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n    const /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n    const /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n    this.activated = this.location.createComponent(factory, this.location.length, injector);\n    // Calling `markForCheck` to make sure we will run the change detection when the\n    // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n    this.changeDetector.markForCheck();\n    this.activateEvents.emit(this.activated.instance);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'router-outlet', exportAs: 'outlet'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChildrenOutletContexts, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: undefined, decorators: [{ type: Attribute, args: ['name', ] }, ]},\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activateEvents': [{ type: Output, args: ['activate', ] },],\n'deactivateEvents': [{ type: Output, args: ['deactivate', ] },],\n};\n}\n\nfunction RouterOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterOutlet.ctorParameters;\n/** @type {?} */\nRouterOutlet.propDecorators;\n/** @type {?} */\nRouterOutlet.prototype.activated;\n/** @type {?} */\nRouterOutlet.prototype._activatedRoute;\n/** @type {?} */\nRouterOutlet.prototype.name;\n/** @type {?} */\nRouterOutlet.prototype.activateEvents;\n/** @type {?} */\nRouterOutlet.prototype.deactivateEvents;\n/** @type {?} */\nRouterOutlet.prototype.parentContexts;\n/** @type {?} */\nRouterOutlet.prototype.location;\n/** @type {?} */\nRouterOutlet.prototype.resolver;\n/** @type {?} */\nRouterOutlet.prototype.changeDetector;\n}\n\nclass OutletInjector implements Injector {\n/**\n * @param {?} route\n * @param {?} childContexts\n * @param {?} parent\n */\nconstructor(\nprivate route: ActivatedRoute,\nprivate childContexts: ChildrenOutletContexts,\nprivate parent: Injector) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any): any {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n\n    return this.parent.get(token, notFoundValue);\n  }\n}\n\nfunction OutletInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nOutletInjector.prototype.route;\n/** @type {?} */\nOutletInjector.prototype.childContexts;\n/** @type {?} */\nOutletInjector.prototype.parent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/directives/router_outlet.ts","/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n\n\nimport {Compiler, Injectable, Injector, NgModuleFactoryLoader, NgModuleRef, OnDestroy} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {from} from 'rxjs/observable/from';\nimport {of } from 'rxjs/observable/of';\nimport {_catch} from 'rxjs/operator/catch';\nimport {concatMap} from 'rxjs/operator/concatMap';\nimport {filter} from 'rxjs/operator/filter';\nimport {mergeAll} from 'rxjs/operator/mergeAll';\nimport {mergeMap} from 'rxjs/operator/mergeMap';\nimport {LoadedRouterConfig, Route, Routes} from './config';\nimport {Event, NavigationEnd, RouteConfigLoadEnd, RouteConfigLoadStart} from './events';\nimport {Router} from './router';\nimport {RouterConfigLoader} from './router_config_loader';\n/**\n * \\@whatItDoes Provides a preloading strategy.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class PreloadingStrategy {\n/**\n * @abstract\n * @param {?} route\n * @param {?} fn\n * @return {?}\n */\npreload(route: Route, fn: () => Observable<any>) {}\n}\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n * \n * \\@howToUse \n * \n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n * \n * \\@experimental\n */\nexport class PreloadAllModules implements PreloadingStrategy {\n/**\n * @param {?} route\n * @param {?} fn\n * @return {?}\n */\npreload(route: Route, fn: () => Observable<any>): Observable<any> {\n    return _catch.call(fn(), () => of (null));\n  }\n}\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n * \n * \\@description \n * \n * This strategy is enabled by default.\n * \n * \\@experimental\n */\nexport class NoPreloading implements PreloadingStrategy {\n/**\n * @param {?} route\n * @param {?} fn\n * @return {?}\n */\npreload(route: Route, fn: () => Observable<any>): Observable<any> { return of (null); }\n}\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n * \n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n * \n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n * \n * \\@stable\n */\nexport class RouterPreloader implements OnDestroy {\nprivate loader: RouterConfigLoader;\nprivate subscription: Subscription;\n/**\n * @param {?} router\n * @param {?} moduleLoader\n * @param {?} compiler\n * @param {?} injector\n * @param {?} preloadingStrategy\n */\nconstructor(\nprivate router: Router, moduleLoader: NgModuleFactoryLoader, compiler: Compiler,\nprivate injector: Injector,\nprivate preloadingStrategy: PreloadingStrategy) {\n    const onStartLoad = (r: Route) => router.triggerEvent(new RouteConfigLoadStart(r));\n    const onEndLoad = (r: Route) => router.triggerEvent(new RouteConfigLoadEnd(r));\n\n    this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n  }\n/**\n * @return {?}\n */\nsetUpPreloading(): void {\n    const /** @type {?} */ navigations$ = filter.call(this.router.events, (e: Event) => e instanceof NavigationEnd);\n    this.subscription = concatMap.call(navigations$, () => this.preload()).subscribe(() => {});\n  }\n/**\n * @return {?}\n */\npreload(): Observable<any> {\n    const /** @type {?} */ ngModule = this.injector.get(NgModuleRef);\n    return this.processRoutes(ngModule, this.router.config);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.subscription.unsubscribe(); }\n/**\n * @param {?} ngModule\n * @param {?} routes\n * @return {?}\n */\nprivate processRoutes(ngModule: NgModuleRef<any>, routes: Routes): Observable<void> {\n    const /** @type {?} */ res: Observable<any>[] = [];\n    for (const /** @type {?} */ route of routes) {\n      // we already have the config loaded, just recurse\n      if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n        const /** @type {?} */ childConfig = route._loadedConfig;\n        res.push(this.processRoutes(childConfig.module, childConfig.routes));\n\n        // no config loaded, fetch the config\n      } else if (route.loadChildren && !route.canLoad) {\n        res.push(this.preloadConfig(ngModule, route));\n\n        // recurse into children\n      } else if (route.children) {\n        res.push(this.processRoutes(ngModule, route.children));\n      }\n    }\n    return mergeAll.call(from(res));\n  }\n/**\n * @param {?} ngModule\n * @param {?} route\n * @return {?}\n */\nprivate preloadConfig(ngModule: NgModuleRef<any>, route: Route): Observable<void> {\n    return this.preloadingStrategy.preload(route, () => {\n      const /** @type {?} */ loaded$ = this.loader.load(ngModule.injector, route);\n      return mergeMap.call(loaded$, (config: LoadedRouterConfig) => {\n        route._loadedConfig = config;\n        return this.processRoutes(config.module, config.routes);\n      });\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: NgModuleFactoryLoader, },\n{type: Compiler, },\n{type: Injector, },\n{type: PreloadingStrategy, },\n];\n}\n\nfunction RouterPreloader_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterPreloader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterPreloader.ctorParameters;\n/** @type {?} */\nRouterPreloader.prototype.loader;\n/** @type {?} */\nRouterPreloader.prototype.subscription;\n/** @type {?} */\nRouterPreloader.prototype.router;\n/** @type {?} */\nRouterPreloader.prototype.injector;\n/** @type {?} */\nRouterPreloader.prototype.preloadingStrategy;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router_preloader.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, LocationStrategy, PathLocationStrategy, PlatformLocation} from '@angular/common';\nimport {ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Compiler, ComponentRef, Inject, Injectable, InjectionToken, Injector, ModuleWithProviders, NgModule, NgModuleFactoryLoader, NgProbeToken, Optional, Provider, SkipSelf, SystemJsNgModuleLoader} from '@angular/core';\nimport {ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport {of } from 'rxjs/observable/of';\n\nimport {Route, Routes} from './config';\nimport {RouterLink, RouterLinkWithHref} from './directives/router_link';\nimport {RouterLinkActive} from './directives/router_link_active';\nimport {RouterOutlet} from './directives/router_outlet';\nimport {RouteReuseStrategy} from './route_reuse_strategy';\nimport {ErrorHandler, Router} from './router';\nimport {ROUTES} from './router_config_loader';\nimport {ChildrenOutletContexts} from './router_outlet_context';\nimport {NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader} from './router_preloader';\nimport {ActivatedRoute} from './router_state';\nimport {UrlHandlingStrategy} from './url_handling_strategy';\nimport {DefaultUrlSerializer, UrlSerializer} from './url_tree';\nimport {flatten} from './utils/collection';\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nexport const ROUTER_CONFIGURATION = new InjectionToken<ExtraOptions>('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nexport const ROUTER_FORROOT_GUARD = new InjectionToken<void>('ROUTER_FORROOT_GUARD');\n\nexport const /** @type {?} */ ROUTER_PROVIDERS: Provider[] = [\n  Location,\n  {provide: UrlSerializer, useClass: DefaultUrlSerializer},\n  {\n    provide: Router,\n    useFactory: setupRouter,\n    deps: [\n      ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n      NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n      [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n    ]\n  },\n  ChildrenOutletContexts,\n  {provide: ActivatedRoute, useFactory: rootRoute, deps: [Router]},\n  {provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader},\n  RouterPreloader,\n  NoPreloading,\n  PreloadAllModules,\n  {provide: ROUTER_CONFIGURATION, useValue: {enableTracing: false}},\n];\n/**\n * @return {?}\n */\nexport function routerNgProbeToken() {\n  return new NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n * \n * \\@howToUse \n * \n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n * \n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n * \n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n * \n * When registered at the root, the module should be used as follows\n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * For submodules and lazy loaded submodules the module should be used as follows:\n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * \\@description \n * \n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n * \n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n * \n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n * \n * \\@stable\n */\nexport class RouterModule {\n/**\n * @param {?} guard\n * @param {?} router\n */\nconstructor(  guard: any,  router: Router) {}\n/**\n * Creates a module with all the router providers and directives. It also optionally sets up an\n * application listener to perform an initial navigation.\n * \n * Options:\n * * `enableTracing` makes the router log all its internal events to the console.\n * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n * API.\n * * `initialNavigation` disables the initial navigation.\n * * `errorHandler` provides a custom error handler.\n * @param {?} routes\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(routes: Routes, config?: ExtraOptions): ModuleWithProviders {\n    return {\n      ngModule: RouterModule,\n      providers: [\n        ROUTER_PROVIDERS,\n        provideRoutes(routes),\n        {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        },\n        {provide: ROUTER_CONFIGURATION, useValue: config ? config : {}},\n        {\n          provide: LocationStrategy,\n          useFactory: provideLocationStrategy,\n          deps: [\n            PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n          ]\n        },\n        {\n          provide: PreloadingStrategy,\n          useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                                                             NoPreloading\n        },\n        {provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken},\n        provideRouterInitializer(),\n      ],\n    };\n  }\n/**\n * Creates a module with all the router directives and a provider registering routes.\n * @param {?} routes\n * @return {?}\n */\nstatic forChild(routes: Routes): ModuleWithProviders {\n    return {ngModule: RouterModule, providers: [provideRoutes(routes)]};\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD, ] }, ]},\n{type: Router, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction RouterModule_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterModule.ctorParameters;\n}\n\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nexport function provideLocationStrategy(\n    platformLocationStrategy: PlatformLocation, baseHref: string, options: ExtraOptions = {}) {\n  return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n                           new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function provideForRootGuard(router: Router): any {\n  if (router) {\n    throw new Error(\n        `RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n * \n * \\@howToUse \n * \n * ```\n * \\@NgModule({ \n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n * \n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nexport function provideRoutes(routes: Routes): any {\n  return [\n    {provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes},\n    {provide: ROUTES, multi: true, useValue: routes},\n  ];\n}\n\n/**\n * @whatItDoes Represents an option to configure when the initial navigation is performed.\n *\n * @description\n * * 'enabled' - the initial navigation starts before the root component is created.\n * The bootstrap is blocked until the initial navigation is complete.\n * * 'disabled' - the initial navigation is not performed. The location listener is set up before\n * the root component gets created.\n * * 'legacy_enabled'- the initial navigation starts after the root component has been created.\n * The bootstrap is not blocked until the initial navigation is complete. @deprecated\n * * 'legacy_disabled'- the initial navigation is not performed. The location listener is set up\n * after @deprecated\n * the root component gets created.\n * * `true` - same as 'legacy_enabled'. @deprecated since v4\n * * `false` - same as 'legacy_disabled'. @deprecated since v4\n *\n * The 'enabled' option should be used for applications unless there is a reason to have\n * more control over when the router starts its initial navigation due to some complex\n * initialization logic. In this case, 'disabled' should be used.\n *\n * The 'legacy_enabled' and 'legacy_disabled' should not be used for new applications.\n *\n * @experimental\n */\nexport type InitialNavigation =\n    true | false | 'enabled' | 'disabled' | 'legacy_enabled' | 'legacy_disabled';\n\n/**\n * @whatItDoes Represents options to configure the router.\n *\n * @stable\n */\nexport interface ExtraOptions {\n  /**\n   * Makes the router log all its internal events to the console.\n   */\n  enableTracing?: boolean;\n\n  /**\n   * Enables the location strategy that uses the URL fragment instead of the history API.\n   */\n  useHash?: boolean;\n\n  /**\n   * Disables the initial navigation.\n   */\n  initialNavigation?: InitialNavigation;\n\n  /**\n   * A custom error handler.\n   */\n  errorHandler?: ErrorHandler;\n\n  /**\n   * Configures a preloading strategy. See {@link PreloadAllModules}.\n   */\n  preloadingStrategy?: any;\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nexport function setupRouter(\n    ref: ApplicationRef, urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts,\n    location: Location, injector: Injector, loader: NgModuleFactoryLoader, compiler: Compiler,\n    config: Route[][], opts: ExtraOptions = {}, urlHandlingStrategy?: UrlHandlingStrategy,\n    routeReuseStrategy?: RouteReuseStrategy) {\n  const /** @type {?} */ router = new Router(\n      null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  if (opts.errorHandler) {\n    router.errorHandler = opts.errorHandler;\n  }\n\n  if (opts.enableTracing) {\n    const /** @type {?} */ dom = getDOM();\n    router.events.subscribe(e => {\n      dom.logGroup(`Router Event: ${( /** @type {?} */((<any>e.constructor))).name}`);\n      dom.log(e.toString());\n      dom.log(e);\n      dom.logGroupEnd();\n    });\n  }\n\n  return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nexport function rootRoute(router: Router): ActivatedRoute {\n  return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n * \n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n * \n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nexport class RouterInitializer {\nprivate initNavigation: boolean = false;\nprivate resultOfPreactivationDone = new Subject<void>();\n/**\n * @param {?} injector\n */\nconstructor(private injector: Injector) {}\n/**\n * @return {?}\n */\nappInitializer(): Promise<any> {\n    const /** @type {?} */ p: Promise<any> = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n    return p.then(() => {\n      let /** @type {?} */ resolve: Function = /** @type {?} */(( null));\n      const /** @type {?} */ res = new Promise(r => resolve = r);\n      const /** @type {?} */ router = this.injector.get(Router);\n      const /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n\n      if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n        resolve(true);\n\n      } else if (opts.initialNavigation === 'disabled') {\n        router.setUpLocationChangeListener();\n        resolve(true);\n\n      } else if (opts.initialNavigation === 'enabled') {\n        router.hooks.afterPreactivation = () => {\n          // only the initial navigation should be delayed\n          if (!this.initNavigation) {\n            this.initNavigation = true;\n            resolve(true);\n            return this.resultOfPreactivationDone;\n\n            // subsequent navigations should not be delayed\n          } else {\n            return /** @type {?} */(( of (null) as any));\n          }\n        };\n        router.initialNavigation();\n\n      } else {\n        throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n      }\n\n      return res;\n    });\n  }\n/**\n * @param {?} bootstrappedComponentRef\n * @return {?}\n */\nbootstrapListener(bootstrappedComponentRef: ComponentRef<any>): void {\n    const /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n    const /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n    const /** @type {?} */ router = this.injector.get(Router);\n    const /** @type {?} */ ref = this.injector.get(ApplicationRef);\n\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n\n    if (this.isLegacyEnabled(opts)) {\n      router.initialNavigation();\n    } else if (this.isLegacyDisabled(opts)) {\n      router.setUpLocationChangeListener();\n    }\n\n    preloader.setUpPreloading();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    this.resultOfPreactivationDone.next( /** @type {?} */((null)));\n    this.resultOfPreactivationDone.complete();\n  }\n/**\n * @param {?} opts\n * @return {?}\n */\nprivate isLegacyEnabled(opts: ExtraOptions): boolean {\n    return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n        opts.initialNavigation === undefined;\n  }\n/**\n * @param {?} opts\n * @return {?}\n */\nprivate isLegacyDisabled(opts: ExtraOptions): boolean {\n    return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction RouterInitializer_tsickle_Closure_declarations() {\n/** @type {?} */\nRouterInitializer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRouterInitializer.ctorParameters;\n/** @type {?} */\nRouterInitializer.prototype.initNavigation;\n/** @type {?} */\nRouterInitializer.prototype.resultOfPreactivationDone;\n/** @type {?} */\nRouterInitializer.prototype.injector;\n}\n\n/**\n * @param {?} r\n * @return {?}\n */\nexport function getAppInitializer(r: RouterInitializer) {\n  return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nexport function getBootstrapListener(r: RouterInitializer) {\n  return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n * \n * \\@experimental\n */\nexport const ROUTER_INITIALIZER =\n    new InjectionToken<(compRef: ComponentRef<any>) => void>('Router Initializer');\n/**\n * @return {?}\n */\nexport function provideRouterInitializer() {\n  return [\n    RouterInitializer,\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: getAppInitializer,\n      deps: [RouterInitializer]\n    },\n    {provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer]},\n    {provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER},\n  ];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/router_module.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nexport {ROUTER_PROVIDERS as ɵROUTER_PROVIDERS} from './router_module';\nexport {flatten as ɵflatten} from './utils/collection';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/src/private_export.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\nexport {Data,LoadChildren,LoadChildrenCallback,ResolveData,Route,Routes,RunGuardsAndResolvers,UrlMatchResult,UrlMatcher,RouterLink,RouterLinkWithHref,RouterLinkActive,RouterOutlet,Event,GuardsCheckEnd,GuardsCheckStart,NavigationCancel,NavigationEnd,NavigationError,NavigationStart,ResolveEnd,ResolveStart,RouteConfigLoadEnd,RouteConfigLoadStart,RoutesRecognized,CanActivate,CanActivateChild,CanDeactivate,CanLoad,Resolve,DetachedRouteHandle,RouteReuseStrategy,NavigationExtras,Router,ROUTES,ExtraOptions,ROUTER_CONFIGURATION,ROUTER_INITIALIZER,RouterModule,provideRoutes,ChildrenOutletContexts,OutletContext,NoPreloading,PreloadAllModules,PreloadingStrategy,RouterPreloader,ActivatedRoute,ActivatedRouteSnapshot,RouterState,RouterStateSnapshot,PRIMARY_OUTLET,ParamMap,Params,convertToParamMap,UrlHandlingStrategy,DefaultUrlSerializer,UrlSegment,UrlSegmentGroup,UrlSerializer,UrlTree,VERSION,ɵROUTER_PROVIDERS,ɵflatten} from './src/index';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/router/public_api.ts","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/Observer.ts","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class PromiseObservable<T> extends Observable<T> {\n\n  public value: T;\n\n  /**\n   * Converts a Promise to an Observable.\n   *\n   * <span class=\"informal\">Returns an Observable that just emits the Promise's\n   * resolved value, then completes.</span>\n   *\n   * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an\n   * Observable. If the Promise resolves with a value, the output Observable\n   * emits that resolved value as a `next`, and then completes. If the Promise\n   * is rejected, then the output Observable emits the corresponding Error.\n   *\n   * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>\n   * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));\n   * result.subscribe(x => console.log(x), e => console.error(e));\n   *\n   * @see {@link bindCallback}\n   * @see {@link from}\n   *\n   * @param {PromiseLike<T>} promise The promise to be converted.\n   * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling\n   * the delivery of the resolved value (or the rejection).\n   * @return {Observable<T>} An Observable which wraps the Promise.\n   * @static true\n   * @name fromPromise\n   * @owner Observable\n   */\n  static create<T>(promise: PromiseLike<T>, scheduler?: IScheduler): Observable<T> {\n    return new PromiseObservable(promise, scheduler);\n  }\n\n  constructor(private promise: PromiseLike<T>, private scheduler?: IScheduler) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const promise = this.promise;\n    const scheduler = this.scheduler;\n\n    if (scheduler == null) {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          subscriber.next(this.value);\n          subscriber.complete();\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.next(value);\n              subscriber.complete();\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.error(err);\n            }\n          }\n        )\n        .then(null, err => {\n          // escape the promise trap, throw unhandled errors\n          root.setTimeout(() => { throw err; });\n        });\n      }\n    } else {\n      if (this._isScalar) {\n        if (!subscriber.closed) {\n          return scheduler.schedule(dispatchNext, 0, { value: this.value, subscriber });\n        }\n      } else {\n        promise.then(\n          (value) => {\n            this.value = value;\n            this._isScalar = true;\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchNext, 0, { value, subscriber }));\n            }\n          },\n          (err) => {\n            if (!subscriber.closed) {\n              subscriber.add(scheduler.schedule(dispatchError, 0, { err, subscriber }));\n            }\n          })\n          .then(null, (err) => {\n            // escape the promise trap, throw unhandled errors\n            root.setTimeout(() => { throw err; });\n          });\n      }\n    }\n  }\n}\n\ninterface DispatchNextArg<T> {\n  subscriber: Subscriber<T>;\n  value: T;\n}\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.next(value);\n    subscriber.complete();\n  }\n}\n\ninterface DispatchErrorArg<T> {\n  subscriber: Subscriber<T>;\n  err: any;\n}\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subscriber } = arg;\n  if (!subscriber.closed) {\n    subscriber.error(err);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/PromiseObservable.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/ScalarObservable.ts","import {  PromiseObservable  } from './PromiseObservable';\n\nexport const fromPromise = PromiseObservable.create;\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/fromPromise.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/refCount.ts","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/ObjectUnsubscribedError.ts","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };\n\n\n// WEBPACK FOOTER //\n// ../../src/util/errorObject.ts","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isArrayLike.ts","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isFunction.ts","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isObject.ts","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isPromise.ts","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/isScheduler.ts","import { noop } from './noop';\nimport { UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(op1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(op1: UnaryFunction<T, A>, op2: UnaryFunction<A, B>, op3: UnaryFunction<B, C>, op4: UnaryFunction<C, D>, op5: UnaryFunction<D, E>, op6: UnaryFunction<E, F>, op7: UnaryFunction<F, G>, op8: UnaryFunction<G, H>, op9: UnaryFunction<H, I>): UnaryFunction<T, I>;\n/* tslint:enable:max-line-length */\n\nexport function pipe<T, R>(...fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  return pipeFromArray(fns);\n}\n\n/* @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (!fns) {\n    return noop as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/pipe.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nimport { Version } from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n//# sourceMappingURL=version.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/version.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A segment of text within the template.\n */\nexport class TextAst {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nfunction TextAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TextAst.prototype.value;\n    /** @type {?} */\n    TextAst.prototype.ngContentIndex;\n    /** @type {?} */\n    TextAst.prototype.sourceSpan;\n}\n/**\n * A bound expression within the text of a template.\n */\nexport class BoundTextAst {\n    /**\n     * @param {?} value\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitBoundText(this, context);\n    }\n}\nfunction BoundTextAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BoundTextAst.prototype.value;\n    /** @type {?} */\n    BoundTextAst.prototype.ngContentIndex;\n    /** @type {?} */\n    BoundTextAst.prototype.sourceSpan;\n}\n/**\n * A plain attribute on an element.\n */\nexport class AttrAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitAttr(this, context); }\n}\nfunction AttrAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AttrAst.prototype.name;\n    /** @type {?} */\n    AttrAst.prototype.value;\n    /** @type {?} */\n    AttrAst.prototype.sourceSpan;\n}\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nexport class BoundElementPropertyAst {\n    /**\n     * @param {?} name\n     * @param {?} type\n     * @param {?} securityContext\n     * @param {?} value\n     * @param {?} unit\n     * @param {?} sourceSpan\n     */\n    constructor(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    }\n    /**\n     * @return {?}\n     */\n    get isAnimation() { return this.type === PropertyBindingType.Animation; }\n}\nfunction BoundElementPropertyAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.name;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.type;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.securityContext;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.value;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.unit;\n    /** @type {?} */\n    BoundElementPropertyAst.prototype.sourceSpan;\n}\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nexport class BoundEventAst {\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @param {?} handler\n     * @param {?} sourceSpan\n     */\n    constructor(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    static calcFullName(name, target, phase) {\n        if (target) {\n            return `${target}:${name}`;\n        }\n        else if (phase) {\n            return `@${name}.${phase}`;\n        }\n        else {\n            return name;\n        }\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitEvent(this, context);\n    }\n    /**\n     * @return {?}\n     */\n    get fullName() { return BoundEventAst.calcFullName(this.name, this.target, this.phase); }\n    /**\n     * @return {?}\n     */\n    get isAnimation() { return !!this.phase; }\n}\nfunction BoundEventAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BoundEventAst.prototype.name;\n    /** @type {?} */\n    BoundEventAst.prototype.target;\n    /** @type {?} */\n    BoundEventAst.prototype.phase;\n    /** @type {?} */\n    BoundEventAst.prototype.handler;\n    /** @type {?} */\n    BoundEventAst.prototype.sourceSpan;\n}\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nexport class ReferenceAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitReference(this, context);\n    }\n}\nfunction ReferenceAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReferenceAst.prototype.name;\n    /** @type {?} */\n    ReferenceAst.prototype.value;\n    /** @type {?} */\n    ReferenceAst.prototype.sourceSpan;\n}\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nexport class VariableAst {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitVariable(this, context);\n    }\n}\nfunction VariableAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    VariableAst.prototype.name;\n    /** @type {?} */\n    VariableAst.prototype.value;\n    /** @type {?} */\n    VariableAst.prototype.sourceSpan;\n}\n/**\n * An element declaration in a template.\n */\nexport class ElementAst {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     * @param {?} endSourceSpan\n     */\n    constructor(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitElement(this, context);\n    }\n}\nfunction ElementAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementAst.prototype.name;\n    /** @type {?} */\n    ElementAst.prototype.attrs;\n    /** @type {?} */\n    ElementAst.prototype.inputs;\n    /** @type {?} */\n    ElementAst.prototype.outputs;\n    /** @type {?} */\n    ElementAst.prototype.references;\n    /** @type {?} */\n    ElementAst.prototype.directives;\n    /** @type {?} */\n    ElementAst.prototype.providers;\n    /** @type {?} */\n    ElementAst.prototype.hasViewContainer;\n    /** @type {?} */\n    ElementAst.prototype.queryMatches;\n    /** @type {?} */\n    ElementAst.prototype.children;\n    /** @type {?} */\n    ElementAst.prototype.ngContentIndex;\n    /** @type {?} */\n    ElementAst.prototype.sourceSpan;\n    /** @type {?} */\n    ElementAst.prototype.endSourceSpan;\n}\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nexport class EmbeddedTemplateAst {\n    /**\n     * @param {?} attrs\n     * @param {?} outputs\n     * @param {?} references\n     * @param {?} variables\n     * @param {?} directives\n     * @param {?} providers\n     * @param {?} hasViewContainer\n     * @param {?} queryMatches\n     * @param {?} children\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    }\n}\nfunction EmbeddedTemplateAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.attrs;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.outputs;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.references;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.variables;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.directives;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.providers;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.hasViewContainer;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.queryMatches;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.children;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.ngContentIndex;\n    /** @type {?} */\n    EmbeddedTemplateAst.prototype.sourceSpan;\n}\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nexport class BoundDirectivePropertyAst {\n    /**\n     * @param {?} directiveName\n     * @param {?} templateName\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    }\n}\nfunction BoundDirectivePropertyAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.directiveName;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.templateName;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.value;\n    /** @type {?} */\n    BoundDirectivePropertyAst.prototype.sourceSpan;\n}\n/**\n * A directive declared on an element.\n */\nexport class DirectiveAst {\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} hostProperties\n     * @param {?} hostEvents\n     * @param {?} contentQueryStartId\n     * @param {?} sourceSpan\n     */\n    constructor(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitDirective(this, context);\n    }\n}\nfunction DirectiveAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DirectiveAst.prototype.directive;\n    /** @type {?} */\n    DirectiveAst.prototype.inputs;\n    /** @type {?} */\n    DirectiveAst.prototype.hostProperties;\n    /** @type {?} */\n    DirectiveAst.prototype.hostEvents;\n    /** @type {?} */\n    DirectiveAst.prototype.contentQueryStartId;\n    /** @type {?} */\n    DirectiveAst.prototype.sourceSpan;\n}\n/**\n * A provider declared on an element\n */\nexport class ProviderAst {\n    /**\n     * @param {?} token\n     * @param {?} multiProvider\n     * @param {?} eager\n     * @param {?} providers\n     * @param {?} providerType\n     * @param {?} lifecycleHooks\n     * @param {?} sourceSpan\n     */\n    constructor(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    }\n}\nfunction ProviderAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderAst.prototype.token;\n    /** @type {?} */\n    ProviderAst.prototype.multiProvider;\n    /** @type {?} */\n    ProviderAst.prototype.eager;\n    /** @type {?} */\n    ProviderAst.prototype.providers;\n    /** @type {?} */\n    ProviderAst.prototype.providerType;\n    /** @type {?} */\n    ProviderAst.prototype.lifecycleHooks;\n    /** @type {?} */\n    ProviderAst.prototype.sourceSpan;\n}\nexport let ProviderAstType = {};\nProviderAstType.PublicService = 0;\nProviderAstType.PrivateService = 1;\nProviderAstType.Component = 2;\nProviderAstType.Directive = 3;\nProviderAstType.Builtin = 4;\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nexport class NgContentAst {\n    /**\n     * @param {?} index\n     * @param {?} ngContentIndex\n     * @param {?} sourceSpan\n     */\n    constructor(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) {\n        return visitor.visitNgContent(this, context);\n    }\n}\nfunction NgContentAst_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgContentAst.prototype.index;\n    /** @type {?} */\n    NgContentAst.prototype.ngContentIndex;\n    /** @type {?} */\n    NgContentAst.prototype.sourceSpan;\n}\nexport let PropertyBindingType = {};\nPropertyBindingType.Property = 0;\nPropertyBindingType.Attribute = 1;\nPropertyBindingType.Class = 2;\nPropertyBindingType.Style = 3;\nPropertyBindingType.Animation = 4;\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nexport class NullTemplateVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNgContent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReference(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitVariable(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEvent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElementProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttr(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBoundText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirectiveProperty(ast, context) { }\n}\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nexport class RecursiveTemplateAstVisitor extends NullTemplateVisitor {\n    constructor() { super(); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) {\n        return this.visitChildren(context, visit => {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    }\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    visitChildren(context, cb) {\n        let /** @type {?} */ results = [];\n        let /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    }\n}\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nexport function templateVisitAll(visitor, asts, context = null) {\n    const /** @type {?} */ result = [];\n    const /** @type {?} */ visit = visitor.visit ?\n        (ast) => ((visitor.visit))(ast, context) || ast.visit(visitor, context) :\n        (ast) => ast.visit(visitor, context);\n    asts.forEach(ast => {\n        const /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n//# sourceMappingURL=template_ast.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/template_parser/template_ast.js","/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n    /**\n     * @param {?} filePath\n     * @param {?} name\n     * @param {?} members\n     */\n    constructor(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    assertNoMembers() {\n        if (this.members.length) {\n            throw new Error(`Illegal state: symbol without members expected, but got ${JSON.stringify(this)}.`);\n        }\n    }\n}\nfunction StaticSymbol_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StaticSymbol.prototype.filePath;\n    /** @type {?} */\n    StaticSymbol.prototype.name;\n    /** @type {?} */\n    StaticSymbol.prototype.members;\n}\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nexport class StaticSymbolCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    get(declarationFile, name, members) {\n        members = members || [];\n        const /** @type {?} */ memberSuffix = members.length ? `.${members.join('.')}` : '';\n        const /** @type {?} */ key = `\"${declarationFile}\".${name}${memberSuffix}`;\n        let /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    }\n}\nfunction StaticSymbolCache_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StaticSymbolCache.prototype.cache;\n}\n//# sourceMappingURL=static_symbol.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/static_symbol.js","export let TagContentType = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nexport function getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nexport function mergeNsAndName(prefix, localName) {\n    return prefix ? `:${prefix}:${localName}` : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nexport const /** @type {?} */ NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nexport const /** @type {?} */ NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n//# sourceMappingURL=tags.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/tags.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nexport class HtmlTagDefinition {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ closedByChildren, requiredParents, implicitNamespacePrefix, contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false, ignoreFirstLf = false } = {}) {\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    requireExtraParent(currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        const /** @type {?} */ lcParent = currentParent.toLowerCase();\n        const /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    isClosedByChild(name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    }\n}\nfunction HtmlTagDefinition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    HtmlTagDefinition.prototype.closedByChildren;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.closedByParent;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.requiredParents;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.parentToAdd;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.implicitNamespacePrefix;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.contentType;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.isVoid;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.ignoreFirstLf;\n    /** @type {?} */\n    HtmlTagDefinition.prototype.canSelfClose;\n}\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nconst /** @type {?} */ TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nconst /** @type {?} */ _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n//# sourceMappingURL=html_tags.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/html_tags.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getHtmlTagDefinition } from './ml_parser/html_tags';\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    // \"[name=\"value\"]\",\n    // \"[name='value']\"\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n    constructor() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    static parse(selector) {\n        const /** @type {?} */ results = [];\n        const /** @type {?} */ _addResult = (res, cssSel) => {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        let /** @type {?} */ cssSelector = new CssSelector();\n        let /** @type {?} */ match;\n        let /** @type {?} */ current = cssSelector;\n        let /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    }\n    /**\n     * @return {?}\n     */\n    isElementSelector() {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    }\n    /**\n     * @return {?}\n     */\n    hasElementSelector() { return !!this.element; }\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    setElement(element = null) { this.element = element; }\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    getMatchingElementTemplate() {\n        const /** @type {?} */ tagName = this.element || 'div';\n        const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n        let /** @type {?} */ attrs = '';\n        for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            const /** @type {?} */ attrName = this.attrs[i];\n            const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n            attrs += ` ${attrName}${attrValue}`;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n            `<${tagName}${classAttr}${attrs}></${tagName}>`;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    addAttribute(name, value = '') {\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    addClassName(name) { this.classNames.push(name.toLowerCase()); }\n    /**\n     * @return {?}\n     */\n    toString() {\n        let /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(klass => res += `.${klass}`);\n        }\n        if (this.attrs) {\n            for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                const /** @type {?} */ name = this.attrs[i];\n                const /** @type {?} */ value = this.attrs[i + 1];\n                res += `[${name}${value ? '=' + value : ''}]`;\n            }\n        }\n        this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n        return res;\n    }\n}\nfunction CssSelector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CssSelector.prototype.element;\n    /** @type {?} */\n    CssSelector.prototype.classNames;\n    /** @type {?} */\n    CssSelector.prototype.attrs;\n    /** @type {?} */\n    CssSelector.prototype.notSelectors;\n}\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n    constructor() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    static createNotMatcher(notSelectors) {\n        const /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    }\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    addSelectables(cssSelectors, callbackCtxt) {\n        let /** @type {?} */ listContext = ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    }\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    _addSelectable(cssSelector, callbackCtxt, listContext) {\n        let /** @type {?} */ matcher = this;\n        const /** @type {?} */ element = cssSelector.element;\n        const /** @type {?} */ classNames = cssSelector.classNames;\n        const /** @type {?} */ attrs = cssSelector.attrs;\n        const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n                const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                const /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                const /** @type {?} */ isTerminal = i === attrs.length - 2;\n                const /** @type {?} */ name = attrs[i];\n                const /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    const /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    let /** @type {?} */ partialValuesMap = partialMap.get(name);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    _addTerminal(map, name, selectable) {\n        let /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    }\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    _addPartial(map, name) {\n        let /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    }\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    match(cssSelector, matchedCallback) {\n        let /** @type {?} */ result = false;\n        const /** @type {?} */ element = ((cssSelector.element));\n        const /** @type {?} */ classNames = cssSelector.classNames;\n        const /** @type {?} */ attrs = cssSelector.attrs;\n        for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n                const /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                const /** @type {?} */ name = attrs[i];\n                const /** @type {?} */ value = attrs[i + 1];\n                const /** @type {?} */ terminalValuesMap = ((this._attrValueMap.get(name)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                const /** @type {?} */ partialValuesMap = ((this._attrValuePartialMap.get(name)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    _matchTerminal(map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        let /** @type {?} */ selectables = map.get(name) || [];\n        const /** @type {?} */ starSelectables = ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        let /** @type {?} */ selectable;\n        let /** @type {?} */ result = false;\n        for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    _matchPartial(map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        const /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    }\n}\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SelectorMatcher.prototype._elementMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._elementPartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._classMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._classPartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._attrValueMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._attrValuePartialMap;\n    /** @type {?} */\n    SelectorMatcher.prototype._listContexts;\n}\nexport class SelectorListContext {\n    /**\n     * @param {?} selectors\n     */\n    constructor(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n}\nfunction SelectorListContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SelectorListContext.prototype.alreadyMatched;\n    /** @type {?} */\n    SelectorListContext.prototype.selectors;\n}\nexport class SelectorContext {\n    /**\n     * @param {?} selector\n     * @param {?} cbContext\n     * @param {?} listContext\n     */\n    constructor(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    finalize(cssSelector, callback) {\n        let /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    }\n}\nfunction SelectorContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SelectorContext.prototype.notSelectors;\n    /** @type {?} */\n    SelectorContext.prototype.selector;\n    /** @type {?} */\n    SelectorContext.prototype.cbContext;\n    /** @type {?} */\n    SelectorContext.prototype.listContext;\n}\n//# sourceMappingURL=selector.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/selector.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵisPromise as isPromise } from '@angular/core';\nexport const /** @type {?} */ MODULE_SUFFIX = '';\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst /** @type {?} */ DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nexport function camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nexport function splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    const /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nexport function visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nexport function isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nexport function noUndefined(val) {\n    return val === undefined ? ((null)) : val;\n}\nexport class ValueTransformer {\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    visitArray(arr, context) {\n        return arr.map(value => visitValue(value, this, context));\n    }\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitStringMap(map, context) {\n        const /** @type {?} */ result = {};\n        Object.keys(map).forEach(key => { result[key] = visitValue(map[key], this, context); });\n        return result;\n    }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrimitive(value, context) { return value; }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitOther(value, context) { return value; }\n}\nexport const /** @type {?} */ SyncAsync = {\n    assertSync: (value) => {\n        if (isPromise(value)) {\n            throw new Error(`Illegal state: value cannot be a promise`);\n        }\n        return value;\n    },\n    then: (value, cb) => { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: (syncAsyncValues) => {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nexport function syntaxError(msg, parseErrors) {\n    const /** @type {?} */ error = Error(msg);\n    ((error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        ((error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nconst /** @type {?} */ ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nconst /** @type {?} */ ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function isSyntaxError(error) {\n    return ((error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getParseErrors(error) {\n    return ((error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nexport function escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nconst /** @type {?} */ STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nexport function utf8Encode(str) {\n    let /** @type {?} */ encoded = '';\n    for (let /** @type {?} */ index = 0; index < str.length; index++) {\n        let /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            const /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n//# sourceMappingURL=util.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/util.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, ViewEncapsulation, ɵstringify as stringify } from '@angular/core';\nimport { StaticSymbol } from './aot/static_symbol';\nimport { CssSelector } from './selector';\nimport { splitAtColon } from './util';\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nconst /** @type {?} */ HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nlet /** @type {?} */ _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    const /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    let /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = `anonymous_${_anonymousTypeIndex++}`;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nexport function identifierModuleUrl(compileIdentifier) {\n    const /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return `./${stringify(ref)}`;\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nexport function viewClassName(compType, embeddedTemplateIndex) {\n    return `View_${identifierName({ reference: compType })}_${embeddedTemplateIndex}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function rendererTypeName(compType) {\n    return `RenderType_${identifierName({ reference: compType })}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function hostViewClassName(compType) {\n    return `HostView_${identifierName({ reference: compType })}`;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nexport function componentFactoryName(compType) {\n    return `${identifierName({ reference: compType })}NgFactory`;\n}\nexport let CompileSummaryKind = {};\nCompileSummaryKind.Pipe = 0;\nCompileSummaryKind.Directive = 1;\nCompileSummaryKind.NgModule = 2;\nCompileSummaryKind.Injectable = 3;\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * Metadata about a stylesheet\n */\nexport class CompileStylesheetMetadata {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ moduleUrl, styles, styleUrls } = {}) {\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n}\nfunction CompileStylesheetMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.moduleUrl;\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.styles;\n    /** @type {?} */\n    CompileStylesheetMetadata.prototype.styleUrls;\n}\n/**\n * Metadata regarding compilation of a template.\n */\nexport class CompileTemplateMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ encapsulation, template, templateUrl, styles, styleUrls, externalStylesheets, animations, ngContentSelectors, interpolation, isInline, preserveWhitespaces }) {\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(`'interpolation' should have a start and an end symbol.`);\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    }\n}\nfunction CompileTemplateMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.encapsulation;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.template;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.templateUrl;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.isInline;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.styles;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.styleUrls;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.externalStylesheets;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.animations;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.ngContentSelectors;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.interpolation;\n    /** @type {?} */\n    CompileTemplateMetadata.prototype.preserveWhitespaces;\n}\n/**\n * Metadata regarding compilation of a directive.\n */\nexport class CompileDirectiveMetadata {\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    static create({ isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs, host, providers, viewProviders, queries, viewQueries, entryComponents, template, componentViewType, rendererType, componentFactory }) {\n        const /** @type {?} */ hostListeners = {};\n        const /** @type {?} */ hostProperties = {};\n        const /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(key => {\n                const /** @type {?} */ value = host[key];\n                const /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        const /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach((bindConfig) => {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                const /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        const /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach((bindConfig) => {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                const /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost,\n            type,\n            isComponent: !!isComponent, selector, exportAs, changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners,\n            hostProperties,\n            hostAttributes,\n            providers,\n            viewProviders,\n            queries,\n            viewQueries,\n            entryComponents,\n            template,\n            componentViewType,\n            rendererType,\n            componentFactory,\n        });\n    }\n    /**\n     * @param {?} __0\n     */\n    constructor({ isHost, type, isComponent, selector, exportAs, changeDetection, inputs, outputs, hostListeners, hostProperties, hostAttributes, providers, viewProviders, queries, viewQueries, entryComponents, template, componentViewType, rendererType, componentFactory }) {\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    }\n}\nfunction CompileDirectiveMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.isHost;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.type;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.isComponent;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.selector;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.exportAs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.changeDetection;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.inputs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.outputs;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostListeners;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostProperties;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.hostAttributes;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.providers;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.viewProviders;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.queries;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.viewQueries;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.entryComponents;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.template;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.componentViewType;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.rendererType;\n    /** @type {?} */\n    CompileDirectiveMetadata.prototype.componentFactory;\n}\n/**\n * Construct {\\@link CompileDirectiveMetadata} from {\\@link ComponentTypeMetadata} and a selector.\n * @param {?} hostTypeReference\n * @param {?} compMeta\n * @param {?} hostViewType\n * @return {?}\n */\nexport function createHostComponentMeta(hostTypeReference, compMeta, hostViewType) {\n    const /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n    return CompileDirectiveMetadata.create({\n        isHost: true,\n        type: { reference: hostTypeReference, diDeps: [], lifecycleHooks: [] },\n        template: new CompileTemplateMetadata({\n            encapsulation: ViewEncapsulation.None,\n            template: template,\n            templateUrl: '',\n            styles: [],\n            styleUrls: [],\n            ngContentSelectors: [],\n            animations: [],\n            isInline: true,\n            externalStylesheets: [],\n            interpolation: null,\n            preserveWhitespaces: false,\n        }),\n        exportAs: null,\n        changeDetection: ChangeDetectionStrategy.Default,\n        inputs: [],\n        outputs: [],\n        host: {},\n        isComponent: true,\n        selector: '*',\n        providers: [],\n        viewProviders: [],\n        queries: [],\n        viewQueries: [],\n        componentViewType: hostViewType,\n        rendererType: { id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} },\n        entryComponents: [],\n        componentFactory: null\n    });\n}\nexport class CompilePipeMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ type, name, pure }) {\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    }\n}\nfunction CompilePipeMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompilePipeMetadata.prototype.type;\n    /** @type {?} */\n    CompilePipeMetadata.prototype.name;\n    /** @type {?} */\n    CompilePipeMetadata.prototype.pure;\n}\n/**\n * Metadata regarding compilation of a module.\n */\nexport class CompileNgModuleMetadata {\n    /**\n     * @param {?} __0\n     */\n    constructor({ type, providers, declaredDirectives, exportedDirectives, declaredPipes, exportedPipes, entryComponents, bootstrapComponents, importedModules, exportedModules, schemas, transitiveModule, id }) {\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    toSummary() {\n        const /** @type {?} */ module = ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    }\n}\nfunction CompileNgModuleMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.type;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.declaredDirectives;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedDirectives;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.declaredPipes;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedPipes;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.entryComponents;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.bootstrapComponents;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.providers;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.importedModules;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.exportedModules;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.schemas;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.id;\n    /** @type {?} */\n    CompileNgModuleMetadata.prototype.transitiveModule;\n}\nexport class TransitiveCompileNgModuleMetadata {\n    constructor() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    addProvider(provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addDirective(id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addExportedDirective(id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addPipe(id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addExportedPipe(id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    addModule(id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    }\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    addEntryComponent(ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    }\n}\nfunction TransitiveCompileNgModuleMetadata_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.directivesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.directives;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedDirectivesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedDirectives;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.pipesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.pipes;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedPipesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.exportedPipes;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.modulesSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.modules;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.entryComponentsSet;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.entryComponents;\n    /** @type {?} */\n    TransitiveCompileNgModuleMetadata.prototype.providers;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nexport class ProviderMeta {\n    /**\n     * @param {?} token\n     * @param {?} __1\n     */\n    constructor(token, { useClass, useValue, useExisting, useFactory, deps, multi }) {\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n}\nfunction ProviderMeta_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderMeta.prototype.token;\n    /** @type {?} */\n    ProviderMeta.prototype.useClass;\n    /** @type {?} */\n    ProviderMeta.prototype.useValue;\n    /** @type {?} */\n    ProviderMeta.prototype.useExisting;\n    /** @type {?} */\n    ProviderMeta.prototype.useFactory;\n    /** @type {?} */\n    ProviderMeta.prototype.dependencies;\n    /** @type {?} */\n    ProviderMeta.prototype.multi;\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nexport function flatten(list) {\n    return list.reduce((flat, item) => {\n        const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return ((flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nexport function sourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nexport function templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    let /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = `${compMeta.type.reference.filePath}.${compMeta.type.reference.name}.html`;\n        }\n        else {\n            url = `${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.html`;\n        }\n    }\n    else {\n        url = ((templateMeta.templateUrl));\n    }\n    // always prepend ng:// to make angular resources easy to find and not clobber\n    // user resources.\n    return sourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nexport function sharedStylesheetJitUrl(meta, id) {\n    const /** @type {?} */ pathParts = ((meta.moduleUrl)).split(/\\/\\\\/g);\n    const /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return sourceUrl(`css/${id}${baseName}.ngstyle.js`);\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nexport function ngModuleJitUrl(moduleMeta) {\n    return sourceUrl(`${identifierName(moduleMeta.type)}/module.ngfactory.js`);\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nexport function templateJitUrl(ngModuleType, compMeta) {\n    return sourceUrl(`${identifierName(ngModuleType)}/${identifierName(compMeta.type)}.ngfactory.js`);\n}\n//# sourceMappingURL=compile_metadata.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/compile_metadata.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nexport class CompileReflector {\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) { }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) { }\n    /**\n     * @abstract\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) { }\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) { }\n    /**\n     * @abstract\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    componentModuleUrl(type, cmpMetadata) { }\n    /**\n     * @abstract\n     * @param {?} ref\n     * @return {?}\n     */\n    resolveExternalReference(ref) { }\n}\n//# sourceMappingURL=compile_reflector.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/compile_reflector.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from '@angular/core';\nimport { noUndefined } from './util';\nexport class CompilerConfig {\n    /**\n     * @param {?=} __0\n     */\n    constructor({ defaultEncapsulation = ViewEncapsulation.Emulated, useJit = true, missingTranslation, enableLegacyTemplate, preserveWhitespaces } = {}) {\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.missingTranslation = missingTranslation || null;\n        this.enableLegacyTemplate = enableLegacyTemplate !== false;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n    }\n}\nfunction CompilerConfig_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompilerConfig.prototype.defaultEncapsulation;\n    /** @type {?} */\n    CompilerConfig.prototype.enableLegacyTemplate;\n    /** @type {?} */\n    CompilerConfig.prototype.useJit;\n    /** @type {?} */\n    CompilerConfig.prototype.missingTranslation;\n    /** @type {?} */\n    CompilerConfig.prototype.preserveWhitespaces;\n}\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nexport function preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting = true) {\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n//# sourceMappingURL=config.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/config.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class ParserError {\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     */\n    constructor(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = `Parser Error: ${message} ${errLocation} [${input}] in ${ctxLocation}`;\n    }\n}\nfunction ParserError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParserError.prototype.message;\n    /** @type {?} */\n    ParserError.prototype.input;\n    /** @type {?} */\n    ParserError.prototype.errLocation;\n    /** @type {?} */\n    ParserError.prototype.ctxLocation;\n}\nexport class ParseSpan {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n}\nfunction ParseSpan_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseSpan.prototype.start;\n    /** @type {?} */\n    ParseSpan.prototype.end;\n}\nexport class AST {\n    /**\n     * @param {?} span\n     */\n    constructor(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return null; }\n    /**\n     * @return {?}\n     */\n    toString() { return 'AST'; }\n}\nfunction AST_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AST.prototype.span;\n}\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nexport class Quote extends AST {\n    /**\n     * @param {?} span\n     * @param {?} prefix\n     * @param {?} uninterpretedExpression\n     * @param {?} location\n     */\n    constructor(span, prefix, uninterpretedExpression, location) {\n        super(span);\n        this.prefix = prefix;\n        this.uninterpretedExpression = uninterpretedExpression;\n        this.location = location;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitQuote(this, context); }\n    /**\n     * @return {?}\n     */\n    toString() { return 'Quote'; }\n}\nfunction Quote_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Quote.prototype.prefix;\n    /** @type {?} */\n    Quote.prototype.uninterpretedExpression;\n    /** @type {?} */\n    Quote.prototype.location;\n}\nexport class EmptyExpr extends AST {\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        // do nothing\n    }\n}\nexport class ImplicitReceiver extends AST {\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitImplicitReceiver(this, context);\n    }\n}\n/**\n * Multiple expressions separated by a semicolon.\n */\nexport class Chain extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    constructor(span, expressions) {\n        super(span);\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitChain(this, context); }\n}\nfunction Chain_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Chain.prototype.expressions;\n}\nexport class Conditional extends AST {\n    /**\n     * @param {?} span\n     * @param {?} condition\n     * @param {?} trueExp\n     * @param {?} falseExp\n     */\n    constructor(span, condition, trueExp, falseExp) {\n        super(span);\n        this.condition = condition;\n        this.trueExp = trueExp;\n        this.falseExp = falseExp;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitConditional(this, context);\n    }\n}\nfunction Conditional_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Conditional.prototype.condition;\n    /** @type {?} */\n    Conditional.prototype.trueExp;\n    /** @type {?} */\n    Conditional.prototype.falseExp;\n}\nexport class PropertyRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    constructor(span, receiver, name) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPropertyRead(this, context);\n    }\n}\nfunction PropertyRead_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PropertyRead.prototype.receiver;\n    /** @type {?} */\n    PropertyRead.prototype.name;\n}\nexport class PropertyWrite extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     */\n    constructor(span, receiver, name, value) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPropertyWrite(this, context);\n    }\n}\nfunction PropertyWrite_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PropertyWrite.prototype.receiver;\n    /** @type {?} */\n    PropertyWrite.prototype.name;\n    /** @type {?} */\n    PropertyWrite.prototype.value;\n}\nexport class SafePropertyRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     */\n    constructor(span, receiver, name) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitSafePropertyRead(this, context);\n    }\n}\nfunction SafePropertyRead_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SafePropertyRead.prototype.receiver;\n    /** @type {?} */\n    SafePropertyRead.prototype.name;\n}\nexport class KeyedRead extends AST {\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     */\n    constructor(span, obj, key) {\n        super(span);\n        this.obj = obj;\n        this.key = key;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitKeyedRead(this, context);\n    }\n}\nfunction KeyedRead_tsickle_Closure_declarations() {\n    /** @type {?} */\n    KeyedRead.prototype.obj;\n    /** @type {?} */\n    KeyedRead.prototype.key;\n}\nexport class KeyedWrite extends AST {\n    /**\n     * @param {?} span\n     * @param {?} obj\n     * @param {?} key\n     * @param {?} value\n     */\n    constructor(span, obj, key, value) {\n        super(span);\n        this.obj = obj;\n        this.key = key;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitKeyedWrite(this, context);\n    }\n}\nfunction KeyedWrite_tsickle_Closure_declarations() {\n    /** @type {?} */\n    KeyedWrite.prototype.obj;\n    /** @type {?} */\n    KeyedWrite.prototype.key;\n    /** @type {?} */\n    KeyedWrite.prototype.value;\n}\nexport class BindingPipe extends AST {\n    /**\n     * @param {?} span\n     * @param {?} exp\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, exp, name, args) {\n        super(span);\n        this.exp = exp;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return visitor.visitPipe(this, context); }\n}\nfunction BindingPipe_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BindingPipe.prototype.exp;\n    /** @type {?} */\n    BindingPipe.prototype.name;\n    /** @type {?} */\n    BindingPipe.prototype.args;\n}\nexport class LiteralPrimitive extends AST {\n    /**\n     * @param {?} span\n     * @param {?} value\n     */\n    constructor(span, value) {\n        super(span);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralPrimitive(this, context);\n    }\n}\nfunction LiteralPrimitive_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralPrimitive.prototype.value;\n}\nexport class LiteralArray extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expressions\n     */\n    constructor(span, expressions) {\n        super(span);\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralArray(this, context);\n    }\n}\nfunction LiteralArray_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralArray.prototype.expressions;\n}\nexport class LiteralMap extends AST {\n    /**\n     * @param {?} span\n     * @param {?} keys\n     * @param {?} values\n     */\n    constructor(span, keys, values) {\n        super(span);\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitLiteralMap(this, context);\n    }\n}\nfunction LiteralMap_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralMap.prototype.keys;\n    /** @type {?} */\n    LiteralMap.prototype.values;\n}\nexport class Interpolation extends AST {\n    /**\n     * @param {?} span\n     * @param {?} strings\n     * @param {?} expressions\n     */\n    constructor(span, strings, expressions) {\n        super(span);\n        this.strings = strings;\n        this.expressions = expressions;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitInterpolation(this, context);\n    }\n}\nfunction Interpolation_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Interpolation.prototype.strings;\n    /** @type {?} */\n    Interpolation.prototype.expressions;\n}\nexport class Binary extends AST {\n    /**\n     * @param {?} span\n     * @param {?} operation\n     * @param {?} left\n     * @param {?} right\n     */\n    constructor(span, operation, left, right) {\n        super(span);\n        this.operation = operation;\n        this.left = left;\n        this.right = right;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitBinary(this, context);\n    }\n}\nfunction Binary_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Binary.prototype.operation;\n    /** @type {?} */\n    Binary.prototype.left;\n    /** @type {?} */\n    Binary.prototype.right;\n}\nexport class PrefixNot extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    constructor(span, expression) {\n        super(span);\n        this.expression = expression;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitPrefixNot(this, context);\n    }\n}\nfunction PrefixNot_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PrefixNot.prototype.expression;\n}\nexport class NonNullAssert extends AST {\n    /**\n     * @param {?} span\n     * @param {?} expression\n     */\n    constructor(span, expression) {\n        super(span);\n        this.expression = expression;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitNonNullAssert(this, context);\n    }\n}\nfunction NonNullAssert_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NonNullAssert.prototype.expression;\n}\nexport class MethodCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, receiver, name, args) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitMethodCall(this, context);\n    }\n}\nfunction MethodCall_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MethodCall.prototype.receiver;\n    /** @type {?} */\n    MethodCall.prototype.name;\n    /** @type {?} */\n    MethodCall.prototype.args;\n}\nexport class SafeMethodCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} args\n     */\n    constructor(span, receiver, name, args) {\n        super(span);\n        this.receiver = receiver;\n        this.name = name;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitSafeMethodCall(this, context);\n    }\n}\nfunction SafeMethodCall_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SafeMethodCall.prototype.receiver;\n    /** @type {?} */\n    SafeMethodCall.prototype.name;\n    /** @type {?} */\n    SafeMethodCall.prototype.args;\n}\nexport class FunctionCall extends AST {\n    /**\n     * @param {?} span\n     * @param {?} target\n     * @param {?} args\n     */\n    constructor(span, target, args) {\n        super(span);\n        this.target = target;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) {\n        return visitor.visitFunctionCall(this, context);\n    }\n}\nfunction FunctionCall_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FunctionCall.prototype.target;\n    /** @type {?} */\n    FunctionCall.prototype.args;\n}\nexport class ASTWithSource extends AST {\n    /**\n     * @param {?} ast\n     * @param {?} source\n     * @param {?} location\n     * @param {?} errors\n     */\n    constructor(ast, source, location, errors) {\n        super(new ParseSpan(0, source == null ? 0 : source.length));\n        this.ast = ast;\n        this.source = source;\n        this.location = location;\n        this.errors = errors;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context = null) { return this.ast.visit(visitor, context); }\n    /**\n     * @return {?}\n     */\n    toString() { return `${this.source} in ${this.location}`; }\n}\nfunction ASTWithSource_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ASTWithSource.prototype.ast;\n    /** @type {?} */\n    ASTWithSource.prototype.source;\n    /** @type {?} */\n    ASTWithSource.prototype.location;\n    /** @type {?} */\n    ASTWithSource.prototype.errors;\n}\nexport class TemplateBinding {\n    /**\n     * @param {?} span\n     * @param {?} key\n     * @param {?} keyIsVar\n     * @param {?} name\n     * @param {?} expression\n     */\n    constructor(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n}\nfunction TemplateBinding_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateBinding.prototype.span;\n    /** @type {?} */\n    TemplateBinding.prototype.key;\n    /** @type {?} */\n    TemplateBinding.prototype.keyIsVar;\n    /** @type {?} */\n    TemplateBinding.prototype.name;\n    /** @type {?} */\n    TemplateBinding.prototype.expression;\n}\nexport class NullAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) { }\n}\nexport class RecursiveAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { return this.visitAll(ast.expressions, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) {\n        ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) {\n        return this.visitAll(ast.expressions, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        return this.visitAll(ast.expressions, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { return this.visitAll(ast.values, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) {\n        ast.expression.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) {\n        ast.expression.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    }\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAll(asts, context) {\n        asts.forEach(ast => ast.visit(this, context));\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { return null; }\n}\nexport class AstTransformer {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    visitAll(asts) {\n        const /** @type {?} */ res = new Array(asts.length);\n        for (let /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    }\n}\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nexport function visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitBinary(ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitChain(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitConditional(ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitFunctionCall(ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitImplicitReceiver(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitInterpolation(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedRead(ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitKeyedWrite(ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralArray(ast) { visitAll(ast.expressions); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralMap(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitLiteralPrimitive(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitMethodCall(ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPipe(ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPrefixNot(ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitNonNullAssert(ast) { visit(ast.expression); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyRead(ast) { visit(ast.receiver); },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitPropertyWrite(ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitQuote(ast) { },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafeMethodCall(ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        /**\n         * @param {?} ast\n         * @return {?}\n         */\n        visitSafePropertyRead(ast) { visit(ast.receiver); },\n    });\n}\n//# sourceMappingURL=ast.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/expression_parser/ast.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const $EOF = 0;\nexport const /** @type {?} */ $TAB = 9;\nexport const /** @type {?} */ $LF = 10;\nexport const /** @type {?} */ $VTAB = 11;\nexport const /** @type {?} */ $FF = 12;\nexport const /** @type {?} */ $CR = 13;\nexport const /** @type {?} */ $SPACE = 32;\nexport const /** @type {?} */ $BANG = 33;\nexport const /** @type {?} */ $DQ = 34;\nexport const /** @type {?} */ $HASH = 35;\nexport const /** @type {?} */ $$ = 36;\nexport const /** @type {?} */ $PERCENT = 37;\nexport const /** @type {?} */ $AMPERSAND = 38;\nexport const /** @type {?} */ $SQ = 39;\nexport const /** @type {?} */ $LPAREN = 40;\nexport const /** @type {?} */ $RPAREN = 41;\nexport const /** @type {?} */ $STAR = 42;\nexport const /** @type {?} */ $PLUS = 43;\nexport const /** @type {?} */ $COMMA = 44;\nexport const /** @type {?} */ $MINUS = 45;\nexport const /** @type {?} */ $PERIOD = 46;\nexport const /** @type {?} */ $SLASH = 47;\nexport const /** @type {?} */ $COLON = 58;\nexport const /** @type {?} */ $SEMICOLON = 59;\nexport const /** @type {?} */ $LT = 60;\nexport const /** @type {?} */ $EQ = 61;\nexport const /** @type {?} */ $GT = 62;\nexport const /** @type {?} */ $QUESTION = 63;\nexport const /** @type {?} */ $0 = 48;\nexport const /** @type {?} */ $9 = 57;\nexport const /** @type {?} */ $A = 65;\nexport const /** @type {?} */ $E = 69;\nexport const /** @type {?} */ $F = 70;\nexport const /** @type {?} */ $X = 88;\nexport const /** @type {?} */ $Z = 90;\nexport const /** @type {?} */ $LBRACKET = 91;\nexport const /** @type {?} */ $BACKSLASH = 92;\nexport const /** @type {?} */ $RBRACKET = 93;\nexport const /** @type {?} */ $CARET = 94;\nexport const /** @type {?} */ $_ = 95;\nexport const /** @type {?} */ $a = 97;\nexport const /** @type {?} */ $e = 101;\nexport const /** @type {?} */ $f = 102;\nexport const /** @type {?} */ $n = 110;\nexport const /** @type {?} */ $r = 114;\nexport const /** @type {?} */ $t = 116;\nexport const /** @type {?} */ $u = 117;\nexport const /** @type {?} */ $v = 118;\nexport const /** @type {?} */ $x = 120;\nexport const /** @type {?} */ $z = 122;\nexport const /** @type {?} */ $LBRACE = 123;\nexport const /** @type {?} */ $BAR = 124;\nexport const /** @type {?} */ $RBRACE = 125;\nexport const /** @type {?} */ $NBSP = 160;\nexport const /** @type {?} */ $PIPE = 124;\nexport const /** @type {?} */ $TILDA = 126;\nexport const /** @type {?} */ $AT = 64;\nexport const /** @type {?} */ $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n//# sourceMappingURL=chars.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/chars.js","/**\n * A replacement for \\@Injectable to be used in the compiler, so that\n * we don't try to evaluate the metadata in the compiler during AoT.\n * This decorator is enough to make the compiler work with the ReflectiveInjector though.\n * \\@Annotation\n * @return {?}\n */\nexport function CompilerInjectable() {\n    return (x) => x;\n}\n//# sourceMappingURL=injectable.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/injectable.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '@angular/core';\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertArrayOfStrings(identifier, value) {\n    if (!isDevMode() || value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(`Expected '${identifier}' to be an array of strings.`);\n    }\n    for (let /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(`Expected '${identifier}' to be an array of strings.`);\n        }\n    }\n}\nconst /** @type {?} */ INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nexport function assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(`Expected '${identifier}' to be an array, [start, end].`);\n    }\n    else if (isDevMode() && value != null) {\n        const /** @type {?} */ start = (value[0]);\n        const /** @type {?} */ end = (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(regexp => {\n            if (regexp.test(start) || regexp.test(end)) {\n                throw new Error(`['${start}', '${end}'] contains unusable interpolation symbol.`);\n            }\n        });\n    }\n}\n//# sourceMappingURL=assertions.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/assertions.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { assertInterpolationSymbols } from '../assertions';\nexport class InterpolationConfig {\n    /**\n     * @param {?} start\n     * @param {?} end\n     */\n    constructor(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    static fromArray(markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    }\n}\nfunction InterpolationConfig_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InterpolationConfig.prototype.start;\n    /** @type {?} */\n    InterpolationConfig.prototype.end;\n}\nexport const /** @type {?} */ DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n//# sourceMappingURL=interpolation_config.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/interpolation_config.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { CompilerInjectable } from '../injectable';\nexport let TokenType = {};\nTokenType.Character = 0;\nTokenType.Identifier = 1;\nTokenType.Keyword = 2;\nTokenType.String = 3;\nTokenType.Operator = 4;\nTokenType.Number = 5;\nTokenType.Error = 6;\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nconst /** @type {?} */ KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nexport class Lexer {\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    tokenize(text) {\n        const /** @type {?} */ scanner = new _Scanner(text);\n        const /** @type {?} */ tokens = [];\n        let /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    }\n}\nLexer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nLexer.ctorParameters = () => [];\nfunction Lexer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Lexer.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Lexer.ctorParameters;\n}\nexport class Token {\n    /**\n     * @param {?} index\n     * @param {?} type\n     * @param {?} numValue\n     * @param {?} strValue\n     */\n    constructor(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    isCharacter(code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    }\n    /**\n     * @return {?}\n     */\n    isNumber() { return this.type == TokenType.Number; }\n    /**\n     * @return {?}\n     */\n    isString() { return this.type == TokenType.String; }\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    isOperator(operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    }\n    /**\n     * @return {?}\n     */\n    isIdentifier() { return this.type == TokenType.Identifier; }\n    /**\n     * @return {?}\n     */\n    isKeyword() { return this.type == TokenType.Keyword; }\n    /**\n     * @return {?}\n     */\n    isKeywordLet() { return this.type == TokenType.Keyword && this.strValue == 'let'; }\n    /**\n     * @return {?}\n     */\n    isKeywordAs() { return this.type == TokenType.Keyword && this.strValue == 'as'; }\n    /**\n     * @return {?}\n     */\n    isKeywordNull() { return this.type == TokenType.Keyword && this.strValue == 'null'; }\n    /**\n     * @return {?}\n     */\n    isKeywordUndefined() {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    }\n    /**\n     * @return {?}\n     */\n    isKeywordTrue() { return this.type == TokenType.Keyword && this.strValue == 'true'; }\n    /**\n     * @return {?}\n     */\n    isKeywordFalse() { return this.type == TokenType.Keyword && this.strValue == 'false'; }\n    /**\n     * @return {?}\n     */\n    isKeywordThis() { return this.type == TokenType.Keyword && this.strValue == 'this'; }\n    /**\n     * @return {?}\n     */\n    isError() { return this.type == TokenType.Error; }\n    /**\n     * @return {?}\n     */\n    toNumber() { return this.type == TokenType.Number ? this.numValue : -1; }\n    /**\n     * @return {?}\n     */\n    toString() {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    }\n}\nfunction Token_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Token.prototype.index;\n    /** @type {?} */\n    Token.prototype.type;\n    /** @type {?} */\n    Token.prototype.numValue;\n    /** @type {?} */\n    Token.prototype.strValue;\n}\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nexport const /** @type {?} */ EOF = new Token(-1, TokenType.Character, 0, '');\nclass _Scanner {\n    /**\n     * @param {?} input\n     */\n    constructor(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    advance() {\n        this.peek = ++this.index >= this.length ? chars.$EOF : this.input.charCodeAt(this.index);\n    }\n    /**\n     * @return {?}\n     */\n    scanToken() {\n        const /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        let /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= chars.$SPACE) {\n            if (++index >= length) {\n                peek = chars.$EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (chars.isDigit(peek))\n            return this.scanNumber(index);\n        const /** @type {?} */ start = index;\n        switch (peek) {\n            case chars.$PERIOD:\n                this.advance();\n                return chars.isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, chars.$PERIOD);\n            case chars.$LPAREN:\n            case chars.$RPAREN:\n            case chars.$LBRACE:\n            case chars.$RBRACE:\n            case chars.$LBRACKET:\n            case chars.$RBRACKET:\n            case chars.$COMMA:\n            case chars.$COLON:\n            case chars.$SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case chars.$SQ:\n            case chars.$DQ:\n                return this.scanString();\n            case chars.$HASH:\n            case chars.$PLUS:\n            case chars.$MINUS:\n            case chars.$STAR:\n            case chars.$SLASH:\n            case chars.$PERCENT:\n            case chars.$CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case chars.$QUESTION:\n                return this.scanComplexOperator(start, '?', chars.$PERIOD, '.');\n            case chars.$LT:\n            case chars.$GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=');\n            case chars.$BANG:\n            case chars.$EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), chars.$EQ, '=', chars.$EQ, '=');\n            case chars.$AMPERSAND:\n                return this.scanComplexOperator(start, '&', chars.$AMPERSAND, '&');\n            case chars.$BAR:\n                return this.scanComplexOperator(start, '|', chars.$BAR, '|');\n            case chars.$NBSP:\n                while (chars.isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(`Unexpected character [${String.fromCharCode(peek)}]`, 0);\n    }\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    scanCharacter(start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    }\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    scanOperator(start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    }\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    scanComplexOperator(start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        let /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    }\n    /**\n     * @return {?}\n     */\n    scanIdentifier() {\n        const /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        const /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    scanNumber(start) {\n        let /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (chars.isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == chars.$PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!chars.isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        const /** @type {?} */ str = this.input.substring(start, this.index);\n        const /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    }\n    /**\n     * @return {?}\n     */\n    scanString() {\n        const /** @type {?} */ start = this.index;\n        const /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        let /** @type {?} */ buffer = '';\n        let /** @type {?} */ marker = this.index;\n        const /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == chars.$BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                let /** @type {?} */ unescapedCode;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == chars.$u) {\n                    // 4 character hex code for unicode character.\n                    const /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(`Invalid unicode escape [\\\\u${hex}]`, 0);\n                    }\n                    for (let /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == chars.$EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        const /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    }\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    error(message, offset) {\n        const /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, `Lexer Error: ${message} at column ${position} in expression [${this.input}]`);\n    }\n}\nfunction _Scanner_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _Scanner.prototype.length;\n    /** @type {?} */\n    _Scanner.prototype.peek;\n    /** @type {?} */\n    _Scanner.prototype.index;\n    /** @type {?} */\n    _Scanner.prototype.input;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return (chars.$a <= code && code <= chars.$z) || (chars.$A <= code && code <= chars.$Z) ||\n        (code == chars.$_) || (code == chars.$$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    const /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== chars.$EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return chars.isAsciiLetter(code) || chars.isDigit(code) || (code == chars.$_) ||\n        (code == chars.$$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == chars.$e || code == chars.$E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == chars.$MINUS || code == chars.$PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nexport function isQuote(code) {\n    return code === chars.$SQ || code === chars.$DQ || code === chars.$BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case chars.$n:\n            return chars.$LF;\n        case chars.$f:\n            return chars.$FF;\n        case chars.$r:\n            return chars.$CR;\n        case chars.$t:\n            return chars.$TAB;\n        case chars.$v:\n            return chars.$VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    const /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n//# sourceMappingURL=lexer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/expression_parser/lexer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { CompilerInjectable } from '../injectable';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { escapeRegExp } from '../util';\nimport { ASTWithSource, Binary, BindingPipe, Chain, Conditional, EmptyExpr, FunctionCall, ImplicitReceiver, Interpolation, KeyedRead, KeyedWrite, LiteralArray, LiteralMap, LiteralPrimitive, MethodCall, NonNullAssert, ParseSpan, ParserError, PrefixNot, PropertyRead, PropertyWrite, Quote, SafeMethodCall, SafePropertyRead, TemplateBinding } from './ast';\nimport { EOF, Lexer, TokenType, isIdentifier, isQuote } from './lexer';\nexport class SplitInterpolation {\n    /**\n     * @param {?} strings\n     * @param {?} expressions\n     * @param {?} offsets\n     */\n    constructor(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n}\nfunction SplitInterpolation_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SplitInterpolation.prototype.strings;\n    /** @type {?} */\n    SplitInterpolation.prototype.expressions;\n    /** @type {?} */\n    SplitInterpolation.prototype.offsets;\n}\nexport class TemplateBindingParseResult {\n    /**\n     * @param {?} templateBindings\n     * @param {?} warnings\n     * @param {?} errors\n     */\n    constructor(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n}\nfunction TemplateBindingParseResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.templateBindings;\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.warnings;\n    /** @type {?} */\n    TemplateBindingParseResult.prototype.errors;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    const /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nexport class Parser {\n    /**\n     * @param {?} _lexer\n     */\n    constructor(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseAction(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        const /** @type {?} */ sourceToLex = this._stripComments(input);\n        const /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        const /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseBinding(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseSimpleBinding(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        const /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(`Host binding expression cannot contain ${errors.join(' ')}`, input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    }\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    _reportError(message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _parseBindingAst(input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        const /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        const /** @type {?} */ sourceToLex = this._stripComments(input);\n        const /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    _parseQuote(input, location) {\n        if (input == null)\n            return null;\n        const /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        const /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        const /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    }\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    parseTemplateBindings(prefixToken, input, location) {\n        const /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            const /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(t => {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift(...prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parseInterpolation(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        const /** @type {?} */ expressions = [];\n        for (let /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            const /** @type {?} */ expressionText = split.expressions[i];\n            const /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            const /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            const /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    splitInterpolation(input, location, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        const /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        const /** @type {?} */ strings = [];\n        const /** @type {?} */ expressions = [];\n        const /** @type {?} */ offsets = [];\n        let /** @type {?} */ offset = 0;\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n            const /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, `at column ${this._findInterpolationErrorColumn(parts, i, interpolationConfig)} in`, location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    wrapLiteralPrimitive(input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    _stripComments(input) {\n        const /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    _commentStart(input) {\n        let /** @type {?} */ outerQuote = null;\n        for (let /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            const /** @type {?} */ char = input.charCodeAt(i);\n            const /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === chars.$SLASH && nextChar == chars.$SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _checkNoInterpolation(input, location, interpolationConfig) {\n        const /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        const /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(`Got interpolation (${interpolationConfig.start}${interpolationConfig.end}) where expression was expected`, input, `at column ${this._findInterpolationErrorColumn(parts, 1, interpolationConfig)} in`, location);\n        }\n    }\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _findInterpolationErrorColumn(parts, partInErrIdx, interpolationConfig) {\n        let /** @type {?} */ errLocation = '';\n        for (let /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                `${interpolationConfig.start}${parts[j]}${interpolationConfig.end}`;\n        }\n        return errLocation.length;\n    }\n}\nParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nParser.ctorParameters = () => [\n    { type: Lexer, },\n];\nfunction Parser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Parser.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    Parser.ctorParameters;\n    /** @type {?} */\n    Parser.prototype.errors;\n    /** @type {?} */\n    Parser.prototype._lexer;\n}\nexport class _ParseAST {\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} tokens\n     * @param {?} inputLength\n     * @param {?} parseAction\n     * @param {?} errors\n     * @param {?} offset\n     */\n    constructor(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    peek(offset) {\n        const /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    }\n    /**\n     * @return {?}\n     */\n    get next() { return this.peek(0); }\n    /**\n     * @return {?}\n     */\n    get inputIndex() {\n        return (this.index < this.tokens.length) ? this.next.index + this.offset :\n            this.inputLength + this.offset;\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    span(start) { return new ParseSpan(start, this.inputIndex); }\n    /**\n     * @return {?}\n     */\n    advance() { this.index++; }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    optionalCharacter(code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    peekKeywordLet() { return this.next.isKeywordLet(); }\n    /**\n     * @return {?}\n     */\n    peekKeywordAs() { return this.next.isKeywordAs(); }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    expectCharacter(code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(`Missing expected ${String.fromCharCode(code)}`);\n    }\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    optionalOperator(op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    expectOperator(operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(`Missing expected operator ${operator}`);\n    }\n    /**\n     * @return {?}\n     */\n    expectIdentifierOrKeyword() {\n        const /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(`Unexpected token ${n}, expected identifier or keyword`);\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    }\n    /**\n     * @return {?}\n     */\n    expectIdentifierOrKeywordOrString() {\n        const /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(`Unexpected token ${n}, expected identifier, keyword, or string`);\n            return '';\n        }\n        this.advance();\n        return (n.toString());\n    }\n    /**\n     * @return {?}\n     */\n    parseChain() {\n        const /** @type {?} */ exprs = [];\n        const /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            const /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter(chars.$SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter(chars.$SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(`Unexpected token '${this.next}'`);\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    }\n    /**\n     * @return {?}\n     */\n    parsePipe() {\n        let /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                const /** @type {?} */ name = this.expectIdentifierOrKeyword();\n                const /** @type {?} */ args = [];\n                while (this.optionalCharacter(chars.$COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseExpression() { return this.parseConditional(); }\n    /**\n     * @return {?}\n     */\n    parseConditional() {\n        const /** @type {?} */ start = this.inputIndex;\n        const /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            const /** @type {?} */ yes = this.parsePipe();\n            let /** @type {?} */ no;\n            if (!this.optionalCharacter(chars.$COLON)) {\n                const /** @type {?} */ end = this.inputIndex;\n                const /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(`Conditional expression ${expression} requires all 3 expressions`);\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parseLogicalOr() {\n        // '||'\n        let /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            const /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseLogicalAnd() {\n        // '&&'\n        let /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            const /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseEquality() {\n        // '==','!=','===','!=='\n        let /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            const /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    const /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseRelational() {\n        // '<', '>', '<=', '>='\n        let /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            const /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    const /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseAdditive() {\n        // '+', '-'\n        let /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            const /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    let /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseMultiplicative() {\n        // '*', '%', '/'\n        let /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            const /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    let /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parsePrefix() {\n        if (this.next.type == TokenType.Operator) {\n            const /** @type {?} */ start = this.inputIndex;\n            const /** @type {?} */ operator = this.next.strValue;\n            let /** @type {?} */ result;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    }\n    /**\n     * @return {?}\n     */\n    parseCallChain() {\n        let /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter(chars.$PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter(chars.$LBRACKET)) {\n                this.rbracketsExpected++;\n                const /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter(chars.$RBRACKET);\n                if (this.optionalOperator('=')) {\n                    const /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter(chars.$LPAREN)) {\n                this.rparensExpected++;\n                const /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter(chars.$RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parsePrimary() {\n        const /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            const /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter(chars.$RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter(chars.$LBRACKET)) {\n            this.rbracketsExpected++;\n            const /** @type {?} */ elements = this.parseExpressionList(chars.$RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter(chars.$RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter(chars.$LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            const /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            const /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(`Unexpected end of expression: ${this.input}`);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(`Unexpected token ${this.next}`);\n            return new EmptyExpr(this.span(start));\n        }\n    }\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    parseExpressionList(terminator) {\n        const /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    parseLiteralMap() {\n        const /** @type {?} */ keys = [];\n        const /** @type {?} */ values = [];\n        const /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter(chars.$LBRACE);\n        if (!this.optionalCharacter(chars.$RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                const /** @type {?} */ quoted = this.next.isString();\n                const /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key, quoted });\n                this.expectCharacter(chars.$COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter(chars.$COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter(chars.$RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    }\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    parseAccessMemberOrMethodCall(receiver, isSafe = false) {\n        const /** @type {?} */ start = receiver.span.start;\n        const /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter(chars.$LPAREN)) {\n            this.rparensExpected++;\n            const /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter(chars.$RPAREN);\n            this.rparensExpected--;\n            const /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    const /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    parseCallArguments() {\n        if (this.next.isCharacter(chars.$RPAREN))\n            return [];\n        const /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter(chars.$COMMA));\n        return (positionals);\n    }\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    expectTemplateBindingKey() {\n        let /** @type {?} */ result = '';\n        let /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    }\n    /**\n     * @return {?}\n     */\n    parseTemplateBindings() {\n        const /** @type {?} */ bindings = [];\n        let /** @type {?} */ prefix = ((null));\n        const /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            const /** @type {?} */ start = this.inputIndex;\n            let /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            let /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            let /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter(chars.$COLON);\n            let /** @type {?} */ name = ((null));\n            let /** @type {?} */ expression = ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name = this.expectTemplateBindingKey();\n                }\n                else {\n                    name = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                const /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                const /** @type {?} */ start = this.inputIndex;\n                const /** @type {?} */ ast = this.parsePipe();\n                const /** @type {?} */ source = this.input.substring(start - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                const /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                const /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter(chars.$SEMICOLON)) {\n                this.optionalCharacter(chars.$COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    }\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    error(message, index = null) {\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    locationText(index = null) {\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? `at column ${this.tokens[index].index + 1} in` :\n            `at the end of the expression`;\n    }\n    /**\n     * @return {?}\n     */\n    skip() {\n        let /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter(chars.$SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter(chars.$RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter(chars.$RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter(chars.$RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    }\n}\nfunction _ParseAST_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ParseAST.prototype.rparensExpected;\n    /** @type {?} */\n    _ParseAST.prototype.rbracketsExpected;\n    /** @type {?} */\n    _ParseAST.prototype.rbracesExpected;\n    /** @type {?} */\n    _ParseAST.prototype.index;\n    /** @type {?} */\n    _ParseAST.prototype.input;\n    /** @type {?} */\n    _ParseAST.prototype.location;\n    /** @type {?} */\n    _ParseAST.prototype.tokens;\n    /** @type {?} */\n    _ParseAST.prototype.inputLength;\n    /** @type {?} */\n    _ParseAST.prototype.parseAction;\n    /** @type {?} */\n    _ParseAST.prototype.errors;\n    /** @type {?} */\n    _ParseAST.prototype.offset;\n}\nclass SimpleExpressionChecker {\n    constructor() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    static check(ast) {\n        const /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInterpolation(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPropertyWrite(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionCall(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) { this.visitAll(ast.expressions); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) { this.visitAll(ast.values); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinary(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPrefixNot(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNonNullAssert(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditional(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) { this.errors.push('pipes'); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedRead(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitKeyedWrite(ast, context) { }\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    visitAll(asts) { return asts.map(node => node.visit(this)); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitChain(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitQuote(ast, context) { }\n}\nfunction SimpleExpressionChecker_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SimpleExpressionChecker.prototype.errors;\n}\n//# sourceMappingURL=parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/expression_parser/parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from './chars';\nimport { identifierModuleUrl, identifierName } from './compile_metadata';\nexport class ParseLocation {\n    /**\n     * @param {?} file\n     * @param {?} offset\n     * @param {?} line\n     * @param {?} col\n     */\n    constructor(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.offset != null ? `${this.file.url}@${this.line}:${this.col}` : this.file.url;\n    }\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    moveBy(delta) {\n        const /** @type {?} */ source = this.file.content;\n        const /** @type {?} */ len = source.length;\n        let /** @type {?} */ offset = this.offset;\n        let /** @type {?} */ line = this.line;\n        let /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            const /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == chars.$LF) {\n                line--;\n                const /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode(chars.$LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            const /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == chars.$LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    }\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    getContext(maxChars, maxLines) {\n        const /** @type {?} */ content = this.file.content;\n        let /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            let /** @type {?} */ endOffset = startOffset;\n            let /** @type {?} */ ctxChars = 0;\n            let /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    }\n}\nfunction ParseLocation_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseLocation.prototype.file;\n    /** @type {?} */\n    ParseLocation.prototype.offset;\n    /** @type {?} */\n    ParseLocation.prototype.line;\n    /** @type {?} */\n    ParseLocation.prototype.col;\n}\nexport class ParseSourceFile {\n    /**\n     * @param {?} content\n     * @param {?} url\n     */\n    constructor(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n}\nfunction ParseSourceFile_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseSourceFile.prototype.content;\n    /** @type {?} */\n    ParseSourceFile.prototype.url;\n}\nexport class ParseSourceSpan {\n    /**\n     * @param {?} start\n     * @param {?} end\n     * @param {?=} details\n     */\n    constructor(start, end, details = null) {\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    }\n}\nfunction ParseSourceSpan_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseSourceSpan.prototype.start;\n    /** @type {?} */\n    ParseSourceSpan.prototype.end;\n    /** @type {?} */\n    ParseSourceSpan.prototype.details;\n}\nexport let ParseErrorLevel = {};\nParseErrorLevel.WARNING = 0;\nParseErrorLevel.ERROR = 1;\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nexport class ParseError {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     * @param {?=} level\n     */\n    constructor(span, msg, level = ParseErrorLevel.ERROR) {\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    contextualMessage() {\n        const /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? ` (\"${ctx.before}[${ParseErrorLevel[this.level]} ->]${ctx.after}\")` : '';\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        const /** @type {?} */ details = this.span.details ? `, ${this.span.details}` : '';\n        return `${this.msg}${this.contextualMessage()}: ${this.span.start}${details}`;\n    }\n}\nfunction ParseError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseError.prototype.span;\n    /** @type {?} */\n    ParseError.prototype.msg;\n    /** @type {?} */\n    ParseError.prototype.level;\n}\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nexport function typeSourceSpan(kind, type) {\n    const /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    const /** @type {?} */ sourceFileName = moduleUrl != null ? `in ${kind} ${identifierName(type)} in ${moduleUrl}` :\n        `in ${kind} ${identifierName(type)}`;\n    const /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n//# sourceMappingURL=parse_util.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/parse_util.js","/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nexport class AstPath {\n    /**\n     * @param {?} path\n     * @param {?=} position\n     */\n    constructor(path, position = -1) {\n        this.path = path;\n        this.position = position;\n    }\n    /**\n     * @return {?}\n     */\n    get empty() { return !this.path || !this.path.length; }\n    /**\n     * @return {?}\n     */\n    get head() { return this.path[0]; }\n    /**\n     * @return {?}\n     */\n    get tail() { return this.path[this.path.length - 1]; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentOf(node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    childOf(node) { return this.path[this.path.indexOf(node) + 1]; }\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    first(ctor) {\n        for (let /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            let /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return (item);\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    push(node) { this.path.push(node); }\n    /**\n     * @return {?}\n     */\n    pop() { return ((this.path.pop())); }\n}\nfunction AstPath_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AstPath.prototype.path;\n    /** @type {?} */\n    AstPath.prototype.position;\n}\n//# sourceMappingURL=ast_path.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ast_path.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AstPath } from '../ast_path';\nexport class Text {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nfunction Text_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Text.prototype.value;\n    /** @type {?} */\n    Text.prototype.sourceSpan;\n}\nexport class Expansion {\n    /**\n     * @param {?} switchValue\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     * @param {?} switchValueSourceSpan\n     */\n    constructor(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitExpansion(this, context); }\n}\nfunction Expansion_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Expansion.prototype.switchValue;\n    /** @type {?} */\n    Expansion.prototype.type;\n    /** @type {?} */\n    Expansion.prototype.cases;\n    /** @type {?} */\n    Expansion.prototype.sourceSpan;\n    /** @type {?} */\n    Expansion.prototype.switchValueSourceSpan;\n}\nexport class ExpansionCase {\n    /**\n     * @param {?} value\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} valueSourceSpan\n     * @param {?} expSourceSpan\n     */\n    constructor(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitExpansionCase(this, context); }\n}\nfunction ExpansionCase_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpansionCase.prototype.value;\n    /** @type {?} */\n    ExpansionCase.prototype.expression;\n    /** @type {?} */\n    ExpansionCase.prototype.sourceSpan;\n    /** @type {?} */\n    ExpansionCase.prototype.valueSourceSpan;\n    /** @type {?} */\n    ExpansionCase.prototype.expSourceSpan;\n}\nexport class Attribute {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?=} valueSpan\n     */\n    constructor(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitAttribute(this, context); }\n}\nfunction Attribute_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Attribute.prototype.name;\n    /** @type {?} */\n    Attribute.prototype.value;\n    /** @type {?} */\n    Attribute.prototype.sourceSpan;\n    /** @type {?} */\n    Attribute.prototype.valueSpan;\n}\nexport class Element {\n    /**\n     * @param {?} name\n     * @param {?} attrs\n     * @param {?} children\n     * @param {?} sourceSpan\n     * @param {?=} startSourceSpan\n     * @param {?=} endSourceSpan\n     */\n    constructor(name, attrs, children, sourceSpan, startSourceSpan = null, endSourceSpan = null) {\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitElement(this, context); }\n}\nfunction Element_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Element.prototype.name;\n    /** @type {?} */\n    Element.prototype.attrs;\n    /** @type {?} */\n    Element.prototype.children;\n    /** @type {?} */\n    Element.prototype.sourceSpan;\n    /** @type {?} */\n    Element.prototype.startSourceSpan;\n    /** @type {?} */\n    Element.prototype.endSourceSpan;\n}\nexport class Comment {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitComment(this, context); }\n}\nfunction Comment_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Comment.prototype.value;\n    /** @type {?} */\n    Comment.prototype.sourceSpan;\n}\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nexport function visitAll(visitor, nodes, context = null) {\n    const /** @type {?} */ result = [];\n    const /** @type {?} */ visit = visitor.visit ?\n        (ast) => ((visitor.visit))(ast, context) || ast.visit(visitor, context) :\n        (ast) => ast.visit(visitor, context);\n    nodes.forEach(ast => {\n        const /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nexport class RecursiveVisitor {\n    constructor() { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        this.visitChildren(context, visit => {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(ast, context) {\n        return this.visitChildren(context, visit => { visit(ast.cases); });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(ast, context) { }\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    visitChildren(context, cb) {\n        let /** @type {?} */ results = [];\n        let /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    }\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    const /** @type {?} */ start = ast.sourceSpan.start.offset;\n    let /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start, end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nexport function findNode(nodes, position) {\n    const /** @type {?} */ path = [];\n    const /** @type {?} */ visitor = new class extends RecursiveVisitor {\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        visit(ast, context) {\n            const /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        }\n    };\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n//# sourceMappingURL=ast.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/ast.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as chars from '../chars';\nimport { ParseError, ParseLocation, ParseSourceFile, ParseSourceSpan } from '../parse_util';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { NAMED_ENTITIES, TagContentType } from './tags';\nexport let TokenType = {};\nTokenType.TAG_OPEN_START = 0;\nTokenType.TAG_OPEN_END = 1;\nTokenType.TAG_OPEN_END_VOID = 2;\nTokenType.TAG_CLOSE = 3;\nTokenType.TEXT = 4;\nTokenType.ESCAPABLE_RAW_TEXT = 5;\nTokenType.RAW_TEXT = 6;\nTokenType.COMMENT_START = 7;\nTokenType.COMMENT_END = 8;\nTokenType.CDATA_START = 9;\nTokenType.CDATA_END = 10;\nTokenType.ATTR_NAME = 11;\nTokenType.ATTR_VALUE = 12;\nTokenType.DOC_TYPE = 13;\nTokenType.EXPANSION_FORM_START = 14;\nTokenType.EXPANSION_CASE_VALUE = 15;\nTokenType.EXPANSION_CASE_EXP_START = 16;\nTokenType.EXPANSION_CASE_EXP_END = 17;\nTokenType.EXPANSION_FORM_END = 18;\nTokenType.EOF = 19;\nTokenType[TokenType.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType[TokenType.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType[TokenType.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType[TokenType.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType[TokenType.TEXT] = \"TEXT\";\nTokenType[TokenType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType[TokenType.RAW_TEXT] = \"RAW_TEXT\";\nTokenType[TokenType.COMMENT_START] = \"COMMENT_START\";\nTokenType[TokenType.COMMENT_END] = \"COMMENT_END\";\nTokenType[TokenType.CDATA_START] = \"CDATA_START\";\nTokenType[TokenType.CDATA_END] = \"CDATA_END\";\nTokenType[TokenType.ATTR_NAME] = \"ATTR_NAME\";\nTokenType[TokenType.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType[TokenType.DOC_TYPE] = \"DOC_TYPE\";\nTokenType[TokenType.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType[TokenType.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType[TokenType.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType[TokenType.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType[TokenType.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType[TokenType.EOF] = \"EOF\";\nexport class Token {\n    /**\n     * @param {?} type\n     * @param {?} parts\n     * @param {?} sourceSpan\n     */\n    constructor(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n}\nfunction Token_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Token.prototype.type;\n    /** @type {?} */\n    Token.prototype.parts;\n    /** @type {?} */\n    Token.prototype.sourceSpan;\n}\nexport class TokenError extends ParseError {\n    /**\n     * @param {?} errorMsg\n     * @param {?} tokenType\n     * @param {?} span\n     */\n    constructor(errorMsg, tokenType, span) {\n        super(span, errorMsg);\n        this.tokenType = tokenType;\n    }\n}\nfunction TokenError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TokenError.prototype.tokenType;\n}\nexport class TokenizeResult {\n    /**\n     * @param {?} tokens\n     * @param {?} errors\n     */\n    constructor(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n}\nfunction TokenizeResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TokenizeResult.prototype.tokens;\n    /** @type {?} */\n    TokenizeResult.prototype.errors;\n}\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nexport function tokenize(source, url, getTagDefinition, tokenizeExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nconst /** @type {?} */ _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    const /** @type {?} */ char = charCode === chars.$EOF ? 'EOF' : String.fromCharCode(charCode);\n    return `Unexpected character \"${char}\"`;\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return `Unknown entity \"${entitySrc}\" - use the \"&#<decimal>;\" or  \"&#x<hex>;\" syntax`;\n}\nclass _ControlFlowError {\n    /**\n     * @param {?} error\n     */\n    constructor(error) {\n        this.error = error;\n    }\n}\nfunction _ControlFlowError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ControlFlowError.prototype.error;\n}\nclass _Tokenizer {\n    /**\n     * @param {?} _file The html source\n     * @param {?} _getTagDefinition\n     * @param {?} _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param {?=} _interpolationConfig\n     */\n    constructor(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _processCarriageReturns(content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    }\n    /**\n     * @return {?}\n     */\n    tokenize() {\n        while (this._peek !== chars.$EOF) {\n            const /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode(chars.$LT)) {\n                    if (this._attemptCharCode(chars.$BANG)) {\n                        if (this._attemptCharCode(chars.$LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode(chars.$MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode(chars.$SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _tokenizeExpansionForm() {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === chars.$RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    _getLocation() {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    }\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _getSpan(start = this._getLocation(), end = this._getLocation()) {\n        return new ParseSourceSpan(start, end);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _beginToken(type, start = this._getLocation()) {\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    }\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _endToken(parts, end = this._getLocation()) {\n        const /** @type {?} */ token = new Token(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return token;\n    }\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _createError(msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += ` (Do you have an unescaped \"{\" in your template? Use \"{{ '{' }}\") to escape it.)`;\n        }\n        const /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = ((null));\n        this._currentTokenType = ((null));\n        return new _ControlFlowError(error);\n    }\n    /**\n     * @return {?}\n     */\n    _advance() {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg(chars.$EOF), this._getSpan());\n        }\n        if (this._peek === chars.$LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== chars.$LF && this._peek !== chars.$CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? chars.$EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? chars.$EOF : this._input.charCodeAt(this._index + 1);\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _attemptCharCode(charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _attemptCharCodeCaseInsensitive(charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _requireCharCode(charCode) {\n        const /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _attemptStr(chars) {\n        const /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        const /** @type {?} */ initialPosition = this._savePosition();\n        for (let /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _attemptStrCaseInsensitive(chars) {\n        for (let /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _requireStr(chars) {\n        const /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _attemptCharCodeUntilFn(predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _requireCharCodeUntilFn(predicate, len) {\n        const /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    }\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _attemptUntilChar(char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    }\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _readChar(decodeEntities) {\n        if (decodeEntities && this._peek === chars.$AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            const /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _decodeEntity() {\n        const /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode(chars.$HASH)) {\n            const /** @type {?} */ isHex = this._attemptCharCode(chars.$x) || this._attemptCharCode(chars.$X);\n            const /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            const /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                const /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (e) {\n                const /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            const /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != chars.$SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            const /** @type {?} */ name = this._input.substring(start.offset + 1, this._index - 1);\n            const /** @type {?} */ char = NAMED_ENTITIES[name];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name), this._getSpan(start));\n            }\n            return char;\n        }\n    }\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _consumeRawText(decodeEntities, firstCharOfEnd, attemptEndRest) {\n        let /** @type {?} */ tagCloseStart;\n        const /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType.ESCAPABLE_RAW_TEXT : TokenType.RAW_TEXT, textStart);\n        const /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeComment(start) {\n        this._beginToken(TokenType.COMMENT_START, start);\n        this._requireCharCode(chars.$MINUS);\n        this._endToken([]);\n        const /** @type {?} */ textToken = this._consumeRawText(false, chars.$MINUS, () => this._attemptStr('->'));\n        this._beginToken(TokenType.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeCdata(start) {\n        this._beginToken(TokenType.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        const /** @type {?} */ textToken = this._consumeRawText(false, chars.$RBRACKET, () => this._attemptStr(']>'));\n        this._beginToken(TokenType.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeDocType(start) {\n        this._beginToken(TokenType.DOC_TYPE, start);\n        this._attemptUntilChar(chars.$GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    }\n    /**\n     * @return {?}\n     */\n    _consumePrefixAndName() {\n        const /** @type {?} */ nameOrPrefixStart = this._index;\n        let /** @type {?} */ prefix = ((null));\n        while (this._peek !== chars.$COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        let /** @type {?} */ nameStart;\n        if (this._peek === chars.$COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        const /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagOpen(start) {\n        const /** @type {?} */ savedPos = this._savePosition();\n        let /** @type {?} */ tagName;\n        let /** @type {?} */ lowercaseTagName;\n        try {\n            if (!chars.isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            const /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== chars.$SLASH && this._peek !== chars.$GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode(chars.$EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        const /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    }\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _consumeRawTextWithTagClose(lowercaseTagName, decodeEntities) {\n        const /** @type {?} */ textToken = this._consumeRawText(decodeEntities, chars.$LT, () => {\n            if (!this._attemptCharCode(chars.$SLASH))\n                return false;\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            return this._attemptCharCode(chars.$GT);\n        });\n        this._beginToken(TokenType.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagOpenStart(start) {\n        this._beginToken(TokenType.TAG_OPEN_START, start);\n        const /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeAttributeName() {\n        this._beginToken(TokenType.ATTR_NAME);\n        const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeAttributeValue() {\n        this._beginToken(TokenType.ATTR_VALUE);\n        let /** @type {?} */ value;\n        if (this._peek === chars.$SQ || this._peek === chars.$DQ) {\n            const /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            const /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            const /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeTagOpenEnd() {\n        const /** @type {?} */ tokenType = this._attemptCharCode(chars.$SLASH) ? TokenType.TAG_OPEN_END_VOID : TokenType.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode(chars.$GT);\n        this._endToken([]);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _consumeTagClose(start) {\n        this._beginToken(TokenType.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        const /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode(chars.$GT);\n        this._endToken(prefixAndName);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionFormStart() {\n        this._beginToken(TokenType.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType.EXPANSION_FORM_START);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        const /** @type {?} */ condition = this._readUntil(chars.$COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.RAW_TEXT, this._getLocation());\n        const /** @type {?} */ type = this._readUntil(chars.$COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode(chars.$COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionCaseStart() {\n        this._beginToken(TokenType.EXPANSION_CASE_VALUE, this._getLocation());\n        const /** @type {?} */ value = this._readUntil(chars.$LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode(chars.$LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType.EXPANSION_CASE_EXP_START);\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionCaseEnd() {\n        this._beginToken(TokenType.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    }\n    /**\n     * @return {?}\n     */\n    _consumeExpansionFormEnd() {\n        this._beginToken(TokenType.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode(chars.$RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    }\n    /**\n     * @return {?}\n     */\n    _consumeText() {\n        const /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType.TEXT, start);\n        const /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    }\n    /**\n     * @return {?}\n     */\n    _isTextEnd() {\n        if (this._peek === chars.$LT || this._peek === chars.$EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === chars.$RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    _savePosition() {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    }\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _readUntil(char) {\n        const /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _restorePosition(position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        const /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _isInExpansionCase() {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_CASE_EXP_START;\n    }\n    /**\n     * @return {?}\n     */\n    _isInExpansionForm() {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType.EXPANSION_FORM_START;\n    }\n}\nfunction _Tokenizer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _Tokenizer.prototype._input;\n    /** @type {?} */\n    _Tokenizer.prototype._length;\n    /** @type {?} */\n    _Tokenizer.prototype._peek;\n    /** @type {?} */\n    _Tokenizer.prototype._nextPeek;\n    /** @type {?} */\n    _Tokenizer.prototype._index;\n    /** @type {?} */\n    _Tokenizer.prototype._line;\n    /** @type {?} */\n    _Tokenizer.prototype._column;\n    /** @type {?} */\n    _Tokenizer.prototype._currentTokenStart;\n    /** @type {?} */\n    _Tokenizer.prototype._currentTokenType;\n    /** @type {?} */\n    _Tokenizer.prototype._expansionCaseStack;\n    /** @type {?} */\n    _Tokenizer.prototype._inInterpolation;\n    /** @type {?} */\n    _Tokenizer.prototype.tokens;\n    /** @type {?} */\n    _Tokenizer.prototype.errors;\n    /** @type {?} */\n    _Tokenizer.prototype._file;\n    /** @type {?} */\n    _Tokenizer.prototype._getTagDefinition;\n    /** @type {?} */\n    _Tokenizer.prototype._tokenizeIcu;\n    /** @type {?} */\n    _Tokenizer.prototype._interpolationConfig;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !chars.isWhitespace(code) || code === chars.$EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return chars.isWhitespace(code) || code === chars.$GT || code === chars.$SLASH ||\n        code === chars.$SQ || code === chars.$DQ || code === chars.$EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < chars.$a || chars.$z < code) && (code < chars.$A || chars.$Z < code) &&\n        (code < chars.$0 || code > chars.$9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == chars.$SEMICOLON || code == chars.$EOF || !chars.isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    const /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == chars.$LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === chars.$EQ || chars.isAsciiLetter(peek) || chars.isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= chars.$a && code <= chars.$z ? code - chars.$a + chars.$A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    const /** @type {?} */ dstTokens = [];\n    let /** @type {?} */ lastDstToken = undefined;\n    for (let /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        const /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType.TEXT && token.type == TokenType.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n//# sourceMappingURL=lexer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/lexer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError, ParseSourceSpan } from '../parse_util';\nimport * as html from './ast';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport * as lex from './lexer';\nimport { getNsPrefix, isNgContainer, mergeNsAndName } from './tags';\nexport class TreeError extends ParseError {\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     */\n    constructor(elementName, span, msg) {\n        super(span, msg);\n        this.elementName = elementName;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    static create(elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    }\n}\nfunction TreeError_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TreeError.prototype.elementName;\n}\nexport class ParseTreeResult {\n    /**\n     * @param {?} rootNodes\n     * @param {?} errors\n     */\n    constructor(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n}\nfunction ParseTreeResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParseTreeResult.prototype.rootNodes;\n    /** @type {?} */\n    ParseTreeResult.prototype.errors;\n}\nexport class Parser {\n    /**\n     * @param {?} getTagDefinition\n     */\n    constructor(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ tokensAndErrors = lex.tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        const /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, ((tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    }\n}\nfunction Parser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Parser.prototype.getTagDefinition;\n}\nclass _TreeBuilder {\n    /**\n     * @param {?} tokens\n     * @param {?} getTagDefinition\n     */\n    constructor(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    build() {\n        while (this._peek.type !== lex.TokenType.EOF) {\n            if (this._peek.type === lex.TokenType.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.TEXT || this._peek.type === lex.TokenType.RAW_TEXT ||\n                this._peek.type === lex.TokenType.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === lex.TokenType.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    }\n    /**\n     * @return {?}\n     */\n    _advance() {\n        const /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _advanceIf(type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    }\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _consumeCdata(startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(lex.TokenType.CDATA_END);\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeComment(token) {\n        const /** @type {?} */ text = this._advanceIf(lex.TokenType.RAW_TEXT);\n        this._advanceIf(lex.TokenType.COMMENT_END);\n        const /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new html.Comment(value, token.sourceSpan));\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeExpansion(token) {\n        const /** @type {?} */ switchValue = this._advance();\n        const /** @type {?} */ type = this._advance();\n        const /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === lex.TokenType.EXPANSION_CASE_VALUE) {\n            const /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== lex.TokenType.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '}'.`));\n            return;\n        }\n        const /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new html.Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _parseExpansionCase() {\n        const /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== lex.TokenType.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, `Invalid ICU message. Missing '{'.`));\n            return null;\n        }\n        // read until }\n        const /** @type {?} */ start = this._advance();\n        const /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        const /** @type {?} */ end = this._advance();\n        exp.push(new lex.Token(lex.TokenType.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        const /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        const /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        const /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new html.ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    }\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _collectExpansionExpTokens(start) {\n        const /** @type {?} */ exp = [];\n        const /** @type {?} */ expansionFormStack = [lex.TokenType.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_START ||\n                this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, lex.TokenType.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                    return null;\n                }\n            }\n            if (this._peek.type === lex.TokenType.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, `Invalid ICU message. Missing '}'.`));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _consumeText(token) {\n        let /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            const /** @type {?} */ parent = this._getParentElement();\n            if (parent != null && parent.children.length == 0 &&\n                this.getTagDefinition(parent.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new html.Text(text, token.sourceSpan));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _closeVoidElement() {\n        const /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    }\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _consumeStartTag(startTagToken) {\n        const /** @type {?} */ prefix = startTagToken.parts[0];\n        const /** @type {?} */ name = startTagToken.parts[1];\n        const /** @type {?} */ attrs = [];\n        while (this._peek.type === lex.TokenType.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        const /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        let /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === lex.TokenType.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            const /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, `Only void and foreign elements can be self closed \"${startTagToken.parts[1]}\"`));\n            }\n        }\n        else if (this._peek.type === lex.TokenType.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        const /** @type {?} */ end = this._peek.sourceSpan.start;\n        const /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        const /** @type {?} */ el = new html.Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _pushElement(el) {\n        const /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        const /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        const { parent, container } = this._getParentElementSkippingContainers();\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            const /** @type {?} */ newParent = new html.Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    }\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _consumeEndTag(endTagToken) {\n        const /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, `Void elements do not have end tags \"${endTagToken.parts[1]}\"`));\n        }\n        else if (!this._popElement(fullName)) {\n            const /** @type {?} */ errMsg = `Unexpected closing tag \"${fullName}\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags`;\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    }\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _popElement(fullName) {\n        for (let /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            const /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _consumeAttr(attrName) {\n        const /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        let /** @type {?} */ end = attrName.sourceSpan.end;\n        let /** @type {?} */ value = '';\n        let /** @type {?} */ valueSpan = ((undefined));\n        if (this._peek.type === lex.TokenType.ATTR_VALUE) {\n            const /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new html.Attribute(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    }\n    /**\n     * @return {?}\n     */\n    _getParentElement() {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    }\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _getParentElementSkippingContainers() {\n        let /** @type {?} */ container = null;\n        for (let /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container };\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _addToParent(node) {\n        const /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    }\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _insertBeforeContainer(parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                const /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    }\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _getElementFullName(prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    }\n}\nfunction _TreeBuilder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _TreeBuilder.prototype._index;\n    /** @type {?} */\n    _TreeBuilder.prototype._peek;\n    /** @type {?} */\n    _TreeBuilder.prototype._rootNodes;\n    /** @type {?} */\n    _TreeBuilder.prototype._errors;\n    /** @type {?} */\n    _TreeBuilder.prototype._elementStack;\n    /** @type {?} */\n    _TreeBuilder.prototype.tokens;\n    /** @type {?} */\n    _TreeBuilder.prototype.getTagDefinition;\n}\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n//# sourceMappingURL=parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + `[${message.meaning}]`);\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    const /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    const /** @type {?} */ parts = message.nodes.map(a => a.visit(visitor, null));\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nclass _SerializerVisitor {\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return text.value; }\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        return `[${container.children.map(child => child.visit(this)).join(', ')}]`;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        return `{${icu.expression}, ${icu.type}, ${strCases.join(', ')}}`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        return ph.isVoid ?\n            `<ph tag name=\"${ph.startName}\"/>` :\n            `<ph tag name=\"${ph.startName}\">${ph.children.map(child => child.visit(this)).join(', ')}</ph name=\"${ph.closeName}\">`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return ph.value ? `<ph name=\"${ph.name}\">${ph.value}</ph>` : `<ph name=\"${ph.name}\"/>`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return `<ph icu name=\"${ph.name}\">${ph.value.visit(this)}</ph>`;\n    }\n}\nconst /** @type {?} */ serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serializeNodes(nodes) {\n    return nodes.map(a => a.visit(serializerVisitor, null));\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nclass _SerializerIgnoreIcuExpVisitor extends _SerializerVisitor {\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        let /** @type {?} */ strCases = Object.keys(icu.cases).map((k) => `${k} {${icu.cases[k].visit(this)}}`);\n        // Do not take the expression into account\n        return `{${icu.type}, ${strCases.join(', ')}}`;\n    }\n}\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nexport function sha1(str) {\n    const /** @type {?} */ utf8 = utf8Encode(str);\n    const /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    const /** @type {?} */ len = utf8.length * 8;\n    const /** @type {?} */ w = new Array(80);\n    let [a, b, c, d, e] = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (let /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        const [h0, h1, h2, h3, h4] = [a, b, c, d, e];\n        for (let /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            const [f, k] = fk(j, b, c, d);\n            const /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            [e, d, c, b, a] = [d, c, rol32(b, 30), a, temp];\n        }\n        [a, b, c, d, e] = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nexport function fingerprint(str) {\n    const /** @type {?} */ utf8 = utf8Encode(str);\n    let [hi, lo] = [hash32(utf8, 0), hash32(utf8, 102072)];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nexport function computeMsgId(msg, meaning) {\n    let [hi, lo] = fingerprint(msg);\n    if (meaning) {\n        const [him, lom] = fingerprint(meaning);\n        [hi, lo] = add64(rol64([hi, lo], 1), [him, lom]);\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    let [a, b] = [0x9e3779b9, 0x9e3779b9];\n    let /** @type {?} */ i;\n    const /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        [a, b, c] = mix([a, b, c]);\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix([a, b, c]) {\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\nlet Endian = {};\nEndian.Little = 0;\nEndian.Big = 1;\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    const /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    const /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64([ah, al], [bh, bl]) {\n    const [carry, l] = add32to64(al, bl);\n    const /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    const /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    const /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64([hi, lo], count) {\n    const /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    const /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    const /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (let /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    let /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (let /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (let /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce((str, word) => str + word32ToByteString(word), '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    let /** @type {?} */ str = '';\n    for (let /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    let /** @type {?} */ hex = '';\n    for (let /** @type {?} */ i = 0; i < str.length; i++) {\n        const /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    let /** @type {?} */ decimal = '';\n    let /** @type {?} */ toThePower = '1';\n    for (let /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    let /** @type {?} */ sum = '';\n    const /** @type {?} */ len = Math.max(x.length, y.length);\n    for (let /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        const /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    let /** @type {?} */ product = '';\n    let /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n//# sourceMappingURL=digest.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/digest.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class Message {\n    /**\n     * @param {?} nodes message AST\n     * @param {?} placeholders maps placeholder names to static content\n     * @param {?} placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     */\n    constructor(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n}\nfunction Message_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Message.prototype.sources;\n    /** @type {?} */\n    Message.prototype.nodes;\n    /** @type {?} */\n    Message.prototype.placeholders;\n    /** @type {?} */\n    Message.prototype.placeholderToMessage;\n    /** @type {?} */\n    Message.prototype.meaning;\n    /** @type {?} */\n    Message.prototype.description;\n    /** @type {?} */\n    Message.prototype.id;\n}\nexport class Text {\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitText(this, context); }\n}\nfunction Text_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Text.prototype.value;\n    /** @type {?} */\n    Text.prototype.sourceSpan;\n}\nexport class Container {\n    /**\n     * @param {?} children\n     * @param {?} sourceSpan\n     */\n    constructor(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitContainer(this, context); }\n}\nfunction Container_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Container.prototype.children;\n    /** @type {?} */\n    Container.prototype.sourceSpan;\n}\nexport class Icu {\n    /**\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} cases\n     * @param {?} sourceSpan\n     */\n    constructor(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitIcu(this, context); }\n}\nfunction Icu_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Icu.prototype.expressionPlaceholder;\n    /** @type {?} */\n    Icu.prototype.expression;\n    /** @type {?} */\n    Icu.prototype.type;\n    /** @type {?} */\n    Icu.prototype.cases;\n    /** @type {?} */\n    Icu.prototype.sourceSpan;\n}\nexport class TagPlaceholder {\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} startName\n     * @param {?} closeName\n     * @param {?} children\n     * @param {?} isVoid\n     * @param {?} sourceSpan\n     */\n    constructor(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitTagPlaceholder(this, context); }\n}\nfunction TagPlaceholder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TagPlaceholder.prototype.tag;\n    /** @type {?} */\n    TagPlaceholder.prototype.attrs;\n    /** @type {?} */\n    TagPlaceholder.prototype.startName;\n    /** @type {?} */\n    TagPlaceholder.prototype.closeName;\n    /** @type {?} */\n    TagPlaceholder.prototype.children;\n    /** @type {?} */\n    TagPlaceholder.prototype.isVoid;\n    /** @type {?} */\n    TagPlaceholder.prototype.sourceSpan;\n}\nexport class Placeholder {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    constructor(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitPlaceholder(this, context); }\n}\nfunction Placeholder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Placeholder.prototype.value;\n    /** @type {?} */\n    Placeholder.prototype.name;\n    /** @type {?} */\n    Placeholder.prototype.sourceSpan;\n}\nexport class IcuPlaceholder {\n    /**\n     * @param {?} value\n     * @param {?} name\n     * @param {?} sourceSpan\n     */\n    constructor(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    visit(visitor, context) { return visitor.visitIcuPlaceholder(this, context); }\n}\nfunction IcuPlaceholder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IcuPlaceholder.prototype.value;\n    /** @type {?} */\n    IcuPlaceholder.prototype.name;\n    /** @type {?} */\n    IcuPlaceholder.prototype.sourceSpan;\n}\nexport class CloneVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return new Text(text.value, text.sourceSpan); }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        const /** @type {?} */ children = container.children.map(n => n.visit(this, context));\n        return new Container(children, container.sourceSpan);\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(key => cases[key] = icu.cases[key].visit(this, context));\n        const /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        const /** @type {?} */ children = ph.children.map(n => n.visit(this, context));\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    }\n}\nexport class RecurseVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        container.children.forEach(child => child.visit(this));\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        Object.keys(icu.cases).forEach(k => { icu.cases[k].visit(this); });\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        ph.children.forEach(child => child.visit(this));\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) { }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) { }\n}\n//# sourceMappingURL=i18n_ast.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/i18n_ast.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nexport class PlaceholderRegistry {\n    constructor() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    getStartTagPlaceholderName(tag, attrs, isVoid) {\n        const /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        const /** @type {?} */ upperTag = tag.toUpperCase();\n        const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n        const /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : `START_${baseName}`);\n        this._signatureToName[signature] = name;\n        return name;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    getCloseTagPlaceholderName(tag) {\n        const /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        const /** @type {?} */ upperTag = tag.toUpperCase();\n        const /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || `TAG_${upperTag}`;\n        const /** @type {?} */ name = this._generateUniqueName(`CLOSE_${baseName}`);\n        this._signatureToName[signature] = name;\n        return name;\n    }\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    getPlaceholderName(name, content) {\n        const /** @type {?} */ upperName = name.toUpperCase();\n        const /** @type {?} */ signature = `PH: ${upperName}=${content}`;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        const /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getUniquePlaceholder(name) {\n        return this._generateUniqueName(name.toUpperCase());\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    _hashTag(tag, attrs, isVoid) {\n        const /** @type {?} */ start = `<${tag}`;\n        const /** @type {?} */ strAttrs = Object.keys(attrs).sort().map((name) => ` ${name}=${attrs[name]}`).join('');\n        const /** @type {?} */ end = isVoid ? '/>' : `></${tag}>`;\n        return start + strAttrs + end;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _hashClosingTag(tag) { return this._hashTag(`/${tag}`, {}, false); }\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    _generateUniqueName(base) {\n        const /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        const /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return `${base}_${id}`;\n    }\n}\nfunction PlaceholderRegistry_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PlaceholderRegistry.prototype._placeHolderNameCounts;\n    /** @type {?} */\n    PlaceholderRegistry.prototype._signatureToName;\n}\n//# sourceMappingURL=placeholder.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/placeholder.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Lexer as ExpressionLexer } from '../expression_parser/lexer';\nimport { Parser as ExpressionParser } from '../expression_parser/parser';\nimport * as html from '../ml_parser/ast';\nimport { getHtmlTagDefinition } from '../ml_parser/html_tags';\nimport * as i18n from './i18n_ast';\nimport { PlaceholderRegistry } from './serializers/placeholder';\nconst /** @type {?} */ _expParser = new ExpressionParser(new ExpressionLexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nexport function createI18nMessageFactory(interpolationConfig) {\n    const /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return (nodes, meaning, description, id) => visitor.toI18nMessage(nodes, meaning, description, id);\n}\nclass _I18nVisitor {\n    /**\n     * @param {?} _expressionParser\n     * @param {?} _interpolationConfig\n     */\n    constructor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    toI18nMessage(nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof html.Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        const /** @type {?} */ i18nodes = html.visitAll(this, nodes, {});\n        return new i18n.Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        const /** @type {?} */ children = html.visitAll(this, el.children);\n        const /** @type {?} */ attrs = {};\n        el.attrs.forEach(attr => {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        const /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        const /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = ((el.sourceSpan)).toString();\n        let /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = `</${el.name}>`;\n        }\n        return new i18n.TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this._icuDepth++;\n        const /** @type {?} */ i18nIcuCases = {};\n        const /** @type {?} */ i18nIcu = new i18n.Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach((caze) => {\n            i18nIcuCases[caze.value] = new i18n.Container(caze.expression.map((node) => node.visit(this, {})), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            const /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(`VAR_${icu.type}`);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        const /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        const /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new i18n.IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        throw new Error('Unreachable code');\n    }\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _visitTextWithInterpolation(text, sourceSpan) {\n        const /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new i18n.Text(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        const /** @type {?} */ nodes = [];\n        const /** @type {?} */ container = new i18n.Container(nodes, sourceSpan);\n        const { start: sDelimiter, end: eDelimiter } = this._interpolationConfig;\n        for (let /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            const /** @type {?} */ expression = splitInterpolation.expressions[i];\n            const /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            const /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new i18n.Text(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new i18n.Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        const /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new i18n.Text(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    }\n}\nfunction _I18nVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _I18nVisitor.prototype._isIcu;\n    /** @type {?} */\n    _I18nVisitor.prototype._icuDepth;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderRegistry;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderToContent;\n    /** @type {?} */\n    _I18nVisitor.prototype._placeholderToMessage;\n    /** @type {?} */\n    _I18nVisitor.prototype._expressionParser;\n    /** @type {?} */\n    _I18nVisitor.prototype._interpolationConfig;\n}\nconst /** @type {?} */ _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n//# sourceMappingURL=i18n_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/i18n_parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError } from '../parse_util';\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n    /**\n     * @param {?} span\n     * @param {?} msg\n     */\n    constructor(span, msg) { super(span, msg); }\n}\n//# sourceMappingURL=parse_util.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/parse_util.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport * as i18n from './i18n_ast';\nimport { createI18nMessageFactory } from './i18n_parser';\nimport { I18nError } from './parse_util';\nconst /** @type {?} */ _I18N_ATTR = 'i18n';\nconst /** @type {?} */ _I18N_ATTR_PREFIX = 'i18n-';\nconst /** @type {?} */ _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nconst /** @type {?} */ MEANING_SEPARATOR = '|';\nconst /** @type {?} */ ID_SEPARATOR = '@@';\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nexport function mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    const /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nexport class ExtractionResult {\n    /**\n     * @param {?} messages\n     * @param {?} errors\n     */\n    constructor(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n}\nfunction ExtractionResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExtractionResult.prototype.messages;\n    /** @type {?} */\n    ExtractionResult.prototype.errors;\n}\nlet _VisitorMode = {};\n_VisitorMode.Extract = 0;\n_VisitorMode.Merge = 1;\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nclass _Visitor {\n    /**\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     */\n    constructor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    extract(nodes, interpolationConfig) {\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(node => node.visit(this, null));\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    }\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    merge(nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        const /** @type {?} */ wrapper = new html.Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        const /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        // Parse cases for translatable html attributes\n        const /** @type {?} */ expression = html.visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new html.ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        const /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        const /** @type {?} */ cases = html.visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new html.Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) {\n        const /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        const /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        const /** @type {?} */ message = ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        const /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return html.visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        const /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        const /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        let /** @type {?} */ childNodes = [];\n        let /** @type {?} */ translatedChildNodes = ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        const /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        const /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        const /** @type {?} */ isImplicit = this._implicitTags.some(tag => el.name === tag) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        const /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                const /** @type {?} */ message = ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                const /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                html.visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                html.visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            const /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(child => {\n                const /** @type {?} */ visited = child.visit(this, context);\n                if (visited && !this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            const /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new html.Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        throw new Error('unreachable code');\n    }\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _init(mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _visitAttributesOf(el) {\n        const /** @type {?} */ explicitAttrNameToValue = {};\n        const /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(attr => attr.name.startsWith(_I18N_ATTR_PREFIX))\n            .forEach(attr => explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n            attr.value);\n        el.attrs.forEach(attr => {\n            if (attr.name in explicitAttrNameToValue) {\n                this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(name => attr.name === name)) {\n                this._addMessage([attr]);\n            }\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _addMessage(ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof html.Attribute && !((ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        const { meaning, description, id } = _parseMessageMeta(msgMeta);\n        const /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    }\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _translateMessage(el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            const /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, `Translation unavailable for message id=\"${this._translations.digest(message)}\"`);\n        }\n        return [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _translateAttributes(el) {\n        const /** @type {?} */ attributes = el.attrs;\n        const /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(attr => {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        const /** @type {?} */ translatedAttributes = [];\n        attributes.forEach((attr) => {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                const { meaning, description, id } = i18nParsedMessageMeta[attr.name];\n                const /** @type {?} */ message = this._createI18nMessage([attr], meaning, description, id);\n                const /** @type {?} */ nodes = this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new html.Attribute(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof html.Text) {\n                        const /** @type {?} */ value = ((nodes[0])).value;\n                        translatedAttributes.push(new html.Attribute(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        this._reportError(el, `Unexpected translation for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n                    }\n                }\n                else {\n                    this._reportError(el, `Translation unavailable for attribute \"${attr.name}\" (id=\"${id || this._translations.digest(message)}\")`);\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    }\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _mayBeAddBlockChildren(node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    }\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _openTranslatableSection(node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    }\n    /**\n     * A translatable section could be:\n     * - the content of translatable element,\n     * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n     * @return {?}\n     */\n    get _isInTranslatableSection() {\n        return this._msgCountAtSectionStart !== void 0;\n    }\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _closeTranslatableSection(node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        const /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        const /** @type {?} */ significantChildren = directChildren.reduce((count, node) => count + (node instanceof html.Comment ? 0 : 1), 0);\n        if (significantChildren == 1) {\n            for (let /** @type {?} */ i = this._messages.length - 1; i >= ((startIndex)); i--) {\n                const /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof i18n.Text)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    }\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _reportError(node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    }\n}\nfunction _Visitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _Visitor.prototype._depth;\n    /** @type {?} */\n    _Visitor.prototype._inI18nNode;\n    /** @type {?} */\n    _Visitor.prototype._inImplicitNode;\n    /** @type {?} */\n    _Visitor.prototype._inI18nBlock;\n    /** @type {?} */\n    _Visitor.prototype._blockMeaningAndDesc;\n    /** @type {?} */\n    _Visitor.prototype._blockChildren;\n    /** @type {?} */\n    _Visitor.prototype._blockStartDepth;\n    /** @type {?} */\n    _Visitor.prototype._inIcu;\n    /** @type {?} */\n    _Visitor.prototype._msgCountAtSectionStart;\n    /** @type {?} */\n    _Visitor.prototype._errors;\n    /** @type {?} */\n    _Visitor.prototype._mode;\n    /** @type {?} */\n    _Visitor.prototype._messages;\n    /** @type {?} */\n    _Visitor.prototype._translations;\n    /** @type {?} */\n    _Visitor.prototype._createI18nMessage;\n    /** @type {?} */\n    _Visitor.prototype._implicitTags;\n    /** @type {?} */\n    _Visitor.prototype._implicitAttrs;\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof html.Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(attr => attr.name === _I18N_ATTR) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    const /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    const /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    const [meaningAndDesc, id] = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''];\n    const [meaning, description] = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc];\n    return { meaning, description, id };\n}\n//# sourceMappingURL=extractor_merger.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/extractor_merger.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { TagContentType } from './tags';\nexport class XmlTagDefinition {\n    constructor() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    requireExtraParent(currentParent) { return false; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    isClosedByChild(name) { return false; }\n}\nfunction XmlTagDefinition_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XmlTagDefinition.prototype.closedByParent;\n    /** @type {?} */\n    XmlTagDefinition.prototype.requiredParents;\n    /** @type {?} */\n    XmlTagDefinition.prototype.parentToAdd;\n    /** @type {?} */\n    XmlTagDefinition.prototype.implicitNamespacePrefix;\n    /** @type {?} */\n    XmlTagDefinition.prototype.contentType;\n    /** @type {?} */\n    XmlTagDefinition.prototype.isVoid;\n    /** @type {?} */\n    XmlTagDefinition.prototype.ignoreFirstLf;\n    /** @type {?} */\n    XmlTagDefinition.prototype.canSelfClose;\n}\nconst /** @type {?} */ _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n//# sourceMappingURL=xml_tags.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/xml_tags.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Parser } from './parser';\nimport { getXmlTagDefinition } from './xml_tags';\nexport { ParseTreeResult, TreeError } from './parser';\nexport class XmlParser extends Parser {\n    constructor() { super(getXmlTagDefinition); }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false) {\n        return super.parse(source, url, parseExpansionForms);\n    }\n}\n//# sourceMappingURL=xml_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/xml_parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as i18n from '../i18n_ast';\n/**\n * @abstract\n */\nexport class Serializer {\n    /**\n     * @abstract\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) { }\n    /**\n     * @abstract\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) { }\n    /**\n     * @abstract\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) { return null; }\n}\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nexport class SimplePlaceholderMapper extends i18n.RecurseVisitor {\n    /**\n     * @param {?} message\n     * @param {?} mapName\n     */\n    constructor(message, mapName) {\n        super();\n        this.mapName = mapName;\n        this.internalToPublic = {};\n        this.publicToNextId = {};\n        this.publicToInternal = {};\n        message.nodes.forEach(node => node.visit(this));\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    toPublicName(internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    }\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    toInternalName(publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return null; }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        super.visitTagPlaceholder(ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) { this.visitPlaceholderName(ph.name); }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        this.visitPlaceholderName(ph.name);\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    visitPlaceholderName(internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        let /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            const /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = `${publicName}_${nextId}`;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    }\n}\nfunction SimplePlaceholderMapper_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.internalToPublic;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.publicToNextId;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.publicToInternal;\n    /** @type {?} */\n    SimplePlaceholderMapper.prototype.mapName;\n}\n//# sourceMappingURL=serializer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/serializer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass _Visitor {\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    visitTag(tag) {\n        const /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return `<${tag.name}${strAttrs}/>`;\n        }\n        const /** @type {?} */ strChildren = tag.children.map(node => node.visit(this));\n        return `<${tag.name}${strAttrs}>${strChildren.join('')}</${tag.name}>`;\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { return text.value; }\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    visitDeclaration(decl) {\n        return `<?xml${this._serializeAttributes(decl.attrs)} ?>`;\n    }\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _serializeAttributes(attrs) {\n        const /** @type {?} */ strAttrs = Object.keys(attrs).map((name) => `${name}=\"${attrs[name]}\"`).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    }\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    visitDoctype(doctype) {\n        return `<!DOCTYPE ${doctype.rootTag} [\\n${doctype.dtd}\\n]>`;\n    }\n}\nconst /** @type {?} */ _visitor = new _Visitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nexport function serialize(nodes) {\n    return nodes.map((node) => node.visit(_visitor)).join('');\n}\nexport class Declaration {\n    /**\n     * @param {?} unescapedAttrs\n     */\n    constructor(unescapedAttrs) {\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach((k) => {\n            this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitDeclaration(this); }\n}\nfunction Declaration_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Declaration.prototype.attrs;\n}\nexport class Doctype {\n    /**\n     * @param {?} rootTag\n     * @param {?} dtd\n     */\n    constructor(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitDoctype(this); }\n}\nfunction Doctype_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Doctype.prototype.rootTag;\n    /** @type {?} */\n    Doctype.prototype.dtd;\n}\nexport class Tag {\n    /**\n     * @param {?} name\n     * @param {?=} unescapedAttrs\n     * @param {?=} children\n     */\n    constructor(name, unescapedAttrs = {}, children = []) {\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach((k) => {\n            this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitTag(this); }\n}\nfunction Tag_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Tag.prototype.attrs;\n    /** @type {?} */\n    Tag.prototype.name;\n    /** @type {?} */\n    Tag.prototype.children;\n}\nexport class Text {\n    /**\n     * @param {?} unescapedValue\n     */\n    constructor(unescapedValue) { this.value = _escapeXml(unescapedValue); }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    visit(visitor) { return visitor.visitText(this); }\n}\nfunction Text_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Text.prototype.value;\n}\nexport class CR extends Text {\n    /**\n     * @param {?=} ws\n     */\n    constructor(ws = 0) { super(`\\n${new Array(ws + 1).join(' ')}`); }\n}\nconst /** @type {?} */ _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce((text, entry) => text.replace(entry[0], entry[1]), text);\n}\n//# sourceMappingURL=xml_helper.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/xml_helper.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { digest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nconst /** @type {?} */ _VERSION = '1.2';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'x';\nconst /** @type {?} */ _FILE_TAG = 'file';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'trans-unit';\nconst /** @type {?} */ _CONTEXT_GROUP_TAG = 'context-group';\nconst /** @type {?} */ _CONTEXT_TAG = 'context';\nexport class Xliff extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        const /** @type {?} */ visitor = new _WriteVisitor();\n        const /** @type {?} */ transUnits = [];\n        messages.forEach(message => {\n            let /** @type {?} */ contextTags = [];\n            message.sources.forEach((source) => {\n                let /** @type {?} */ contextGroupTag = new xml.Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new xml.Text(source.filePath)]), new xml.CR(10), new xml.Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new xml.Text(`${source.startLine}`)]), new xml.CR(8));\n                contextTags.push(new xml.CR(8), contextGroupTag);\n            });\n            const /** @type {?} */ transUnit = new xml.Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            transUnit.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), ...contextTags);\n            if (message.description) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'description' }, [new xml.Text(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new xml.CR(8), new xml.Tag('note', { priority: '1', from: 'meaning' }, [new xml.Text(message.meaning)]));\n            }\n            transUnit.children.push(new xml.CR(6));\n            transUnits.push(new xml.CR(6), transUnit);\n        });\n        const /** @type {?} */ body = new xml.Tag('body', {}, [...transUnits, new xml.CR(4)]);\n        const /** @type {?} */ file = new xml.Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new xml.CR(4), body, new xml.CR(2)]);\n        const /** @type {?} */ xliff = new xml.Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        // xliff to xml nodes\n        const /** @type {?} */ xliffParser = new XliffParser();\n        const { locale, msgIdToHtml, errors } = xliffParser.parse(content, url);\n        // xml nodes to i18n nodes\n        const /** @type {?} */ i18nNodesByMsgId = {};\n        const /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            const { i18nNodes, errors: e } = converter.convert(msgIdToHtml[msgId], url);\n            errors.push(...e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(`xliff parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n}\nclass _WriteVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        const /** @type {?} */ nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        const /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype });\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype });\n        return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: ph.name })];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\nclass XliffParser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = ((null));\n                const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    const /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, `Message ${id} misses a translation`);\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                const /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                const /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                const /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'target-language');\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                ml.visitAll(this, element.children, null);\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nfunction XliffParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XliffParser.prototype._unitMlString;\n    /** @type {?} */\n    XliffParser.prototype._errors;\n    /** @type {?} */\n    XliffParser.prototype._msgIdToHtml;\n    /** @type {?} */\n    XliffParser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            ml.visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, /** @type {?} */ ((text.sourceSpan))); }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'id');\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"id\" attribute`);\n        }\n        else {\n            this._addError(el, `Unexpected tag`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        const /** @type {?} */ caseMap = {};\n        ml.visitAll(this, icu.cases).forEach((c) => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nfunction XmlToI18n_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return `x-${tag}`;\n    }\n}\n//# sourceMappingURL=xliff.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/xliff.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport { decimalDigest } from '../digest';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer } from './serializer';\nimport * as xml from './xml_helper';\nconst /** @type {?} */ _VERSION = '2.0';\nconst /** @type {?} */ _XMLNS = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nconst /** @type {?} */ _DEFAULT_SOURCE_LANG = 'en';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _PLACEHOLDER_SPANNING_TAG = 'pc';\nconst /** @type {?} */ _XLIFF_TAG = 'xliff';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _TARGET_TAG = 'target';\nconst /** @type {?} */ _UNIT_TAG = 'unit';\nexport class Xliff2 extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        const /** @type {?} */ visitor = new _WriteVisitor();\n        const /** @type {?} */ units = [];\n        messages.forEach(message => {\n            const /** @type {?} */ unit = new xml.Tag(_UNIT_TAG, { id: message.id });\n            const /** @type {?} */ notes = new xml.Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'description' }, [new xml.Text(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'meaning' }, [new xml.Text(message.meaning)]));\n                }\n            }\n            message.sources.forEach((source) => {\n                notes.children.push(new xml.CR(8), new xml.Tag('note', { category: 'location' }, [\n                    new xml.Text(`${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n                ]));\n            });\n            notes.children.push(new xml.CR(6));\n            unit.children.push(new xml.CR(6), notes);\n            const /** @type {?} */ segment = new xml.Tag('segment');\n            segment.children.push(new xml.CR(8), new xml.Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes)), new xml.CR(6));\n            unit.children.push(new xml.CR(6), segment, new xml.CR(4));\n            units.push(new xml.CR(4), unit);\n        });\n        const /** @type {?} */ file = new xml.Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, [...units, new xml.CR(2)]);\n        const /** @type {?} */ xliff = new xml.Tag(_XLIFF_TAG, { version: _VERSION, xmlns: _XMLNS, srcLang: locale || _DEFAULT_SOURCE_LANG }, [new xml.CR(2), file, new xml.CR()]);\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }), new xml.CR(), xliff, new xml.CR()\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        // xliff to xml nodes\n        const /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        const { locale, msgIdToHtml, errors } = xliff2Parser.parse(content, url);\n        // xml nodes to i18n nodes\n        const /** @type {?} */ i18nNodesByMsgId = {};\n        const /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            const { i18nNodes, errors: e } = converter.convert(msgIdToHtml[msgId], url);\n            errors.push(...e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(`xliff2 parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return decimalDigest(message); }\n}\nclass _WriteVisitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        const /** @type {?} */ nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        const /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            const /** @type {?} */ tagPh = new xml.Tag(_PLACEHOLDER_TAG, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: `<${ph.tag}/>`,\n            });\n            return [tagPh];\n        }\n        const /** @type {?} */ tagPc = new xml.Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: `<${ph.tag}>`,\n            dispEnd: `</${ph.tag}>`,\n        });\n        const /** @type {?} */ nodes = [].concat(...ph.children.map(node => node.visit(this)));\n        if (nodes.length) {\n            nodes.forEach((node) => tagPc.children.push(node));\n        }\n        else {\n            tagPc.children.push(new xml.Text(''));\n        }\n        return [tagPc];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, {\n                id: idStr,\n                equiv: ph.name,\n                disp: `{{${ph.value}}}`,\n            })];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        const /** @type {?} */ cases = Object.keys(ph.value.cases).map((value) => value + ' {...}').join(' ');\n        const /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new xml.Tag(_PLACEHOLDER_TAG, { id: idStr, equiv: ph.name, disp: `{${ph.value.expression}, ${ph.value.type}, ${cases}}` })];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        this._nextPlaceholderId = 0;\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\nfunction _WriteVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _WriteVisitor.prototype._nextPlaceholderId;\n}\nclass Xliff2Parser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        const /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = null;\n                const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_UNIT_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    const /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, `Message ${id} misses a translation`);\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                const /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                const /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                const /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                const /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                const /** @type {?} */ localeAttr = element.attrs.find((attr) => attr.name === 'trgLang');\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                const /** @type {?} */ versionAttr = element.attrs.find((attr) => attr.name === 'version');\n                if (versionAttr) {\n                    const /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, `The XLIFF file version ${version} is not compatible with XLIFF 2.0 serializer`);\n                    }\n                    else {\n                        ml.visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                ml.visitAll(this, element.children, null);\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    }\n}\nfunction Xliff2Parser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Xliff2Parser.prototype._unitMlString;\n    /** @type {?} */\n    Xliff2Parser.prototype._errors;\n    /** @type {?} */\n    Xliff2Parser.prototype._msgIdToHtml;\n    /** @type {?} */\n    Xliff2Parser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            [].concat(...ml.visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, text.sourceSpan); }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        switch (el.name) {\n            case _PLACEHOLDER_TAG:\n                const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'equiv');\n                if (nameAttr) {\n                    return [new i18n.Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equiv\" attribute`);\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                const /** @type {?} */ startAttr = el.attrs.find((attr) => attr.name === 'equivStart');\n                const /** @type {?} */ endAttr = el.attrs.find((attr) => attr.name === 'equivEnd');\n                if (!startAttr) {\n                    this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivStart\" attribute`);\n                }\n                else if (!endAttr) {\n                    this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"equivEnd\" attribute`);\n                }\n                else {\n                    const /** @type {?} */ startId = startAttr.value;\n                    const /** @type {?} */ endId = endAttr.value;\n                    const /** @type {?} */ nodes = [];\n                    return nodes.concat(new i18n.Placeholder('', startId, el.sourceSpan), ...el.children.map(node => node.visit(this, null)), new i18n.Placeholder('', endId, el.sourceSpan));\n                }\n                break;\n            default:\n                this._addError(el, `Unexpected tag`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        const /** @type {?} */ caseMap = {};\n        ml.visitAll(this, icu.cases).forEach((c) => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat(...ml.visitAll(this, icuCase.expression)),\n        };\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    }\n}\nfunction XmlToI18n_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n//# sourceMappingURL=xliff2.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/xliff2.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { decimalDigest } from '../digest';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport * as xml from './xml_helper';\nconst /** @type {?} */ _MESSAGES_TAG = 'messagebundle';\nconst /** @type {?} */ _MESSAGE_TAG = 'msg';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nconst /** @type {?} */ _EXEMPLE_TAG = 'ex';\nconst /** @type {?} */ _SOURCE_TAG = 'source';\nconst /** @type {?} */ _DOCTYPE = `<!ELEMENT messagebundle (msg)*>\n<!ATTLIST messagebundle class CDATA #IMPLIED>\n\n<!ELEMENT msg (#PCDATA|ph|source)*>\n<!ATTLIST msg id CDATA #IMPLIED>\n<!ATTLIST msg seq CDATA #IMPLIED>\n<!ATTLIST msg name CDATA #IMPLIED>\n<!ATTLIST msg desc CDATA #IMPLIED>\n<!ATTLIST msg meaning CDATA #IMPLIED>\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\n<!ATTLIST msg xml:space (default|preserve) \"default\">\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\n\n<!ELEMENT source (#PCDATA)>\n\n<!ELEMENT ph (#PCDATA|ex)*>\n<!ATTLIST ph name CDATA #REQUIRED>\n\n<!ELEMENT ex (#PCDATA)>`;\nexport class Xmb extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) {\n        const /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        const /** @type {?} */ visitor = new _Visitor();\n        let /** @type {?} */ rootNode = new xml.Tag(_MESSAGES_TAG);\n        messages.forEach(message => {\n            const /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            let /** @type {?} */ sourceTags = [];\n            message.sources.forEach((source) => {\n                sourceTags.push(new xml.Tag(_SOURCE_TAG, {}, [\n                    new xml.Text(`${source.filePath}:${source.startLine}${source.endLine !== source.startLine ? ',' + source.endLine : ''}`)\n                ]));\n            });\n            rootNode.children.push(new xml.CR(2), new xml.Tag(_MESSAGE_TAG, attrs, [...sourceTags, ...visitor.serialize(message.nodes)]));\n        });\n        rootNode.children.push(new xml.CR());\n        return xml.serialize([\n            new xml.Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new xml.CR(),\n            new xml.Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new xml.CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new xml.CR(),\n        ]);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        throw new Error('Unsupported');\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    }\n}\nclass _Visitor {\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return [new xml.Text(text.value)]; }\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        const /** @type {?} */ nodes = [];\n        container.children.forEach((node) => nodes.push(...node.visit(this)));\n        return nodes;\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ nodes = [new xml.Text(`{${icu.expressionPlaceholder}, ${icu.type}, `)];\n        Object.keys(icu.cases).forEach((c) => {\n            nodes.push(new xml.Text(`${c} {`), ...icu.cases[c].visit(this), new xml.Text(`} `));\n        });\n        nodes.push(new xml.Text(`}`));\n        return nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        const /** @type {?} */ startEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`<${ph.tag}>`)]);\n        const /** @type {?} */ startTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        const /** @type {?} */ closeEx = new xml.Tag(_EXEMPLE_TAG, {}, [new xml.Text(`</${ph.tag}>`)]);\n        const /** @type {?} */ closeTagPh = new xml.Tag(_PLACEHOLDER_TAG, { name: ph.closeName }, [closeEx]);\n        return [startTagPh, ...this.serialize(ph.children), closeTagPh];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name })];\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        return [new xml.Tag(_PLACEHOLDER_TAG, { name: ph.name })];\n    }\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    serialize(nodes) {\n        return [].concat(...nodes.map(node => node.visit(this)));\n    }\n}\n/**\n * @param {?} message\n * @return {?}\n */\nexport function digest(message) {\n    return decimalDigest(message);\n}\nclass ExampleVisitor {\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    addDefaultExamples(node) {\n        node.visit(this);\n        return node;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    visitTag(tag) {\n        if (tag.name === _PLACEHOLDER_TAG) {\n            if (!tag.children || tag.children.length == 0) {\n                const /** @type {?} */ exText = new xml.Text(tag.attrs['name'] || '...');\n                tag.children = [new xml.Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(node => node.visit(this));\n        }\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    visitText(text) { }\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    visitDeclaration(decl) { }\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    visitDoctype(doctype) { }\n}\n/**\n * @param {?} internalName\n * @return {?}\n */\nexport function toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n//# sourceMappingURL=xmb.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/xmb.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ml from '../../ml_parser/ast';\nimport { XmlParser } from '../../ml_parser/xml_parser';\nimport * as i18n from '../i18n_ast';\nimport { I18nError } from '../parse_util';\nimport { Serializer, SimplePlaceholderMapper } from './serializer';\nimport { digest, toPublicName } from './xmb';\nconst /** @type {?} */ _TRANSLATIONS_TAG = 'translationbundle';\nconst /** @type {?} */ _TRANSLATION_TAG = 'translation';\nconst /** @type {?} */ _PLACEHOLDER_TAG = 'ph';\nexport class Xtb extends Serializer {\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    write(messages, locale) { throw new Error('Unsupported'); }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    load(content, url) {\n        // xtb to xml nodes\n        const /** @type {?} */ xtbParser = new XtbParser();\n        const { locale, msgIdToHtml, errors } = xtbParser.parse(content, url);\n        // xml nodes to i18n nodes\n        const /** @type {?} */ i18nNodesByMsgId = {};\n        const /** @type {?} */ converter = new XmlToI18n();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(msgId => {\n            const /** @type {?} */ valueFn = function () {\n                const { i18nNodes, errors } = converter.convert(msgIdToHtml[msgId], url);\n                if (errors.length) {\n                    throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId };\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    digest(message) { return digest(message); }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    createNameMapper(message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    }\n}\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            const /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value });\n            return value;\n        },\n        set: _ => { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nclass XtbParser {\n    constructor() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    parse(xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        const /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        ml.visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n                }\n                const /** @type {?} */ langAttr = element.attrs.find((attr) => attr.name === 'lang');\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                ml.visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                const /** @type {?} */ idAttr = element.attrs.find((attr) => attr.name === 'id');\n                if (!idAttr) {\n                    this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n                }\n                else {\n                    const /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, `Duplicated translations for msg ${id}`);\n                    }\n                    else {\n                        const /** @type {?} */ innerTextStart = ((element.startSourceSpan)).end.offset;\n                        const /** @type {?} */ innerTextEnd = ((element.endSourceSpan)).start.offset;\n                        const /** @type {?} */ content = ((element.startSourceSpan)).start.file.content;\n                        const /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nfunction XtbParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XtbParser.prototype._bundleDepth;\n    /** @type {?} */\n    XtbParser.prototype._errors;\n    /** @type {?} */\n    XtbParser.prototype._msgIdToHtml;\n    /** @type {?} */\n    XtbParser.prototype._locale;\n}\nclass XmlToI18n {\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    convert(message, url) {\n        const /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        const /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            ml.visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes,\n            errors: this._errors,\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return new i18n.Text(text.value, /** @type {?} */ ((text.sourceSpan))); }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        const /** @type {?} */ caseMap = {};\n        ml.visitAll(this, icu.cases).forEach(c => {\n            caseMap[c.value] = new i18n.Container(c.nodes, icu.sourceSpan);\n        });\n        return new i18n.Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: ml.visitAll(this, icuCase.expression),\n        };\n    }\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            const /** @type {?} */ nameAttr = el.attrs.find((attr) => attr.name === 'name');\n            if (nameAttr) {\n                return new i18n.Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n        }\n        else {\n            this._addError(el, `Unexpected tag`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { }\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    _addError(node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    }\n}\nfunction XmlToI18n_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XmlToI18n.prototype._errors;\n}\n//# sourceMappingURL=xtb.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/serializers/xtb.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerInjectable } from '../injectable';\nimport { getHtmlTagDefinition } from './html_tags';\nimport { DEFAULT_INTERPOLATION_CONFIG } from './interpolation_config';\nimport { Parser } from './parser';\nexport { ParseTreeResult, TreeError } from './parser';\nexport class HtmlParser extends Parser {\n    constructor() { super(getHtmlTagDefinition); }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        return super.parse(source, url, parseExpansionForms, interpolationConfig);\n    }\n}\nHtmlParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nHtmlParser.ctorParameters = () => [];\nfunction HtmlParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    HtmlParser.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    HtmlParser.ctorParameters;\n}\n//# sourceMappingURL=html_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/html_parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '@angular/core';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { I18nError } from './parse_util';\n/**\n * A container for translated messages\n */\nexport class TranslationBundle {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} locale\n     * @param {?=} digest\n     * @param {?=} mapperFactory\n     * @param {?=} missingTranslationStrategy\n     * @param {?=} console\n     */\n    constructor(_i18nNodesByMsgId = {}, locale, digest, mapperFactory, missingTranslationStrategy = MissingTranslationStrategy.Warning, console) {\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    static load(content, url, serializer, missingTranslationStrategy, console) {\n        const { locale, i18nNodesByMsgId } = serializer.load(content, url);\n        const /** @type {?} */ digestFn = (m) => serializer.digest(m);\n        const /** @type {?} */ mapperFactory = (m) => ((serializer.createNameMapper(m)));\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    get(srcMsg) {\n        const /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    has(srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; }\n}\nfunction TranslationBundle_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TranslationBundle.prototype._i18nToHtml;\n    /** @type {?} */\n    TranslationBundle.prototype._i18nNodesByMsgId;\n    /** @type {?} */\n    TranslationBundle.prototype.digest;\n    /** @type {?} */\n    TranslationBundle.prototype.mapperFactory;\n}\nclass I18nToHtmlVisitor {\n    /**\n     * @param {?=} _i18nNodesByMsgId\n     * @param {?=} _locale\n     * @param {?=} _digest\n     * @param {?=} _mapperFactory\n     * @param {?=} _missingTranslationStrategy\n     * @param {?=} _console\n     */\n    constructor(_i18nNodesByMsgId = {}, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    convert(srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        const /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        const /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        const /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: [...this._errors, ...html.errors],\n        };\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    visitText(text, context) { return text.value; }\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    visitContainer(container, context) {\n        return container.children.map(n => n.visit(this)).join('');\n    }\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcu(icu, context) {\n        const /** @type {?} */ cases = Object.keys(icu.cases).map(k => `${k} {${icu.cases[k].visit(this)}}`);\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        const /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return `{${exp}, ${icu.type}, ${cases.join(' ')}}`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitPlaceholder(ph, context) {\n        const /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, `Unknown placeholder \"${ph.name}\"`);\n        return '';\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, context) {\n        const /** @type {?} */ tag = `${ph.tag}`;\n        const /** @type {?} */ attrs = Object.keys(ph.attrs).map(name => `${name}=\"${ph.attrs[name]}\"`).join(' ');\n        if (ph.isVoid) {\n            return `<${tag} ${attrs}/>`;\n        }\n        const /** @type {?} */ children = ph.children.map((c) => c.visit(this)).join('');\n        return `<${tag} ${attrs}>${children}</${tag}>`;\n    }\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    }\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    _convertToText(srcMsg) {\n        const /** @type {?} */ id = this._digest(srcMsg);\n        const /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        let /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = (name) => mapper ? ((mapper.toInternalName(name))) : name;\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n                this._addError(srcMsg.nodes[0], `Missing translation for message \"${id}\"${ctx}`);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                const /** @type {?} */ ctx = this._locale ? ` for locale \"${this._locale}\"` : '';\n                this._console.warn(`Missing translation for message \"${id}\"${ctx}`);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = (name) => name;\n        }\n        const /** @type {?} */ text = nodes.map(node => node.visit(this)).join('');\n        const /** @type {?} */ context = ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    }\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    _addError(el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    }\n}\nfunction I18nToHtmlVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._srcMsg;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._contextStack;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._errors;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._mapper;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._i18nNodesByMsgId;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._locale;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._digest;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._mapperFactory;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._missingTranslationStrategy;\n    /** @type {?} */\n    I18nToHtmlVisitor.prototype._console;\n}\n//# sourceMappingURL=translation_bundle.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/translation_bundle.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { MissingTranslationStrategy } from '@angular/core';\nimport { DEFAULT_INTERPOLATION_CONFIG } from '../ml_parser/interpolation_config';\nimport { ParseTreeResult } from '../ml_parser/parser';\nimport { digest } from './digest';\nimport { mergeTranslations } from './extractor_merger';\nimport { Xliff } from './serializers/xliff';\nimport { Xliff2 } from './serializers/xliff2';\nimport { Xmb } from './serializers/xmb';\nimport { Xtb } from './serializers/xtb';\nimport { TranslationBundle } from './translation_bundle';\nexport class I18NHtmlParser {\n    /**\n     * @param {?} _htmlParser\n     * @param {?=} translations\n     * @param {?=} translationsFormat\n     * @param {?=} missingTranslation\n     * @param {?=} console\n     */\n    constructor(_htmlParser, translations, translationsFormat, missingTranslation = MissingTranslationStrategy.Warning, console) {\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            const serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    parse(source, url, parseExpansionForms = false, interpolationConfig = DEFAULT_INTERPOLATION_CONFIG) {\n        const /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    }\n}\nfunction I18NHtmlParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    I18NHtmlParser.prototype.getTagDefinition;\n    /** @type {?} */\n    I18NHtmlParser.prototype._translationBundle;\n    /** @type {?} */\n    I18NHtmlParser.prototype._htmlParser;\n}\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n//# sourceMappingURL=i18n_html_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/i18n_html_parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, ChangeDetectionStrategy, ChangeDetectorRef, ComponentFactory, ComponentFactoryResolver, ComponentRef, ElementRef, Injector, LOCALE_ID, NgModuleFactory, NgModuleRef, QueryList, Renderer, SecurityContext, TRANSLATIONS_FORMAT, TemplateRef, ViewContainerRef, ViewEncapsulation, ɵCodegenComponentFactoryResolver, ɵEMPTY_ARRAY, ɵEMPTY_MAP, ɵand, ɵccf, ɵcmf, ɵcrt, ɵdid, ɵeld, ɵinlineInterpolate, ɵinterpolate, ɵmod, ɵmpd, ɵncd, ɵnov, ɵpad, ɵpid, ɵpod, ɵppd, ɵprd, ɵqud, ɵregisterModuleFactory, ɵted, ɵunv, ɵvid } from '@angular/core';\nconst /** @type {?} */ CORE = '@angular/core';\nexport class Identifiers {\n}\nIdentifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n    name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n    moduleName: CORE,\n    runtime: ANALYZE_FOR_ENTRY_COMPONENTS\n};\nIdentifiers.ElementRef = { name: 'ElementRef', moduleName: CORE, runtime: ElementRef };\nIdentifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE, runtime: NgModuleRef };\nIdentifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE, runtime: ViewContainerRef };\nIdentifiers.ChangeDetectorRef = {\n    name: 'ChangeDetectorRef',\n    moduleName: CORE,\n    runtime: ChangeDetectorRef\n};\nIdentifiers.QueryList = { name: 'QueryList', moduleName: CORE, runtime: QueryList };\nIdentifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE, runtime: TemplateRef };\nIdentifiers.CodegenComponentFactoryResolver = {\n    name: 'ɵCodegenComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: ɵCodegenComponentFactoryResolver\n};\nIdentifiers.ComponentFactoryResolver = {\n    name: 'ComponentFactoryResolver',\n    moduleName: CORE,\n    runtime: ComponentFactoryResolver\n};\nIdentifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE, runtime: ComponentFactory };\nIdentifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE, runtime: ComponentRef };\nIdentifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE, runtime: NgModuleFactory };\nIdentifiers.createModuleFactory = {\n    name: 'ɵcmf',\n    moduleName: CORE,\n    runtime: ɵcmf,\n};\nIdentifiers.moduleDef = {\n    name: 'ɵmod',\n    moduleName: CORE,\n    runtime: ɵmod,\n};\nIdentifiers.moduleProviderDef = {\n    name: 'ɵmpd',\n    moduleName: CORE,\n    runtime: ɵmpd,\n};\nIdentifiers.RegisterModuleFactoryFn = {\n    name: 'ɵregisterModuleFactory',\n    moduleName: CORE,\n    runtime: ɵregisterModuleFactory,\n};\nIdentifiers.Injector = { name: 'Injector', moduleName: CORE, runtime: Injector };\nIdentifiers.ViewEncapsulation = {\n    name: 'ViewEncapsulation',\n    moduleName: CORE,\n    runtime: ViewEncapsulation\n};\nIdentifiers.ChangeDetectionStrategy = {\n    name: 'ChangeDetectionStrategy',\n    moduleName: CORE,\n    runtime: ChangeDetectionStrategy\n};\nIdentifiers.SecurityContext = {\n    name: 'SecurityContext',\n    moduleName: CORE,\n    runtime: SecurityContext,\n};\nIdentifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE, runtime: LOCALE_ID };\nIdentifiers.TRANSLATIONS_FORMAT = {\n    name: 'TRANSLATIONS_FORMAT',\n    moduleName: CORE,\n    runtime: TRANSLATIONS_FORMAT\n};\nIdentifiers.inlineInterpolate = {\n    name: 'ɵinlineInterpolate',\n    moduleName: CORE,\n    runtime: ɵinlineInterpolate\n};\nIdentifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE, runtime: ɵinterpolate };\nIdentifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE, runtime: ɵEMPTY_ARRAY };\nIdentifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE, runtime: ɵEMPTY_MAP };\nIdentifiers.Renderer = { name: 'Renderer', moduleName: CORE, runtime: Renderer };\nIdentifiers.viewDef = { name: 'ɵvid', moduleName: CORE, runtime: ɵvid };\nIdentifiers.elementDef = { name: 'ɵeld', moduleName: CORE, runtime: ɵeld };\nIdentifiers.anchorDef = { name: 'ɵand', moduleName: CORE, runtime: ɵand };\nIdentifiers.textDef = { name: 'ɵted', moduleName: CORE, runtime: ɵted };\nIdentifiers.directiveDef = { name: 'ɵdid', moduleName: CORE, runtime: ɵdid };\nIdentifiers.providerDef = { name: 'ɵprd', moduleName: CORE, runtime: ɵprd };\nIdentifiers.queryDef = { name: 'ɵqud', moduleName: CORE, runtime: ɵqud };\nIdentifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE, runtime: ɵpad };\nIdentifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE, runtime: ɵpod };\nIdentifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE, runtime: ɵppd };\nIdentifiers.pipeDef = { name: 'ɵpid', moduleName: CORE, runtime: ɵpid };\nIdentifiers.nodeValue = { name: 'ɵnov', moduleName: CORE, runtime: ɵnov };\nIdentifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE, runtime: ɵncd };\nIdentifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE, runtime: ɵunv };\nIdentifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE, runtime: ɵcrt };\nIdentifiers.RendererType2 = {\n    name: 'RendererType2',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.ViewDefinition = {\n    name: 'ɵViewDefinition',\n    moduleName: CORE,\n    // type only\n    runtime: null\n};\nIdentifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE, runtime: ɵccf };\nfunction Identifiers_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS;\n    /** @type {?} */\n    Identifiers.ElementRef;\n    /** @type {?} */\n    Identifiers.NgModuleRef;\n    /** @type {?} */\n    Identifiers.ViewContainerRef;\n    /** @type {?} */\n    Identifiers.ChangeDetectorRef;\n    /** @type {?} */\n    Identifiers.QueryList;\n    /** @type {?} */\n    Identifiers.TemplateRef;\n    /** @type {?} */\n    Identifiers.CodegenComponentFactoryResolver;\n    /** @type {?} */\n    Identifiers.ComponentFactoryResolver;\n    /** @type {?} */\n    Identifiers.ComponentFactory;\n    /** @type {?} */\n    Identifiers.ComponentRef;\n    /** @type {?} */\n    Identifiers.NgModuleFactory;\n    /** @type {?} */\n    Identifiers.createModuleFactory;\n    /** @type {?} */\n    Identifiers.moduleDef;\n    /** @type {?} */\n    Identifiers.moduleProviderDef;\n    /** @type {?} */\n    Identifiers.RegisterModuleFactoryFn;\n    /** @type {?} */\n    Identifiers.Injector;\n    /** @type {?} */\n    Identifiers.ViewEncapsulation;\n    /** @type {?} */\n    Identifiers.ChangeDetectionStrategy;\n    /** @type {?} */\n    Identifiers.SecurityContext;\n    /** @type {?} */\n    Identifiers.LOCALE_ID;\n    /** @type {?} */\n    Identifiers.TRANSLATIONS_FORMAT;\n    /** @type {?} */\n    Identifiers.inlineInterpolate;\n    /** @type {?} */\n    Identifiers.interpolate;\n    /** @type {?} */\n    Identifiers.EMPTY_ARRAY;\n    /** @type {?} */\n    Identifiers.EMPTY_MAP;\n    /** @type {?} */\n    Identifiers.Renderer;\n    /** @type {?} */\n    Identifiers.viewDef;\n    /** @type {?} */\n    Identifiers.elementDef;\n    /** @type {?} */\n    Identifiers.anchorDef;\n    /** @type {?} */\n    Identifiers.textDef;\n    /** @type {?} */\n    Identifiers.directiveDef;\n    /** @type {?} */\n    Identifiers.providerDef;\n    /** @type {?} */\n    Identifiers.queryDef;\n    /** @type {?} */\n    Identifiers.pureArrayDef;\n    /** @type {?} */\n    Identifiers.pureObjectDef;\n    /** @type {?} */\n    Identifiers.purePipeDef;\n    /** @type {?} */\n    Identifiers.pipeDef;\n    /** @type {?} */\n    Identifiers.nodeValue;\n    /** @type {?} */\n    Identifiers.ngContentDef;\n    /** @type {?} */\n    Identifiers.unwrapValue;\n    /** @type {?} */\n    Identifiers.createRendererType2;\n    /** @type {?} */\n    Identifiers.RendererType2;\n    /** @type {?} */\n    Identifiers.ViewDefinition;\n    /** @type {?} */\n    Identifiers.createComponentFactory;\n}\n/**\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nexport function createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n//# sourceMappingURL=identifiers.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/identifiers.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as html from './ast';\nimport { ParseTreeResult } from './parser';\nimport { NGSP_UNICODE } from './tags';\nexport const /** @type {?} */ PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nconst /** @type {?} */ SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nconst /** @type {?} */ WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nconst /** @type {?} */ NO_WS_REGEXP = new RegExp(`[^${WS_CHARS}]`);\nconst /** @type {?} */ WS_REPLACE_REGEXP = new RegExp(`[${WS_CHARS}]{2,}`, 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some((attr) => attr.name === PRESERVE_WS_ATTR_NAME);\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nexport function replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 4 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited post Angular 5\n * and might be changed to \"on\" by default.\n */\nclass WhitespaceVisitor {\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new html.Element(element.name, html.visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) {\n        const /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new html.Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return comment; }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return expansion; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return expansionCase; }\n}\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nexport function removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(html.visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n//# sourceMappingURL=html_whitespaces.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/html_whitespaces.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ParseError } from '../parse_util';\nimport * as html from './ast';\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nconst /** @type {?} */ PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nexport function expandNodes(nodes) {\n    const /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(html.visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nexport class ExpansionResult {\n    /**\n     * @param {?} nodes\n     * @param {?} expanded\n     * @param {?} errors\n     */\n    constructor(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n}\nfunction ExpansionResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpansionResult.prototype.nodes;\n    /** @type {?} */\n    ExpansionResult.prototype.expanded;\n    /** @type {?} */\n    ExpansionResult.prototype.errors;\n}\nexport class ExpansionError extends ParseError {\n    /**\n     * @param {?} span\n     * @param {?} errorMsg\n     */\n    constructor(span, errorMsg) { super(span, errorMsg); }\n}\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nclass _Expander {\n    constructor() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(element, context) {\n        return new html.Element(element.name, element.attrs, html.visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) { return attribute; }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(text, context) { return text; }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return comment; }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    }\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(icuCase, context) {\n        throw new Error('Should not be reached');\n    }\n}\nfunction _Expander_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _Expander.prototype.isExpanded;\n    /** @type {?} */\n    _Expander.prototype.errors;\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    const /** @type {?} */ children = ast.cases.map(c => {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n        }\n        const /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push(...expansionResult.errors);\n        return new html.Element(`ng-template`, [new html.Attribute('ngPluralCase', `${c.value}`, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    const /** @type {?} */ switchAttr = new html.Attribute('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    const /** @type {?} */ children = ast.cases.map(c => {\n        const /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push(...expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new html.Element(`ng-template`, [new html.Attribute('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new html.Element(`ng-template`, [new html.Attribute('ngSwitchCase', `${c.value}`, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    const /** @type {?} */ switchAttr = new html.Attribute('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new html.Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n//# sourceMappingURL=icu_ast_expander.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ml_parser/icu_ast_expander.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { tokenName, tokenReference } from './compile_metadata';\nimport { Identifiers, createTokenForExternalReference } from './identifiers';\nimport { ParseError } from './parse_util';\nimport { ProviderAst, ProviderAstType } from './template_parser/template_ast';\nexport class ProviderError extends ParseError {\n    /**\n     * @param {?} message\n     * @param {?} span\n     */\n    constructor(message, span) { super(span, message); }\n}\nexport class ProviderViewContext {\n    /**\n     * @param {?} reflector\n     * @param {?} component\n     */\n    constructor(reflector, component) {\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach((provider) => {\n            if (this.viewProviders.get(tokenReference(provider.token)) == null) {\n                this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n}\nfunction ProviderViewContext_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ProviderViewContext.prototype.viewQueries;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ProviderViewContext.prototype.viewProviders;\n    /** @type {?} */\n    ProviderViewContext.prototype.errors;\n    /** @type {?} */\n    ProviderViewContext.prototype.reflector;\n    /** @type {?} */\n    ProviderViewContext.prototype.component;\n}\nexport class ProviderElementContext {\n    /**\n     * @param {?} viewContext\n     * @param {?} _parent\n     * @param {?} _isViewRoot\n     * @param {?} _directiveAsts\n     * @param {?} attrs\n     * @param {?} refs\n     * @param {?} isTemplate\n     * @param {?} contentQueryStartId\n     * @param {?} _sourceSpan\n     */\n    constructor(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._hasViewContainer = false;\n        this._queriedTokens = new Map();\n        this._attrs = {};\n        attrs.forEach((attrAst) => this._attrs[attrAst.name] = attrAst.value);\n        const directivesMeta = _directiveAsts.map(directiveAst => directiveAst.directive);\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._addQueryReadsTo(provider.token, provider.token, this._queriedTokens);\n        });\n        if (isTemplate) {\n            const templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach((refAst) => {\n            let defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(this.viewContext.reflector, Identifiers.ElementRef);\n            this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this._hasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            const eager = provider.eager || this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    afterElement() {\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    get transformProviders() {\n        // Note: Maps keep their insertion order.\n        const /** @type {?} */ lazyProviders = [];\n        const /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(provider => {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    }\n    /**\n     * @return {?}\n     */\n    get transformedDirectiveAsts() {\n        const /** @type {?} */ sortedProviderTypes = this.transformProviders.map(provider => provider.token.identifier);\n        const /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n        sortedDirectives.sort((dir1, dir2) => sortedProviderTypes.indexOf(dir1.directive.type) -\n            sortedProviderTypes.indexOf(dir2.directive.type));\n        return sortedDirectives;\n    }\n    /**\n     * @return {?}\n     */\n    get transformedHasViewContainer() { return this._hasViewContainer; }\n    /**\n     * @return {?}\n     */\n    get queryMatches() {\n        const /** @type {?} */ allMatches = [];\n        this._queriedTokens.forEach((matches) => { allMatches.push(...matches); });\n        return allMatches;\n    }\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    _addQueryReadsTo(token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach((query) => {\n            const /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            const /** @type {?} */ tokenRef = tokenReference(queryValue);\n            let /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _getQueriesFor(token) {\n        const /** @type {?} */ result = [];\n        let /** @type {?} */ currentEl = this;\n        let /** @type {?} */ distance = 0;\n        let /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push(...queries.filter((query) => query.meta.descendants || distance <= 1));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push(...queries);\n        }\n        return result;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    _getOrCreateLocalProvider(requestingProviderType, token, eager) {\n        const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(`Cannot instantiate cyclic dependency! ${tokenName(token)}`, this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n            let /** @type {?} */ transformedUseValue = provider.useValue;\n            let /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            let /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                const /** @type {?} */ existingDiDep = ((this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map((dep) => ((this._getDependency(resolvedProvider.providerType, dep, eager))));\n            }\n            else if (provider.useClass) {\n                const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map((dep) => ((this._getDependency(resolvedProvider.providerType, dep, eager))));\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    _getLocalDependency(requestingProviderType, dep, eager = false) {\n        if (dep.isAttribute) {\n            const /** @type {?} */ attrValue = this._attrs[((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    this._hasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    _getDependency(requestingProviderType, dep, eager = false) {\n        let /** @type {?} */ currElement = this;\n        let /** @type {?} */ currEager = eager;\n        let /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                const /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(`No provider for ${tokenName(/** @type {?} */ ((dep.token)))}`, this._sourceSpan));\n        }\n        return result;\n    }\n}\nfunction ProviderElementContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ProviderElementContext.prototype._contentQueries;\n    /** @type {?} */\n    ProviderElementContext.prototype._transformedProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._seenProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._allProviders;\n    /** @type {?} */\n    ProviderElementContext.prototype._attrs;\n    /** @type {?} */\n    ProviderElementContext.prototype._hasViewContainer;\n    /** @type {?} */\n    ProviderElementContext.prototype._queriedTokens;\n    /** @type {?} */\n    ProviderElementContext.prototype.viewContext;\n    /** @type {?} */\n    ProviderElementContext.prototype._parent;\n    /** @type {?} */\n    ProviderElementContext.prototype._isViewRoot;\n    /** @type {?} */\n    ProviderElementContext.prototype._directiveAsts;\n    /** @type {?} */\n    ProviderElementContext.prototype._sourceSpan;\n}\nexport class NgModuleProviderAnalyzer {\n    /**\n     * @param {?} reflector\n     * @param {?} ngModule\n     * @param {?} extraProviders\n     * @param {?} sourceSpan\n     */\n    constructor(reflector, ngModule, extraProviders, sourceSpan) {\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach((ngModuleType) => {\n            const ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, this._errors, this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(entry => entry.provider).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    parse() {\n        Array.from(this._allProviders.values()).forEach((provider) => {\n            this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            const /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(`Provider parse errors:\\n${errorString}`);\n        }\n        // Note: Maps keep their insertion order.\n        const /** @type {?} */ lazyProviders = [];\n        const /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(provider => {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    }\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    _getOrCreateLocalProvider(token, eager) {\n        const /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        let /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(`Cannot instantiate cyclic dependency! ${tokenName(token)}`, resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        const /** @type {?} */ transformedProviders = resolvedProvider.providers.map((provider) => {\n            let /** @type {?} */ transformedUseValue = provider.useValue;\n            let /** @type {?} */ transformedUseExisting = ((provider.useExisting));\n            let /** @type {?} */ transformedDeps = ((undefined));\n            if (provider.useExisting != null) {\n                const /** @type {?} */ existingDiDep = this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                const /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n            }\n            else if (provider.useClass) {\n                const /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map((dep) => this._getDependency(dep, eager, resolvedProvider.sourceSpan));\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    }\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    _getDependency(dep, eager = false, requestorSourceSpan) {\n        let /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        let /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(`No provider for ${tokenName(/** @type {?} */ ((dep.token)))}`, requestorSourceSpan));\n            }\n        }\n        return result;\n    }\n}\nfunction NgModuleProviderAnalyzer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._transformedProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._seenProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._allProviders;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype._errors;\n    /** @type {?} */\n    NgModuleProviderAnalyzer.prototype.reflector;\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, { useExisting, useValue, deps }) {\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, { eager, providers }) {\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    const /** @type {?} */ providersByToken = new Map();\n    directives.forEach((directive) => {\n        const /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    const /** @type {?} */ directivesWithComponentFirst = directives.filter(dir => dir.isComponent).concat(directives.filter(dir => !dir.isComponent));\n    directivesWithComponentFirst.forEach((directive) => {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach((provider) => {\n        let /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(`Mixing multi and non multi provider is not possible for token ${tokenName(resolvedProvider.token)}`, sourceSpan));\n        }\n        if (!resolvedProvider) {\n            const /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                ((provider.token.identifier)).lifecycleHooks ?\n                ((provider.token.identifier)).lifecycleHooks :\n                [];\n            const /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    let /** @type {?} */ viewQueryId = 1;\n    const /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach((query) => _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }));\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    let /** @type {?} */ contentQueryId = contentQueryStartId;\n    const /** @type {?} */ contentQueries = new Map();\n    directives.forEach((directive, directiveIndex) => {\n        if (directive.queries) {\n            directive.queries.forEach((query) => _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }));\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach((token) => {\n        let /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n//# sourceMappingURL=provider_analyzer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/provider_analyzer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nexport class ElementSchemaRegistry {\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasProperty(tagName, propName, schemaMetas) { }\n    /**\n     * @abstract\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasElement(tagName, schemaMetas) { }\n    /**\n     * @abstract\n     * @param {?} elementName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    securityContext(elementName, propName, isAttribute) { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    allKnownElementNames() { }\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    getMappedPropName(propName) { }\n    /**\n     * @abstract\n     * @return {?}\n     */\n    getDefaultComponentElementName() { }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    validateProperty(name) { }\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    validateAttribute(name) { }\n    /**\n     * @abstract\n     * @param {?} propName\n     * @return {?}\n     */\n    normalizeAnimationStyleProperty(propName) { }\n    /**\n     * @abstract\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    normalizeAnimationStyleValue(camelCaseProp, userProvidedProp, val) { }\n}\n//# sourceMappingURL=element_schema_registry.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/schema/element_schema_registry.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport class StyleWithImports {\n    /**\n     * @param {?} style\n     * @param {?} styleUrls\n     */\n    constructor(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n}\nfunction StyleWithImports_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StyleWithImports.prototype.style;\n    /** @type {?} */\n    StyleWithImports.prototype.styleUrls;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nexport function isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    const /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nexport function extractStyleUrls(resolver, baseUrl, cssText) {\n    const /** @type {?} */ foundUrls = [];\n    const /** @type {?} */ modifiedCssText = cssText.replace(CSS_COMMENT_REGEXP, '').replace(CSS_IMPORT_REGEXP, (...m) => {\n        const /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nconst /** @type {?} */ CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nconst /** @type {?} */ CSS_COMMENT_REGEXP = /\\/\\*[\\s\\S]+?\\*\\//g;\nconst /** @type {?} */ URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n//# sourceMappingURL=style_url_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/style_url_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '@angular/core';\nimport { EmptyExpr, RecursiveAstVisitor } from '../expression_parser/ast';\nimport { mergeNsAndName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { CssSelector } from '../selector';\nimport { splitAtColon, splitAtPeriod } from '../util';\nimport { BoundElementPropertyAst, BoundEventAst, PropertyBindingType, VariableAst } from './template_ast';\nconst /** @type {?} */ PROPERTY_PARTS_SEPARATOR = '.';\nconst /** @type {?} */ ATTRIBUTE_PREFIX = 'attr';\nconst /** @type {?} */ CLASS_PREFIX = 'class';\nconst /** @type {?} */ STYLE_PREFIX = 'style';\nconst /** @type {?} */ ANIMATE_PROP_PREFIX = 'animate-';\nexport let BoundPropertyType = {};\nBoundPropertyType.DEFAULT = 0;\nBoundPropertyType.LITERAL_ATTR = 1;\nBoundPropertyType.ANIMATION = 2;\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nexport class BoundProperty {\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} type\n     * @param {?} sourceSpan\n     */\n    constructor(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @return {?}\n     */\n    get isLiteral() { return this.type === BoundPropertyType.LITERAL_ATTR; }\n    /**\n     * @return {?}\n     */\n    get isAnimation() { return this.type === BoundPropertyType.ANIMATION; }\n}\nfunction BoundProperty_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BoundProperty.prototype.name;\n    /** @type {?} */\n    BoundProperty.prototype.expression;\n    /** @type {?} */\n    BoundProperty.prototype.type;\n    /** @type {?} */\n    BoundProperty.prototype.sourceSpan;\n}\n/**\n * Parses bindings in templates and in the directive host area.\n */\nexport class BindingParser {\n    /**\n     * @param {?} _exprParser\n     * @param {?} _interpolationConfig\n     * @param {?} _schemaRegistry\n     * @param {?} pipes\n     * @param {?} _targetErrors\n     */\n    constructor(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(pipe => this.pipesByName.set(pipe.name, pipe));\n    }\n    /**\n     * @return {?}\n     */\n    getUsedPipes() { return Array.from(this._usedPipes.values()); }\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    createDirectiveHostPropertyAsts(dirMeta, elementSelector, sourceSpan) {\n        if (dirMeta.hostProperties) {\n            const /** @type {?} */ boundProps = [];\n            Object.keys(dirMeta.hostProperties).forEach(propName => {\n                const /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps);\n                }\n                else {\n                    this._reportError(`Value of the host property binding \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`, sourceSpan);\n                }\n            });\n            return boundProps.map((prop) => this.createElementPropertyAst(elementSelector, prop));\n        }\n        return null;\n    }\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    createDirectiveHostEventAsts(dirMeta, sourceSpan) {\n        if (dirMeta.hostListeners) {\n            const /** @type {?} */ targetEventAsts = [];\n            Object.keys(dirMeta.hostListeners).forEach(propName => {\n                const /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts);\n                }\n                else {\n                    this._reportError(`Value of the host listener \"${propName}\" needs to be a string representing an expression but got \"${expression}\" (${typeof expression})`, sourceSpan);\n                }\n            });\n            return targetEventAsts;\n        }\n        return null;\n    }\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    parseInterpolation(value, sourceSpan) {\n        const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            const /** @type {?} */ ast = ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    parseInlineTemplateBinding(prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        const /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n            const /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    }\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseTemplateBindings(prefixToken, value, sourceSpan) {\n        const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            const /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach((binding) => {\n                if (binding.expression) {\n                    this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach((warning) => { this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return [];\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parseLiteralAttr(name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(`Assigning animation triggers via @prop=\"exp\" attributes with an expression is invalid.` +\n                    ` Use property bindings (e.g. [@prop]=\"exp\") or use an attribute without a value (e.g. @prop) instead.`, sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parsePropertyBinding(name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        let /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    parsePropertyInterpolation(name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        const /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    _parsePropertyAst(name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    _parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        const /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    }\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseBinding(value, isHostBinding, sourceSpan) {\n        const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            const /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    createElementPropertyAst(elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        let /** @type {?} */ unit = null;\n        let /** @type {?} */ bindingType = ((undefined));\n        let /** @type {?} */ boundPropertyName = null;\n        const /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        let /** @type {?} */ securityContexts = ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                const /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    const /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    const /** @type {?} */ name = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseAnimationEvent(name, expression, sourceSpan, targetEvents) {\n        const /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        const /** @type {?} */ eventName = matches[0];\n        const /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    const /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(`The provided animation output phase value \"${phase}\" for \"@${eventName}\" is not supported (use start or done)`, sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(`The animation trigger output event (@${eventName}) is missing its phase value name (start or done are currently supported)`, sourceSpan);\n        }\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        const [target, eventName] = splitAtColon(name, [/** @type {?} */ ((null)), name]);\n        const /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    }\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _parseAction(value, sourceSpan) {\n        const /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            const /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(`Empty expressions are not allowed`, sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (e) {\n            this._reportError(`${e}`, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    }\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    _reportError(message, sourceSpan, level = ParseErrorLevel.ERROR) {\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    }\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _reportExpressionParserErrors(errors, sourceSpan) {\n        for (const /** @type {?} */ error of errors) {\n            this._reportError(error.message, sourceSpan);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _checkPipes(ast, sourceSpan) {\n        if (ast) {\n            const /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach((ast, pipeName) => {\n                const /** @type {?} */ pipeMeta = this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    this._reportError(`The pipe '${pipeName}' could not be found`, new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    }\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    _validatePropertyOrAttributeName(propName, sourceSpan, isAttr) {\n        const /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    }\n}\nfunction BindingParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BindingParser.prototype.pipesByName;\n    /** @type {?} */\n    BindingParser.prototype._usedPipes;\n    /** @type {?} */\n    BindingParser.prototype._exprParser;\n    /** @type {?} */\n    BindingParser.prototype._interpolationConfig;\n    /** @type {?} */\n    BindingParser.prototype._schemaRegistry;\n    /** @type {?} */\n    BindingParser.prototype._targetErrors;\n}\nexport class PipeCollector extends RecursiveAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.pipes = new Map();\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    }\n}\nfunction PipeCollector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PipeCollector.prototype.pipes;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nexport function calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    const /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach((selector) => {\n        const /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        const /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(selector => selector.isElementSelector())\n            .map((selector) => selector.element));\n        const /** @type {?} */ possibleElementNames = elementNames.filter(elementName => !notElementNames.has(elementName));\n        ctxs.push(...possibleElementNames.map(elementName => registry.securityContext(elementName, propName, isAttribute)));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n//# sourceMappingURL=binding_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/template_parser/binding_parser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isNgContent } from '../ml_parser/tags';\nconst /** @type {?} */ NG_CONTENT_SELECT_ATTR = 'select';\nconst /** @type {?} */ LINK_ELEMENT = 'link';\nconst /** @type {?} */ LINK_STYLE_REL_ATTR = 'rel';\nconst /** @type {?} */ LINK_STYLE_HREF_ATTR = 'href';\nconst /** @type {?} */ LINK_STYLE_REL_VALUE = 'stylesheet';\nconst /** @type {?} */ STYLE_ELEMENT = 'style';\nconst /** @type {?} */ SCRIPT_ELEMENT = 'script';\nconst /** @type {?} */ NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nconst /** @type {?} */ NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function preparseElement(ast) {\n    let /** @type {?} */ selectAttr = ((null));\n    let /** @type {?} */ hrefAttr = ((null));\n    let /** @type {?} */ relAttr = ((null));\n    let /** @type {?} */ nonBindable = false;\n    let /** @type {?} */ projectAs = ((null));\n    ast.attrs.forEach(attr => {\n        const /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    const /** @type {?} */ nodeName = ast.name.toLowerCase();\n    let /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\nexport let PreparsedElementType = {};\nPreparsedElementType.NG_CONTENT = 0;\nPreparsedElementType.STYLE = 1;\nPreparsedElementType.STYLESHEET = 2;\nPreparsedElementType.SCRIPT = 3;\nPreparsedElementType.OTHER = 4;\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nexport class PreparsedElement {\n    /**\n     * @param {?} type\n     * @param {?} selectAttr\n     * @param {?} hrefAttr\n     * @param {?} nonBindable\n     * @param {?} projectAs\n     */\n    constructor(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n}\nfunction PreparsedElement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PreparsedElement.prototype.type;\n    /** @type {?} */\n    PreparsedElement.prototype.selectAttr;\n    /** @type {?} */\n    PreparsedElement.prototype.hrefAttr;\n    /** @type {?} */\n    PreparsedElement.prototype.nonBindable;\n    /** @type {?} */\n    PreparsedElement.prototype.projectAs;\n}\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n//# sourceMappingURL=template_preparser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/template_parser/template_preparser.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, InjectionToken, Optional, ɵConsole as Console } from '@angular/core';\nimport { identifierName } from '../compile_metadata';\nimport { CompileReflector } from '../compile_reflector';\nimport { CompilerConfig } from '../config';\nimport { ASTWithSource, EmptyExpr } from '../expression_parser/ast';\nimport { Parser } from '../expression_parser/parser';\nimport { I18NHtmlParser } from '../i18n/i18n_html_parser';\nimport { Identifiers, createTokenForExternalReference, createTokenForReference } from '../identifiers';\nimport { CompilerInjectable } from '../injectable';\nimport * as html from '../ml_parser/ast';\nimport { ParseTreeResult } from '../ml_parser/html_parser';\nimport { removeWhitespaces, replaceNgsp } from '../ml_parser/html_whitespaces';\nimport { expandNodes } from '../ml_parser/icu_ast_expander';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { isNgTemplate, splitNsName } from '../ml_parser/tags';\nimport { ParseError, ParseErrorLevel, ParseSourceSpan } from '../parse_util';\nimport { ProviderElementContext, ProviderViewContext } from '../provider_analyzer';\nimport { ElementSchemaRegistry } from '../schema/element_schema_registry';\nimport { CssSelector, SelectorMatcher } from '../selector';\nimport { isStyleUrlResolvable } from '../style_url_resolver';\nimport { syntaxError } from '../util';\nimport { BindingParser } from './binding_parser';\nimport { AttrAst, BoundDirectivePropertyAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, ReferenceAst, TextAst, VariableAst, templateVisitAll } from './template_ast';\nimport { PreparsedElementType, preparseElement } from './template_preparser';\nconst /** @type {?} */ BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nconst /** @type {?} */ KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nconst /** @type {?} */ KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nconst /** @type {?} */ KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nconst /** @type {?} */ KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nconst /** @type {?} */ KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nconst /** @type {?} */ KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nconst /** @type {?} */ IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nconst /** @type {?} */ IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nconst /** @type {?} */ IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nconst /** @type {?} */ IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nconst /** @type {?} */ TEMPLATE_ATTR = 'template';\nconst /** @type {?} */ TEMPLATE_ATTR_PREFIX = '*';\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nconst /** @type {?} */ TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nconst /** @type {?} */ TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nlet /** @type {?} */ warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return (error) => {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\n/**\n * Provides an array of {\\@link TemplateAstVisitor}s which will be used to transform\n * parsed templates before compilation is invoked, allowing custom expression syntax\n * and other advanced transformations.\n *\n * This is currently an internal-only feature and not meant for general use.\n */\nexport const TEMPLATE_TRANSFORMS = new InjectionToken('TemplateTransforms');\nexport class TemplateParseError extends ParseError {\n    /**\n     * @param {?} message\n     * @param {?} span\n     * @param {?} level\n     */\n    constructor(message, span, level) {\n        super(span, message, level);\n    }\n}\nexport class TemplateParseResult {\n    /**\n     * @param {?=} templateAst\n     * @param {?=} usedPipes\n     * @param {?=} errors\n     */\n    constructor(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n}\nfunction TemplateParseResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateParseResult.prototype.templateAst;\n    /** @type {?} */\n    TemplateParseResult.prototype.usedPipes;\n    /** @type {?} */\n    TemplateParseResult.prototype.errors;\n}\nexport class TemplateParser {\n    /**\n     * @param {?} _config\n     * @param {?} _reflector\n     * @param {?} _exprParser\n     * @param {?} _schemaRegistry\n     * @param {?} _htmlParser\n     * @param {?} _console\n     * @param {?} transforms\n     */\n    constructor(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    parse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        const /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        const /** @type {?} */ warnings = ((result.errors)).filter(error => error.level === ParseErrorLevel.WARNING)\n            .filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        const /** @type {?} */ errors = ((result.errors)).filter(error => error.level === ParseErrorLevel.ERROR);\n        if (warnings.length > 0) {\n            this._console.warn(`Template parse warnings:\\n${warnings.join('\\n')}`);\n        }\n        if (errors.length > 0) {\n            const /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(`Template parse errors:\\n${errorString}`, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        let /** @type {?} */ htmlParseResult = ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component));\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    }\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    tryParseHtml(htmlAstWithErrors, component, directives, pipes, schemas) {\n        let /** @type {?} */ result;\n        const /** @type {?} */ errors = htmlAstWithErrors.errors;\n        const /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            const /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            const /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            const /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            let /** @type {?} */ interpolationConfig = ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            const /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            const /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = html.visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push(...providerViewContext.errors);\n            usedPipes.push(...bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach((transform) => { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    }\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    expandHtml(htmlAstWithErrors, forced = false) {\n        const /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            const /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push(...expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    getInterpolationConfig(component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    }\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    _assertNoReferenceDuplicationOnTemplate(result, errors) {\n        const /** @type {?} */ existingReferences = [];\n        result.filter(element => !!((element)).references)\n            .forEach(element => ((element)).references.forEach((reference) => {\n            const /** @type {?} */ name = reference.name;\n            if (existingReferences.indexOf(name) < 0) {\n                existingReferences.push(name);\n            }\n            else {\n                const /** @type {?} */ error = new TemplateParseError(`Reference \"#${name}\" is defined several times`, reference.sourceSpan, ParseErrorLevel.ERROR);\n                errors.push(error);\n            }\n        }));\n    }\n}\nTemplateParser.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nTemplateParser.ctorParameters = () => [\n    { type: CompilerConfig, },\n    { type: CompileReflector, },\n    { type: Parser, },\n    { type: ElementSchemaRegistry, },\n    { type: I18NHtmlParser, },\n    { type: Console, },\n    { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [TEMPLATE_TRANSFORMS,] },] },\n];\nfunction TemplateParser_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateParser.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    TemplateParser.ctorParameters;\n    /** @type {?} */\n    TemplateParser.prototype._config;\n    /** @type {?} */\n    TemplateParser.prototype._reflector;\n    /** @type {?} */\n    TemplateParser.prototype._exprParser;\n    /** @type {?} */\n    TemplateParser.prototype._schemaRegistry;\n    /** @type {?} */\n    TemplateParser.prototype._htmlParser;\n    /** @type {?} */\n    TemplateParser.prototype._console;\n    /** @type {?} */\n    TemplateParser.prototype.transforms;\n}\nclass TemplateParseVisitor {\n    /**\n     * @param {?} reflector\n     * @param {?} config\n     * @param {?} providerViewContext\n     * @param {?} directives\n     * @param {?} _bindingParser\n     * @param {?} _schemaRegistry\n     * @param {?} _schemas\n     * @param {?} _targetErrors\n     */\n    constructor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach((directive, index) => {\n            const selector = CssSelector.parse(directive.selector);\n            this.selectorMatcher.addSelectables(selector, directive);\n            this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return null; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return null; }\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    visitText(text, parent) {\n        const /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        const /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        const /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    visitElement(element, parent) {\n        const /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        const /** @type {?} */ nodeName = element.name;\n        const /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        const /** @type {?} */ matchableAttrs = [];\n        const /** @type {?} */ elementOrDirectiveProps = [];\n        const /** @type {?} */ elementOrDirectiveRefs = [];\n        const /** @type {?} */ elementVars = [];\n        const /** @type {?} */ events = [];\n        const /** @type {?} */ templateElementOrDirectiveProps = [];\n        const /** @type {?} */ templateMatchableAttrs = [];\n        const /** @type {?} */ templateElementVars = [];\n        let /** @type {?} */ hasInlineTemplates = false;\n        const /** @type {?} */ attrs = [];\n        const /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, (m, span) => this._reportError(m, span, ParseErrorLevel.WARNING));\n        element.attrs.forEach(attr => {\n            const /** @type {?} */ hasBinding = this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            let /** @type {?} */ templateBindingsSource;\n            let /** @type {?} */ prefixToken;\n            let /** @type {?} */ normalizedName = this._normalizeAttributeName(attr.name);\n            if (this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            const /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    this._reportError(`Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *`, attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        const /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        const { directives: directiveMetas, matchElement } = this._parseDirectives(this.selectorMatcher, elementCssSelector);\n        const /** @type {?} */ references = [];\n        const /** @type {?} */ boundDirectivePropNames = new Set();\n        const /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        const /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        const /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        const /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        const /** @type {?} */ children = html.visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        const /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        const /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(projectionSelector)));\n        let /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(`<ng-content> element cannot have content.`, /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            const /** @type {?} */ ngContentIndex = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            const /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            const /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            const { directives: templateDirectiveMetas } = this._parseDirectives(this.selectorMatcher, templateSelector);\n            const /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            const /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            const /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            const /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    _parseAttr(isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        const /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        const /** @type {?} */ value = attr.value;\n        const /** @type {?} */ srcSpan = attr.sourceSpan;\n        const /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        let /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(`\"let-\" is only supported on template elements.`, srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                const /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    }\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _normalizeAttributeName(attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    _parseVariable(identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(`\"-\" is not allowed in variable names`, sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    _parseReference(identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(`\"-\" is not allowed in reference names`, sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    }\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    _parseAssignmentEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(`${name}Change`, `${expression}=$event`, sourceSpan, targetMatchableAttrs, targetEvents);\n    }\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    _parseDirectives(selectorMatcher, elementCssSelector) {\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        const /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        let /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, (selector, directive) => {\n            directives[((this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(dir => !!dir),\n            matchElement,\n        };\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    _createDirectiveAsts(isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        const /** @type {?} */ matchedReferences = new Set();\n        let /** @type {?} */ component = ((null));\n        const /** @type {?} */ directiveAsts = directives.map((directive) => {\n            const /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, `Directive ${identifierName(directive.type)}`);\n            if (directive.isComponent) {\n                component = directive;\n            }\n            const /** @type {?} */ directiveProperties = [];\n            let /** @type {?} */ hostProperties = ((this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = this._checkPropertiesInSchema(elementName, hostProperties);\n            const /** @type {?} */ hostEvents = ((this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach((elOrDirRef) => {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            const /** @type {?} */ contentQueryStartId = this.contentQueryStartId;\n            this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach((elOrDirRef) => {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    this._reportError(`There is no directive with \"exportAs\" set to \"${elOrDirRef.value}\"`, elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                let /** @type {?} */ refToken = ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    }\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    _createDirectivePropertyAsts(directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            const /** @type {?} */ boundPropsByName = new Map();\n            boundProps.forEach(boundProp => {\n                const /** @type {?} */ prevValue = boundPropsByName.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(dirProp => {\n                const /** @type {?} */ elProp = directiveProperties[dirProp];\n                const /** @type {?} */ boundProp = boundPropsByName.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    _createElementPropertyAsts(elementName, props, boundDirectivePropNames) {\n        const /** @type {?} */ boundElementProps = [];\n        props.forEach((prop) => {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _findComponentDirectives(directives) {\n        return directives.filter(directive => directive.directive.isComponent);\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _findComponentDirectiveNames(directives) {\n        return this._findComponentDirectives(directives)\n            .map(directive => ((identifierName(directive.directive.type))));\n    }\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _assertOnlyOneComponent(directives, sourceSpan) {\n        const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(`More than one component matched on this element.\\n` +\n                `Make sure that only one component's selector can match a given element.\\n` +\n                `Conflicting components: ${componentTypeNames.join(',')}`, sourceSpan);\n        }\n    }\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    _assertElementExists(matchElement, element) {\n        const /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            let /** @type {?} */ errorMsg = `'${elName}' is not a known element:\\n`;\n            errorMsg +=\n                `1. If '${elName}' is an Angular component, then verify that it is part of this module.\\n`;\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    `2. If '${elName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.`;\n            }\n            else {\n                errorMsg +=\n                    `2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    }\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _assertNoComponentsNorElementBindingsOnTemplate(directives, elementProps, sourceSpan) {\n        const /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(`Components on an embedded template: ${componentTypeNames.join(',')}`, sourceSpan);\n        }\n        elementProps.forEach(prop => {\n            this._reportError(`Property binding ${prop.name} not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`, sourceSpan);\n        });\n    }\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    _assertAllEventsPublishedByDirectives(directives, events) {\n        const /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(directive => {\n            Object.keys(directive.directive.outputs).forEach(k => {\n                const /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(event => {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                this._reportError(`Event binding ${event.fullName} not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \"@NgModule.declarations\".`, event.sourceSpan);\n            }\n        });\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    _checkPropertiesInSchema(elementName, boundProps) {\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter((boundProp) => {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !this._schemaRegistry.hasProperty(elementName, boundProp.name, this._schemas)) {\n                let /** @type {?} */ errorMsg = `Can't bind to '${boundProp.name}' since it isn't a known property of '${elementName}'.`;\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        `\\n1. If '${boundProp.name}' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.` +\n                            `\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        `\\n1. If '${elementName}' is an Angular component and it has '${boundProp.name}' input, then verify that it is part of this module.` +\n                            `\\n2. If '${elementName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.` +\n                            `\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.`;\n                }\n                this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    }\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    _reportError(message, sourceSpan, level = ParseErrorLevel.ERROR) {\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    }\n}\nfunction TemplateParseVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplateParseVisitor.prototype.selectorMatcher;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.directivesIndex;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.ngContentCount;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.contentQueryStartId;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.reflector;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.config;\n    /** @type {?} */\n    TemplateParseVisitor.prototype.providerViewContext;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._bindingParser;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._schemaRegistry;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._schemas;\n    /** @type {?} */\n    TemplateParseVisitor.prototype._targetErrors;\n}\nclass NonBindableVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    visitElement(ast, parent) {\n        const /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        const /** @type {?} */ attrNameAndValues = ast.attrs.map((attr) => [attr.name, attr.value]);\n        const /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        const /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        const /** @type {?} */ children = html.visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, html.visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    }\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(comment, context) { return null; }\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    }\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    visitText(text, parent) {\n        const /** @type {?} */ ngContentIndex = ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(expansion, context) { return expansion; }\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(expansionCase, context) { return expansionCase; }\n}\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nclass ElementOrDirectiveRef {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     */\n    constructor(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    isReferenceToDirective(directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    }\n}\nfunction ElementOrDirectiveRef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.name;\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.value;\n    /** @type {?} */\n    ElementOrDirectiveRef.prototype.sourceSpan;\n}\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(e => e.trim()) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nclass ElementContext {\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} _ngContentIndexMatcher\n     * @param {?} _wildcardNgContentIndex\n     * @param {?} providerContext\n     */\n    constructor(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    static create(isTemplateElement, directives, providerContext) {\n        const /** @type {?} */ matcher = new SelectorMatcher();\n        let /** @type {?} */ wildcardNgContentIndex = ((null));\n        const /** @type {?} */ component = directives.find(directive => directive.directive.isComponent);\n        if (component) {\n            const /** @type {?} */ ngContentSelectors = ((component.directive.template)).ngContentSelectors;\n            for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                const /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    findNgContentIndex(selector) {\n        const /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, (selector, ngContentIndex) => { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    }\n}\nfunction ElementContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ElementContext.prototype.isTemplateElement;\n    /** @type {?} */\n    ElementContext.prototype._ngContentIndexMatcher;\n    /** @type {?} */\n    ElementContext.prototype._wildcardNgContentIndex;\n    /** @type {?} */\n    ElementContext.prototype.providerContext;\n}\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(elementName, attributes) {\n    const /** @type {?} */ cssSelector = new CssSelector();\n    const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n        const /** @type {?} */ attrName = attributes[i][0];\n        const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        const /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            const /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(className => cssSelector.addClassName(className));\n        }\n    }\n    return cssSelector;\n}\nconst /** @type {?} */ EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nconst /** @type {?} */ NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof html.Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nexport function removeSummaryDuplicates(items) {\n    const /** @type {?} */ map = new Map();\n    items.forEach((item) => {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    const /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=template_parser.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/template_parser/template_parser.js","/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nexport class ResourceLoader {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get(url) { return ''; }\n}\n//# sourceMappingURL=resource_loader.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/resource_loader.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, PACKAGE_ROOT_URL } from '@angular/core';\nimport { CompilerInjectable } from './injectable';\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nexport function createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nexport function createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * A default provider for {\\@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nexport const DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: PACKAGE_ROOT_URL,\n    useValue: '/'\n};\n/**\n * Used by the {\\@link Compiler} when resolving HTML and CSS template URLs.\n *\n * This class can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n *\n * ## Example\n *\n * {\\@example compiler/ts/url_resolver/url_resolver.ts region='url_resolver'}\n *\n * \\@security When compiling templates at runtime, you must\n * ensure that the entire template comes from a trusted source.\n * Attacker-controlled data introduced by a template could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class UrlResolver {\n    /**\n     * @param {?=} _packagePrefix\n     */\n    constructor(_packagePrefix = null) {\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    resolve(baseUrl, url) {\n        let /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        const /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        let /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            let /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return `${prefix}/${path}`;\n        }\n        return resolvedUrl;\n    }\n}\nUrlResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nUrlResolver.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PACKAGE_ROOT_URL,] },] },\n];\nfunction UrlResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UrlResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    UrlResolver.ctorParameters;\n    /** @type {?} */\n    UrlResolver.prototype._packagePrefix;\n}\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nexport function getUrlScheme(url) {\n    const /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    const /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nconst _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    // used by other URL parts such as :,\n    // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    // digits, dashes, dots, percent\n    // escapes, and unicode characters.\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\nlet _ComponentIndex = {};\n_ComponentIndex.Scheme = 1;\n_ComponentIndex.UserInfo = 2;\n_ComponentIndex.Domain = 3;\n_ComponentIndex.Port = 4;\n_ComponentIndex.Path = 5;\n_ComponentIndex.QueryData = 6;\n_ComponentIndex.Fragment = 7;\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    const /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    const /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    const /** @type {?} */ segments = path.split('/');\n    const /** @type {?} */ out = [];\n    let /** @type {?} */ up = 0;\n    for (let /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        const /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    let /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    const /** @type {?} */ parts = _split(encodeURI(url));\n    const /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (let /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    let /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    const /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n//# sourceMappingURL=url_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/url_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation, ɵstringify as stringify } from '@angular/core';\nimport { CompileStylesheetMetadata, CompileTemplateMetadata, templateSourceUrl } from './compile_metadata';\nimport { CompilerConfig, preserveWhitespacesDefault } from './config';\nimport { CompilerInjectable } from './injectable';\nimport * as html from './ml_parser/ast';\nimport { HtmlParser } from './ml_parser/html_parser';\nimport { InterpolationConfig } from './ml_parser/interpolation_config';\nimport { ResourceLoader } from './resource_loader';\nimport { extractStyleUrls, isStyleUrlResolvable } from './style_url_resolver';\nimport { PreparsedElementType, preparseElement } from './template_parser/template_preparser';\nimport { UrlResolver } from './url_resolver';\nimport { SyncAsync, isDefined, syntaxError } from './util';\nexport class DirectiveNormalizer {\n    /**\n     * @param {?} _resourceLoader\n     * @param {?} _urlResolver\n     * @param {?} _htmlParser\n     * @param {?} _config\n     */\n    constructor(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() { this._resourceLoaderCache.clear(); }\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    clearCacheFor(normalizedDirective) {\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        const /** @type {?} */ template = ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach((stylesheet) => { this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    _fetch(url) {\n        let /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    }\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    normalizeTemplate(prenormData) {\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(`'${stringify(prenormData.componentType)}' component cannot define both template and templateUrl`);\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(`The template specified for component ${stringify(prenormData.componentType)} is not a string`);\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(`The templateUrl specified for component ${stringify(prenormData.componentType)} is not a string`);\n            }\n        }\n        else {\n            throw syntaxError(`No template specified for component ${stringify(prenormData.componentType)}`);\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(`The preserveWhitespaces option for component ${stringify(prenormData.componentType)} must be a boolean`);\n        }\n        return SyncAsync.then(this.normalizeTemplateOnly(prenormData), (result) => this.normalizeExternalStylesheets(result));\n    }\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    normalizeTemplateOnly(prenomData) {\n        let /** @type {?} */ template;\n        let /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, (template) => this.normalizeLoadedTemplate(prenomData, template, templateUrl));\n    }\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    normalizeLoadedTemplate(prenormData, template, templateAbsUrl) {\n        const /** @type {?} */ isInline = !!prenormData.template;\n        const /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        const /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            const /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(`Template parse errors:\\n${errorString}`);\n        }\n        const /** @type {?} */ templateMetadataStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({\n            styles: prenormData.styles,\n            styleUrls: prenormData.styleUrls,\n            moduleUrl: prenormData.moduleUrl\n        }));\n        const /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        html.visitAll(visitor, rootNodesAndErrors.rootNodes);\n        const /** @type {?} */ templateStyles = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        let /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        const /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        const /** @type {?} */ styleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation,\n            template,\n            templateUrl: templateAbsUrl, styles, styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation, isInline,\n            externalStylesheets: [],\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    }\n    /**\n     * @param {?} templateMeta\n     * @return {?}\n     */\n    normalizeExternalStylesheets(templateMeta) {\n        return SyncAsync.then(this._loadMissingExternalStylesheets(templateMeta.styleUrls), (externalStylesheets) => new CompileTemplateMetadata({\n            encapsulation: templateMeta.encapsulation,\n            template: templateMeta.template,\n            templateUrl: templateMeta.templateUrl,\n            styles: templateMeta.styles,\n            styleUrls: templateMeta.styleUrls,\n            externalStylesheets: externalStylesheets,\n            ngContentSelectors: templateMeta.ngContentSelectors,\n            animations: templateMeta.animations,\n            interpolation: templateMeta.interpolation,\n            isInline: templateMeta.isInline,\n            preserveWhitespaces: templateMeta.preserveWhitespaces,\n        }));\n    }\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    _loadMissingExternalStylesheets(styleUrls, loadedStylesheets = new Map()) {\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter((styleUrl) => !loadedStylesheets.has(styleUrl))\n            .map(styleUrl => SyncAsync.then(this._fetch(styleUrl), (loadedStyle) => {\n            const /** @type {?} */ stylesheet = this.normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n            loadedStylesheets.set(styleUrl, stylesheet);\n            return this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n        }))), (_) => Array.from(loadedStylesheets.values()));\n    }\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    normalizeStylesheet(stylesheet) {\n        const /** @type {?} */ moduleUrl = ((stylesheet.moduleUrl));\n        const /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(url => this._urlResolver.resolve(moduleUrl, url));\n        const /** @type {?} */ allStyles = stylesheet.styles.map(style => {\n            const /** @type {?} */ styleWithImports = extractStyleUrls(this._urlResolver, moduleUrl, style);\n            allStyleUrls.push(...styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    }\n}\nDirectiveNormalizer.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveNormalizer.ctorParameters = () => [\n    { type: ResourceLoader, },\n    { type: UrlResolver, },\n    { type: HtmlParser, },\n    { type: CompilerConfig, },\n];\nfunction DirectiveNormalizer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DirectiveNormalizer.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DirectiveNormalizer.ctorParameters;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._resourceLoaderCache;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._resourceLoader;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._urlResolver;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._htmlParser;\n    /** @type {?} */\n    DirectiveNormalizer.prototype._config;\n}\nclass TemplatePreparseVisitor {\n    constructor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        const /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                let /** @type {?} */ textContent = '';\n                ast.children.forEach(child => {\n                    if (child instanceof html.Text) {\n                        textContent += child.value;\n                    }\n                });\n                this.styles.push(textContent);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        html.visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansion(ast, context) { html.visitAll(this, ast.cases); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpansionCase(ast, context) {\n        html.visitAll(this, ast.expression);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitComment(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttribute(ast, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) { return null; }\n}\nfunction TemplatePreparseVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.ngContentSelectors;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.styles;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.styleUrls;\n    /** @type {?} */\n    TemplatePreparseVisitor.prototype.ngNonBindableStackCount;\n}\n//# sourceMappingURL=directive_normalizer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/directive_normalizer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, Directive, HostBinding, HostListener, Input, Output, Query, resolveForwardRef, ɵstringify as stringify } from '@angular/core';\nimport { CompileReflector } from './compile_reflector';\nimport { CompilerInjectable } from './injectable';\nimport { splitAtColon } from './util';\nexport class DirectiveResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isDirective(type) {\n        const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            const /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                const /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(`No Directive annotation found on ${stringify(type)}`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _mergeWithPropertyMetadata(dm, propertyMetadata, directiveType) {\n        const /** @type {?} */ inputs = [];\n        const /** @type {?} */ outputs = [];\n        const /** @type {?} */ host = {};\n        const /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach((propName) => {\n            const /** @type {?} */ input = findLast(propertyMetadata[propName], (a) => a instanceof Input);\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(`${propName}: ${input.bindingPropertyName}`);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            const /** @type {?} */ output = findLast(propertyMetadata[propName], (a) => a instanceof Output);\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(`${propName}: ${output.bindingPropertyName}`);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            const /** @type {?} */ hostBindings = propertyMetadata[propName].filter(a => a && a instanceof HostBinding);\n            hostBindings.forEach(hostBinding => {\n                if (hostBinding.hostPropertyName) {\n                    const /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(`@HostBinding can not bind to events. Use @HostListener instead.`);\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(`@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.`);\n                    }\n                    host[`[${hostBinding.hostPropertyName}]`] = propName;\n                }\n                else {\n                    host[`[${propName}]`] = propName;\n                }\n            });\n            const /** @type {?} */ hostListeners = propertyMetadata[propName].filter(a => a && a instanceof HostListener);\n            hostListeners.forEach(hostListener => {\n                const /** @type {?} */ args = hostListener.args || [];\n                host[`(${hostListener.eventName})`] = `${propName}(${args.join(',')})`;\n            });\n            const /** @type {?} */ query = findLast(propertyMetadata[propName], (a) => a instanceof Query);\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    _extractPublicName(def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); }\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    _dedupeBindings(bindings) {\n        const /** @type {?} */ names = new Set();\n        const /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (let /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            const /** @type {?} */ binding = bindings[i];\n            const /** @type {?} */ name = this._extractPublicName(binding);\n            if (!names.has(name)) {\n                names.add(name);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    }\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _merge(directive, inputs, outputs, host, queries, directiveType) {\n        const /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        const /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        const /** @type {?} */ mergedHost = directive.host ? Object.assign({}, directive.host, host) : host;\n        const /** @type {?} */ mergedQueries = directive.queries ? Object.assign({}, directive.queries, queries) : queries;\n        if (directive instanceof Component) {\n            return new Component({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                moduleId: directive.moduleId,\n                queries: mergedQueries,\n                changeDetection: directive.changeDetection,\n                providers: directive.providers,\n                viewProviders: directive.viewProviders,\n                entryComponents: directive.entryComponents,\n                template: directive.template,\n                templateUrl: directive.templateUrl,\n                styles: directive.styles,\n                styleUrls: directive.styleUrls,\n                encapsulation: directive.encapsulation,\n                animations: directive.animations,\n                interpolation: directive.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return new Directive({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    }\n}\nDirectiveResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDirectiveResolver.ctorParameters = () => [\n    { type: CompileReflector, },\n];\nfunction DirectiveResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DirectiveResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DirectiveResolver.ctorParameters;\n    /** @type {?} */\n    DirectiveResolver.prototype._reflector;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return type instanceof Directive;\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nexport function findLast(arr, condition) {\n    for (let /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=directive_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/directive_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nconst /** @type {?} */ GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nconst /** @type {?} */ GENERATED_MODULE = /\\.ngfactory$|\\.ngsummary$/;\nconst /** @type {?} */ JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nconst /** @type {?} */ JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function ngfactoryFilePath(filePath, forceSourceFile = false) {\n    const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return `${urlWithSuffix[0]}.ngfactory${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function splitTypescriptSuffix(path, forceSourceFile = false) {\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    const /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nexport function summaryFileName(fileName) {\n    const /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return `${fileNameWithoutSuffix}.ngsummary.json`;\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nexport function summaryForJitFileName(fileName, forceSourceFile = false) {\n    const /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return `${urlWithSuffix[0]}.ngsummary${urlWithSuffix[1]}`;\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nexport function stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function summaryForJitName(symbolName) {\n    return `${symbolName}NgSummary`;\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nexport function stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\n//# sourceMappingURL=util.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/util.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport let LifecycleHooks = {};\nLifecycleHooks.OnInit = 0;\nLifecycleHooks.OnDestroy = 1;\nLifecycleHooks.DoCheck = 2;\nLifecycleHooks.OnChanges = 3;\nLifecycleHooks.AfterContentInit = 4;\nLifecycleHooks.AfterContentChecked = 5;\nLifecycleHooks.AfterViewInit = 6;\nLifecycleHooks.AfterViewChecked = 7;\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nexport const /** @type {?} */ LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nexport function hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nexport function getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(hook => hasLifecycleHook(reflector, hook, token));\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n//# sourceMappingURL=lifecycle_reflector.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/lifecycle_reflector.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, ɵstringify as stringify } from '@angular/core';\nimport { CompileReflector } from './compile_reflector';\nimport { findLast } from './directive_resolver';\nimport { CompilerInjectable } from './injectable';\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _isNgModuleMetadata(obj) {\n    return obj instanceof NgModule;\n}\n/**\n * Resolves types to {\\@link NgModule}.\n */\nexport class NgModuleResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isNgModule(type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); }\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        const /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), _isNgModuleMetadata);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(`No NgModule metadata found for '${stringify(type)}'.`);\n            }\n            return null;\n        }\n    }\n}\nNgModuleResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleResolver.ctorParameters = () => [\n    { type: CompileReflector, },\n];\nfunction NgModuleResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    NgModuleResolver.ctorParameters;\n    /** @type {?} */\n    NgModuleResolver.prototype._reflector;\n}\n//# sourceMappingURL=ng_module_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ng_module_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Pipe, resolveForwardRef, ɵstringify as stringify } from '@angular/core';\nimport { CompileReflector } from './compile_reflector';\nimport { findLast } from './directive_resolver';\nimport { CompilerInjectable } from './injectable';\n/**\n * @param {?} type\n * @return {?}\n */\nfunction _isPipeMetadata(type) {\n    return type instanceof Pipe;\n}\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nexport class PipeResolver {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isPipe(type) {\n        const /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(_isPipeMetadata);\n    }\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    resolve(type, throwIfNotFound = true) {\n        const /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            const /** @type {?} */ annotation = findLast(metas, _isPipeMetadata);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(`No Pipe decorator found on ${stringify(type)}`);\n        }\n        return null;\n    }\n}\nPipeResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nPipeResolver.ctorParameters = () => [\n    { type: CompileReflector, },\n];\nfunction PipeResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PipeResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    PipeResolver.ctorParameters;\n    /** @type {?} */\n    PipeResolver.prototype._reflector;\n}\n//# sourceMappingURL=pipe_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/pipe_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompilerInjectable } from './injectable';\n/**\n * @abstract\n */\nexport class SummaryResolver {\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    isLibraryFile(fileName) { }\n    /**\n     * @abstract\n     * @param {?} fileName\n     * @return {?}\n     */\n    getLibraryFileName(fileName) { }\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    resolveSummary(reference) { }\n    /**\n     * @abstract\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) { }\n    /**\n     * @abstract\n     * @param {?} reference\n     * @return {?}\n     */\n    getImportAs(reference) { }\n    /**\n     * @abstract\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) { }\n}\nexport class JitSummaryResolver {\n    constructor() {\n        this._summaries = new Map();\n    }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    isLibraryFile(fileName) { return false; }\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    getLibraryFileName(fileName) { return null; }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    resolveSummary(reference) {\n        return this._summaries.get(reference) || null;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) { return []; }\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    getImportAs(reference) { return reference; }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) { this._summaries.set(summary.symbol, summary); }\n}\nJitSummaryResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitSummaryResolver.ctorParameters = () => [];\nfunction JitSummaryResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JitSummaryResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    JitSummaryResolver.ctorParameters;\n    /** @type {?} */\n    JitSummaryResolver.prototype._summaries;\n}\n//# sourceMappingURL=summary_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/summary_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Attribute, Component, Host, Inject, Injectable, InjectionToken, Optional, Self, SkipSelf, Type, resolveForwardRef, ɵConsole as Console, ɵERROR_COMPONENT_TYPE, ɵccf as createComponentFactory, ɵisPromise as isPromise, ɵstringify as stringify } from '@angular/core';\nimport { StaticSymbol, StaticSymbolCache } from './aot/static_symbol';\nimport { ngfactoryFilePath } from './aot/util';\nimport { assertArrayOfStrings, assertInterpolationSymbols } from './assertions';\nimport * as cpl from './compile_metadata';\nimport { CompileReflector } from './compile_reflector';\nimport { CompilerConfig } from './config';\nimport { DirectiveNormalizer } from './directive_normalizer';\nimport { DirectiveResolver } from './directive_resolver';\nimport { Identifiers } from './identifiers';\nimport { CompilerInjectable } from './injectable';\nimport { getAllLifecycleHooks } from './lifecycle_reflector';\nimport { NgModuleResolver } from './ng_module_resolver';\nimport { PipeResolver } from './pipe_resolver';\nimport { ElementSchemaRegistry } from './schema/element_schema_registry';\nimport { SummaryResolver } from './summary_resolver';\nimport { SyncAsync, ValueTransformer, noUndefined, syntaxError, visitValue } from './util';\nexport const /** @type {?} */ ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\nexport class CompileMetadataResolver {\n    /**\n     * @param {?} _config\n     * @param {?} _ngModuleResolver\n     * @param {?} _directiveResolver\n     * @param {?} _pipeResolver\n     * @param {?} _summaryResolver\n     * @param {?} _schemaRegistry\n     * @param {?} _directiveNormalizer\n     * @param {?} _console\n     * @param {?} _staticSymbolCache\n     * @param {?} _reflector\n     * @param {?=} _errorCollector\n     */\n    constructor(_config, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    getReflector() { return this._reflector; }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) {\n        const /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    }\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    _createProxyClass(baseType, name) {\n        let /** @type {?} */ delegate = null;\n        const /** @type {?} */ proxyClass = (function () {\n            if (!delegate) {\n                throw new Error(`Illegal state: Class ${name} for type ${stringify(baseType)} is not compiled yet!`);\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = (d) => {\n            delegate = d;\n            ((proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        ((proxyClass)).overriddenName = name;\n        return proxyClass;\n    }\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    getGeneratedClass(dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getComponentViewClass(dirType) {\n        return this.getGeneratedClass(dirType, cpl.viewClassName(dirType, 0));\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getHostComponentViewClass(dirType) {\n        return this.getGeneratedClass(dirType, cpl.hostViewClassName(dirType));\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getHostComponentType(dirType) {\n        const /** @type {?} */ name = `${cpl.identifierName({ reference: dirType })}_Host`;\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            const /** @type {?} */ HostClass = (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getRendererType(dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return ({});\n        }\n    }\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    getComponentFactory(selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), cpl.componentFactoryName(dirType));\n        }\n        else {\n            const /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    }\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    initComponentFactory(factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            factory.ngContentSelectors.push(...ngContentSelectors);\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    _loadSummary(type, kind) {\n        let /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            const /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    }\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    loadDirectiveMetadata(ngModuleType, directiveType, isSync) {\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        const { annotation, metadata } = ((this.getNonNormalizedDirectiveMetadata(directiveType)));\n        const /** @type {?} */ createDirectiveMetadata = (templateMetadata) => {\n            const /** @type {?} */ normalizedDirMeta = new cpl.CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            this._directiveCache.set(directiveType, normalizedDirMeta);\n            this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            const /** @type {?} */ template = ((metadata.template));\n            const /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    }\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    getNonNormalizedDirectiveMetadata(directiveType) {\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        let /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        const /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        let /** @type {?} */ nonNormalizedTemplateMetadata = ((undefined));\n        if (dirMeta instanceof Component) {\n            // component\n            assertArrayOfStrings('styles', dirMeta.styles);\n            assertArrayOfStrings('styleUrls', dirMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', dirMeta.interpolation);\n            const /** @type {?} */ animations = dirMeta.animations;\n            nonNormalizedTemplateMetadata = new cpl.CompileTemplateMetadata({\n                encapsulation: noUndefined(dirMeta.encapsulation),\n                template: noUndefined(dirMeta.template),\n                templateUrl: noUndefined(dirMeta.templateUrl),\n                styles: dirMeta.styles || [],\n                styleUrls: dirMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(dirMeta.interpolation),\n                isInline: !!dirMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        let /** @type {?} */ changeDetectionStrategy = ((null));\n        let /** @type {?} */ viewProviders = [];\n        let /** @type {?} */ entryComponentMetadata = [];\n        let /** @type {?} */ selector = dirMeta.selector;\n        if (dirMeta instanceof Component) {\n            // Component\n            changeDetectionStrategy = ((dirMeta.changeDetection));\n            if (dirMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(dirMeta.viewProviders, entryComponentMetadata, `viewProviders for \"${stringifyType(directiveType)}\"`, [], directiveType);\n            }\n            if (dirMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(dirMeta.entryComponents)\n                    .map((type) => ((this._getEntryComponentMetadata(type))))\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(`Directive ${stringifyType(directiveType)} has no selector, please add it!`), directiveType);\n                selector = 'error';\n            }\n        }\n        let /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, `providers for \"${stringifyType(directiveType)}\"`, [], directiveType);\n        }\n        let /** @type {?} */ queries = [];\n        let /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        const /** @type {?} */ metadata = cpl.CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    }\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    getDirectiveMetadata(directiveType) {\n        const /** @type {?} */ dirMeta = ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(`Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive ${stringifyType(directiveType)}.`), directiveType);\n        }\n        return dirMeta;\n    }\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    getDirectiveSummary(dirType) {\n        const /** @type {?} */ dirSummary = (this._loadSummary(dirType, cpl.CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(`Illegal state: Could not load the summary for directive ${stringifyType(dirType)}.`), dirType);\n        }\n        return dirSummary;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isDirective(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isPipe(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isNgModule(type) {\n        return !!this._loadSummary(type, cpl.CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    getNgModuleSummary(moduleType) {\n        let /** @type {?} */ moduleSummary = (this._loadSummary(moduleType, cpl.CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            const /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    }\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    loadNgModuleDirectiveAndPipeMetadata(moduleType, isSync, throwIfNotFound = true) {\n        const /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        const /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach((id) => {\n                const /** @type {?} */ promise = this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach((id) => this._loadPipeMetadata(id.reference));\n        }\n        return Promise.all(loading);\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    getNgModuleMetadata(moduleType, throwIfNotFound = true) {\n        moduleType = resolveForwardRef(moduleType);\n        let /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        const /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        const /** @type {?} */ declaredDirectives = [];\n        const /** @type {?} */ exportedNonModuleIdentifiers = [];\n        const /** @type {?} */ declaredPipes = [];\n        const /** @type {?} */ importedModules = [];\n        const /** @type {?} */ exportedModules = [];\n        const /** @type {?} */ providers = [];\n        const /** @type {?} */ entryComponents = [];\n        const /** @type {?} */ bootstrapComponents = [];\n        const /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach((importedType) => {\n                let /** @type {?} */ importedModuleType = ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    const /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push(...this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, `provider for the NgModule '${stringifyType(importedModuleType)}'`, [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    const /** @type {?} */ importedModuleSummary = this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        this._reportError(syntaxError(`Unexpected ${this._getTypeDescriptor(importedType)} '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'. Please add a @NgModule annotation.`), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(importedType)}' imported by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach((exportedType) => {\n                if (!isValidType(exportedType)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(exportedType)}' exported by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                const /** @type {?} */ exportedModuleSummary = this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        const /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach((declaredType) => {\n                if (!isValidType(declaredType)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                const /** @type {?} */ declaredIdentifier = this._getIdentifierMetadata(declaredType);\n                if (this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    this._reportError(syntaxError(`Unexpected ${this._getTypeDescriptor(declaredType)} '${stringifyType(declaredType)}' declared by the module '${stringifyType(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`), moduleType);\n                    return;\n                }\n            });\n        }\n        const /** @type {?} */ exportedDirectives = [];\n        const /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach((exportedId) => {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                this._reportError(syntaxError(`Can't export ${this._getTypeDescriptor(exportedId.reference)} ${stringifyType(exportedId.reference)} from ${stringifyType(moduleType)} as it was neither declared nor imported!`), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push(...this._getProvidersMetadata(meta.providers, entryComponents, `provider for the NgModule '${stringifyType(moduleType)}'`, [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push(...flattenAndDedupeArray(meta.entryComponents)\n                .map(type => ((this._getEntryComponentMetadata(type)))));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(type => {\n                if (!isValidType(type)) {\n                    this._reportError(syntaxError(`Unexpected value '${stringifyType(type)}' used in the bootstrap property of module '${stringifyType(moduleType)}'`), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push(...bootstrapComponents.map(type => ((this._getEntryComponentMetadata(type.reference)))));\n        if (meta.schemas) {\n            schemas.push(...flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new cpl.CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers,\n            entryComponents,\n            bootstrapComponents,\n            schemas,\n            declaredDirectives,\n            exportedDirectives,\n            declaredPipes,\n            exportedPipes,\n            importedModules,\n            exportedModules,\n            transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach((id) => transitiveModule.addEntryComponent(id));\n        providers.forEach((provider) => transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type));\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    }\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    _checkSelfImport(moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(`'${stringifyType(moduleType)}' module can't import itself`), moduleType);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _getTypeDescriptor(type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if (((type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    }\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    _addTypeToModule(type, moduleType) {\n        const /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(`Type ${stringifyType(type)} is part of the declarations of 2 modules: ${stringifyType(oldModule)} and ${stringifyType(moduleType)}! ` +\n                `Please consider moving ${stringifyType(type)} to a higher module that imports ${stringifyType(oldModule)} and ${stringifyType(moduleType)}. ` +\n                `You can also create a new NgModule that exports and includes ${stringifyType(type)} then import that NgModule in ${stringifyType(oldModule)} and ${stringifyType(moduleType)}.`), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    }\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    _getTransitiveNgModuleMetadata(importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        const /** @type {?} */ result = new cpl.TransitiveCompileNgModuleMetadata();\n        const /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach((modSummary) => {\n            modSummary.modules.forEach((mod) => result.addModule(mod));\n            modSummary.entryComponents.forEach((comp) => result.addEntryComponent(comp));\n            const /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach((entry) => {\n                const /** @type {?} */ tokenRef = cpl.tokenReference(entry.provider.token);\n                let /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                const /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach((modSummary) => {\n            modSummary.exportedDirectives.forEach((id) => result.addExportedDirective(id));\n            modSummary.exportedPipes.forEach((id) => result.addExportedPipe(id));\n        });\n        importedModules.forEach((modSummary) => {\n            modSummary.exportedDirectives.forEach((id) => result.addDirective(id));\n            modSummary.exportedPipes.forEach((id) => result.addPipe(id));\n        });\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _getIdentifierMetadata(type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    isInjectable(type) {\n        const /** @type {?} */ annotations = this._reflector.annotations(type);\n        // Note: We need an exact check here as @Component / @Directive / ... inherit\n        // from @CompilerInjectable!\n        return annotations.some(ann => ann.constructor === Injectable);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getInjectableSummary(type) {\n        return {\n            summaryKind: cpl.CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    }\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    _getInjectableMetadata(type, dependencies = null) {\n        const /** @type {?} */ typeSummary = this._loadSummary(type, cpl.CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    _getTypeMetadata(type, dependencies = null, throwOnUnknownDeps = true) {\n        const /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    }\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    _getFactoryMetadata(factory, dependencies = null) {\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    }\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getPipeMetadata(pipeType) {\n        const /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(`Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe ${stringifyType(pipeType)}.`), pipeType);\n        }\n        return pipeMeta || null;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getPipeSummary(pipeType) {\n        const /** @type {?} */ pipeSummary = (this._loadSummary(pipeType, cpl.CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(`Illegal state: Could not load the summary for pipe ${stringifyType(pipeType)}.`), pipeType);\n        }\n        return pipeSummary;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    getOrLoadPipeMetadata(pipeType) {\n        let /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    }\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    _loadPipeMetadata(pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        const /** @type {?} */ pipeAnnotation = ((this._pipeResolver.resolve(pipeType)));\n        const /** @type {?} */ pipeMeta = new cpl.CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    _getDependenciesMetadata(typeOrFunc, dependencies, throwOnUnknownDeps = true) {\n        let /** @type {?} */ hasUnknownDeps = false;\n        const /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        const /** @type {?} */ dependenciesMetadata = params.map((param) => {\n            let /** @type {?} */ isAttribute = false;\n            let /** @type {?} */ isHost = false;\n            let /** @type {?} */ isSelf = false;\n            let /** @type {?} */ isSkipSelf = false;\n            let /** @type {?} */ isOptional = false;\n            let /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach((paramEntry) => {\n                    if (paramEntry instanceof Host) {\n                        isHost = true;\n                    }\n                    else if (paramEntry instanceof Self) {\n                        isSelf = true;\n                    }\n                    else if (paramEntry instanceof SkipSelf) {\n                        isSkipSelf = true;\n                    }\n                    else if (paramEntry instanceof Optional) {\n                        isOptional = true;\n                    }\n                    else if (paramEntry instanceof Attribute) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (paramEntry instanceof Inject) {\n                        token = paramEntry.token;\n                    }\n                    else if (paramEntry instanceof InjectionToken) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return ((null));\n            }\n            return {\n                isAttribute,\n                isHost,\n                isSelf,\n                isSkipSelf,\n                isOptional,\n                token: this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            const /** @type {?} */ depsTokens = dependenciesMetadata.map((dep) => dep ? stringifyType(dep.token) : '?').join(', ');\n            const /** @type {?} */ message = `Can't resolve all parameters for ${stringifyType(typeOrFunc)}: (${depsTokens}).`;\n            if (throwOnUnknownDeps) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(`Warning: ${message} This will become an error in Angular v5.x`);\n            }\n        }\n        return dependenciesMetadata;\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _getTokenMetadata(token) {\n        token = resolveForwardRef(token);\n        let /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    }\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    _getProvidersMetadata(providers, targetEntryComponents, debugInfo, compileProviders = [], type) {\n        providers.forEach((provider, providerIdx) => {\n            if (Array.isArray(provider)) {\n                this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                let /** @type {?} */ providerMeta = ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    this._validateProvider(provider);\n                    providerMeta = new cpl.ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new cpl.ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    this._reportError(syntaxError(`Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.`));\n                    return;\n                }\n                else {\n                    const /** @type {?} */ providersInfo = ((providers.reduce((soFar, seenProvider, seenProviderIdx) => {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(`${stringifyType(seenProvider)}`);\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(`?${stringifyType(seenProvider)}?`);\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    this._reportError(syntaxError(`Invalid ${debugInfo ? debugInfo : 'provider'} - only instances of Provider and Type are allowed, got: [${providersInfo}]`), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push(...this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _validateProvider(provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(`Invalid provider for ${stringifyType(provider.provide)}. useClass cannot be ${provider.useClass}.\n           Usually it happens when:\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\n           2. Class was used before it was declared. Use forwardRef in this case.`));\n        }\n    }\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    _getEntryComponentsFromProvider(provider, type) {\n        const /** @type {?} */ components = [];\n        const /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!`), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(`The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!`), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach((identifier) => {\n            const /** @type {?} */ entry = this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    }\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    _getEntryComponentMetadata(dirType, throwIfNotFound = true) {\n        const /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        const /** @type {?} */ dirSummary = (this._loadSummary(dirType, cpl.CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(`${dirType.name} cannot be used as an entry component.`);\n        }\n        return null;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    getProviderMetadata(provider) {\n        let /** @type {?} */ compileDeps = ((undefined));\n        let /** @type {?} */ compileTypeMetadata = ((null));\n        let /** @type {?} */ compileFactoryMetadata = ((null));\n        let /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    }\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    _getQueriesMetadata(queries, isViewQuery, directiveType) {\n        const /** @type {?} */ res = [];\n        Object.keys(queries).forEach((propertyName) => {\n            const /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    _queryVarBindings(selector) { return selector.split(/\\s*,\\s*/); }\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    _getQueryMetadata(q, propertyName, typeOrFunc) {\n        let /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(varName => this._getTokenMetadata(varName));\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(`Can't construct a query for the property \"${propertyName}\" of \"${stringifyType(typeOrFunc)}\" since the query selector wasn't defined.`), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : ((null))\n        };\n    }\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    _reportError(error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    }\n}\nCompileMetadataResolver.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nCompileMetadataResolver.ctorParameters = () => [\n    { type: CompilerConfig, },\n    { type: NgModuleResolver, },\n    { type: DirectiveResolver, },\n    { type: PipeResolver, },\n    { type: SummaryResolver, },\n    { type: ElementSchemaRegistry, },\n    { type: DirectiveNormalizer, },\n    { type: Console, },\n    { type: StaticSymbolCache, decorators: [{ type: Optional },] },\n    { type: CompileReflector, },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ERROR_COLLECTOR_TOKEN,] },] },\n];\nfunction CompileMetadataResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompileMetadataResolver.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    CompileMetadataResolver.ctorParameters;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._nonNormalizedDirectiveCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._summaryCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._pipeCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleOfTypes;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._config;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._ngModuleResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._pipeResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._summaryResolver;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._schemaRegistry;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._directiveNormalizer;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._console;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._staticSymbolCache;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._reflector;\n    /** @type {?} */\n    CompileMetadataResolver.prototype._errorCollector;\n}\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out = []) {\n    if (tree) {\n        for (let /** @type {?} */ i = 0; i < tree.length; i++) {\n            const /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nclass _CompileValueConverter extends ValueTransformer {\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    visitOther(value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return `${type.name} in ${type.filePath}`;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    const /** @type {?} */ error = Error(`Can't compile synchronously as ${stringify(compType)} is still being loaded!`);\n    ((error))[ɵERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n//# sourceMappingURL=metadata_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/metadata_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport let TypeModifier = {};\nTypeModifier.Const = 0;\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nexport class Type {\n    /**\n     * @param {?=} modifiers\n     */\n    constructor(modifiers = null) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) { }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nfunction Type_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Type.prototype.modifiers;\n}\nexport let BuiltinTypeName = {};\nBuiltinTypeName.Dynamic = 0;\nBuiltinTypeName.Bool = 1;\nBuiltinTypeName.String = 2;\nBuiltinTypeName.Int = 3;\nBuiltinTypeName.Number = 4;\nBuiltinTypeName.Function = 5;\nBuiltinTypeName.Inferred = 6;\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nexport class BuiltinType extends Type {\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     */\n    constructor(name, modifiers = null) {\n        super(modifiers);\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    }\n}\nfunction BuiltinType_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BuiltinType.prototype.name;\n}\nexport class ExpressionType extends Type {\n    /**\n     * @param {?} value\n     * @param {?=} modifiers\n     */\n    constructor(value, modifiers = null) {\n        super(modifiers);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    }\n}\nfunction ExpressionType_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpressionType.prototype.value;\n}\nexport class ArrayType extends Type {\n    /**\n     * @param {?} of\n     * @param {?=} modifiers\n     */\n    constructor(of, modifiers = null) {\n        super(modifiers);\n        this.of = of;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) {\n        return visitor.visitArrayType(this, context);\n    }\n}\nfunction ArrayType_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ArrayType.prototype.of;\n}\nexport class MapType extends Type {\n    /**\n     * @param {?} valueType\n     * @param {?=} modifiers\n     */\n    constructor(valueType, modifiers = null) {\n        super(modifiers);\n        this.valueType = valueType || null;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitType(visitor, context) { return visitor.visitMapType(this, context); }\n}\nfunction MapType_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MapType.prototype.valueType;\n}\nexport const /** @type {?} */ DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nexport const /** @type {?} */ INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nexport const /** @type {?} */ BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nexport const /** @type {?} */ INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nexport const /** @type {?} */ NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nexport const /** @type {?} */ STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nexport const /** @type {?} */ FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\nexport let BinaryOperator = {};\nBinaryOperator.Equals = 0;\nBinaryOperator.NotEquals = 1;\nBinaryOperator.Identical = 2;\nBinaryOperator.NotIdentical = 3;\nBinaryOperator.Minus = 4;\nBinaryOperator.Plus = 5;\nBinaryOperator.Divide = 6;\nBinaryOperator.Multiply = 7;\nBinaryOperator.Modulo = 8;\nBinaryOperator.And = 9;\nBinaryOperator.Or = 10;\nBinaryOperator.Lower = 11;\nBinaryOperator.LowerEquals = 12;\nBinaryOperator.Bigger = 13;\nBinaryOperator.BiggerEquals = 14;\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @abstract\n */\nexport class Expression {\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     */\n    constructor(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) { }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    prop(name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    }\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    key(index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    }\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    callMethod(name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    }\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    callFn(params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    }\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    instantiate(params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    }\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    conditional(trueCase, falseCase = null, sourceSpan) {\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    equals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    notEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    identical(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    notIdentical(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    minus(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    plus(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    divide(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    multiply(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    modulo(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    and(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    or(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    lower(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    lowerEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    bigger(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    biggerEquals(rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    }\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    isBlank(sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    }\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    cast(type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    }\n    /**\n     * @return {?}\n     */\n    toStmt() { return new ExpressionStatement(this, null); }\n}\nfunction Expression_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Expression.prototype.type;\n    /** @type {?} */\n    Expression.prototype.sourceSpan;\n}\nexport let BuiltinVar = {};\nBuiltinVar.This = 0;\nBuiltinVar.Super = 1;\nBuiltinVar.CatchError = 2;\nBuiltinVar.CatchStack = 3;\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nexport class ReadVarExpr extends Expression {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(name, type, sourceSpan) {\n        super(type, sourceSpan);\n        if (typeof name === 'string') {\n            this.name = name;\n            this.builtin = null;\n        }\n        else {\n            this.name = null;\n            this.builtin = name;\n        }\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        if (!this.name) {\n            throw new Error(`Built in variable ${this.builtin} can not be assigned to.`);\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    }\n}\nfunction ReadVarExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReadVarExpr.prototype.name;\n    /** @type {?} */\n    ReadVarExpr.prototype.builtin;\n}\nexport class WriteVarExpr extends Expression {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(name, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    }\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    toDeclStmt(type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    }\n}\nfunction WriteVarExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WriteVarExpr.prototype.value;\n    /** @type {?} */\n    WriteVarExpr.prototype.name;\n}\nexport class WriteKeyExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, index, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.receiver = receiver;\n        this.index = index;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    }\n}\nfunction WriteKeyExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WriteKeyExpr.prototype.value;\n    /** @type {?} */\n    WriteKeyExpr.prototype.receiver;\n    /** @type {?} */\n    WriteKeyExpr.prototype.index;\n}\nexport class WritePropExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, name, value, type, sourceSpan) {\n        super(type || value.type, sourceSpan);\n        this.receiver = receiver;\n        this.name = name;\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    }\n}\nfunction WritePropExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WritePropExpr.prototype.value;\n    /** @type {?} */\n    WritePropExpr.prototype.receiver;\n    /** @type {?} */\n    WritePropExpr.prototype.name;\n}\nexport let BuiltinMethod = {};\nBuiltinMethod.ConcatArray = 0;\nBuiltinMethod.SubscribeObservable = 1;\nBuiltinMethod.Bind = 2;\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nexport class InvokeMethodExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} method\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, method, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.args = args;\n        if (typeof method === 'string') {\n            this.name = method;\n            this.builtin = null;\n        }\n        else {\n            this.name = null;\n            this.builtin = method;\n        }\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    }\n}\nfunction InvokeMethodExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InvokeMethodExpr.prototype.name;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.builtin;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.receiver;\n    /** @type {?} */\n    InvokeMethodExpr.prototype.args;\n}\nexport class InvokeFunctionExpr extends Expression {\n    /**\n     * @param {?} fn\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(fn, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.fn = fn;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    }\n}\nfunction InvokeFunctionExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InvokeFunctionExpr.prototype.fn;\n    /** @type {?} */\n    InvokeFunctionExpr.prototype.args;\n}\nexport class InstantiateExpr extends Expression {\n    /**\n     * @param {?} classExpr\n     * @param {?} args\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(classExpr, args, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.classExpr = classExpr;\n        this.args = args;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    }\n}\nfunction InstantiateExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    InstantiateExpr.prototype.classExpr;\n    /** @type {?} */\n    InstantiateExpr.prototype.args;\n}\nexport class LiteralExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    }\n}\nfunction LiteralExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralExpr.prototype.value;\n}\nexport class ExternalExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} typeParams\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, typeParams = null, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n        this.typeParams = typeParams;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    }\n}\nfunction ExternalExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExternalExpr.prototype.value;\n    /** @type {?} */\n    ExternalExpr.prototype.typeParams;\n}\nexport class ExternalReference {\n    /**\n     * @param {?} moduleName\n     * @param {?} name\n     * @param {?} runtime\n     */\n    constructor(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n}\nfunction ExternalReference_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExternalReference.prototype.moduleName;\n    /** @type {?} */\n    ExternalReference.prototype.name;\n    /** @type {?} */\n    ExternalReference.prototype.runtime;\n}\nexport class ConditionalExpr extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, trueCase, falseCase = null, type, sourceSpan) {\n        super(type || trueCase.type, sourceSpan);\n        this.condition = condition;\n        this.falseCase = falseCase;\n        this.trueCase = trueCase;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    }\n}\nfunction ConditionalExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ConditionalExpr.prototype.trueCase;\n    /** @type {?} */\n    ConditionalExpr.prototype.condition;\n    /** @type {?} */\n    ConditionalExpr.prototype.falseCase;\n}\nexport class NotExpr extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, sourceSpan) {\n        super(BOOL_TYPE, sourceSpan);\n        this.condition = condition;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    }\n}\nfunction NotExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NotExpr.prototype.condition;\n}\nexport class AssertNotNull extends Expression {\n    /**\n     * @param {?} condition\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, sourceSpan) {\n        super(condition.type, sourceSpan);\n        this.condition = condition;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    }\n}\nfunction AssertNotNull_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AssertNotNull.prototype.condition;\n}\nexport class CastExpr extends Expression {\n    /**\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(value, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    }\n}\nfunction CastExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CastExpr.prototype.value;\n}\nexport class FnParam {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     */\n    constructor(name, type = null) {\n        this.name = name;\n        this.type = type;\n    }\n}\nfunction FnParam_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FnParam.prototype.name;\n    /** @type {?} */\n    FnParam.prototype.type;\n}\nexport class FunctionExpr extends Expression {\n    /**\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(params, statements, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.params = params;\n        this.statements = statements;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    }\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    toDeclStmt(name, modifiers = null) {\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    }\n}\nfunction FunctionExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FunctionExpr.prototype.params;\n    /** @type {?} */\n    FunctionExpr.prototype.statements;\n}\nexport class BinaryOperatorExpr extends Expression {\n    /**\n     * @param {?} operator\n     * @param {?} lhs\n     * @param {?} rhs\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(operator, lhs, rhs, type, sourceSpan) {\n        super(type || lhs.type, sourceSpan);\n        this.operator = operator;\n        this.rhs = rhs;\n        this.lhs = lhs;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    }\n}\nfunction BinaryOperatorExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.lhs;\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.operator;\n    /** @type {?} */\n    BinaryOperatorExpr.prototype.rhs;\n}\nexport class ReadPropExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, name, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.name = name;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    }\n}\nfunction ReadPropExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReadPropExpr.prototype.receiver;\n    /** @type {?} */\n    ReadPropExpr.prototype.name;\n}\nexport class ReadKeyExpr extends Expression {\n    /**\n     * @param {?} receiver\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(receiver, index, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.receiver = receiver;\n        this.index = index;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set(value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    }\n}\nfunction ReadKeyExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReadKeyExpr.prototype.receiver;\n    /** @type {?} */\n    ReadKeyExpr.prototype.index;\n}\nexport class LiteralArrayExpr extends Expression {\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(entries, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.entries = entries;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    }\n}\nfunction LiteralArrayExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralArrayExpr.prototype.entries;\n}\nexport class LiteralMapEntry {\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} quoted\n     */\n    constructor(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n}\nfunction LiteralMapEntry_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralMapEntry.prototype.key;\n    /** @type {?} */\n    LiteralMapEntry.prototype.value;\n    /** @type {?} */\n    LiteralMapEntry.prototype.quoted;\n}\nexport class LiteralMapExpr extends Expression {\n    /**\n     * @param {?} entries\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     */\n    constructor(entries, type, sourceSpan) {\n        super(type, sourceSpan);\n        this.entries = entries;\n        this.valueType = null;\n        if (type) {\n            this.valueType = type.valueType;\n        }\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    }\n}\nfunction LiteralMapExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LiteralMapExpr.prototype.valueType;\n    /** @type {?} */\n    LiteralMapExpr.prototype.entries;\n}\nexport class CommaExpr extends Expression {\n    /**\n     * @param {?} parts\n     * @param {?=} sourceSpan\n     */\n    constructor(parts, sourceSpan) {\n        super(parts[parts.length - 1].type, sourceSpan);\n        this.parts = parts;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpression(visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    }\n}\nfunction CommaExpr_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CommaExpr.prototype.parts;\n}\nexport const /** @type {?} */ THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nexport const /** @type {?} */ SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nexport const /** @type {?} */ CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nexport const /** @type {?} */ CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nexport const /** @type {?} */ NULL_EXPR = new LiteralExpr(null, null, null);\nexport const /** @type {?} */ TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\nexport let StmtModifier = {};\nStmtModifier.Final = 0;\nStmtModifier.Private = 1;\nStmtModifier.Exported = 2;\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nexport class Statement {\n    /**\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @abstract\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) { }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nfunction Statement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Statement.prototype.modifiers;\n    /** @type {?} */\n    Statement.prototype.sourceSpan;\n}\nexport class DeclareVarStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, value, type, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.value = value;\n        this.type = type || value.type;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    }\n}\nfunction DeclareVarStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DeclareVarStmt.prototype.type;\n    /** @type {?} */\n    DeclareVarStmt.prototype.name;\n    /** @type {?} */\n    DeclareVarStmt.prototype.value;\n}\nexport class DeclareFunctionStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} statements\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, params, statements, type, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.params = params;\n        this.statements = statements;\n        this.type = type || null;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    }\n}\nfunction DeclareFunctionStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.type;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.name;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.params;\n    /** @type {?} */\n    DeclareFunctionStmt.prototype.statements;\n}\nexport class ExpressionStatement extends Statement {\n    /**\n     * @param {?} expr\n     * @param {?=} sourceSpan\n     */\n    constructor(expr, sourceSpan) {\n        super(null, sourceSpan);\n        this.expr = expr;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    }\n}\nfunction ExpressionStatement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ExpressionStatement.prototype.expr;\n}\nexport class ReturnStatement extends Statement {\n    /**\n     * @param {?} value\n     * @param {?=} sourceSpan\n     */\n    constructor(value, sourceSpan) {\n        super(null, sourceSpan);\n        this.value = value;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    }\n}\nfunction ReturnStatement_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReturnStatement.prototype.value;\n}\nexport class AbstractClassPart {\n    /**\n     * @param {?} type\n     * @param {?} modifiers\n     */\n    constructor(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    hasModifier(modifier) { return ((this.modifiers)).indexOf(modifier) !== -1; }\n}\nfunction AbstractClassPart_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AbstractClassPart.prototype.type;\n    /** @type {?} */\n    AbstractClassPart.prototype.modifiers;\n}\nexport class ClassField extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    constructor(name, type, modifiers = null) {\n        super(type, modifiers);\n        this.name = name;\n    }\n}\nfunction ClassField_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ClassField.prototype.name;\n}\nexport class ClassMethod extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    constructor(name, params, body, type, modifiers = null) {\n        super(type, modifiers);\n        this.name = name;\n        this.params = params;\n        this.body = body;\n    }\n}\nfunction ClassMethod_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ClassMethod.prototype.name;\n    /** @type {?} */\n    ClassMethod.prototype.params;\n    /** @type {?} */\n    ClassMethod.prototype.body;\n}\nexport class ClassGetter extends AbstractClassPart {\n    /**\n     * @param {?} name\n     * @param {?} body\n     * @param {?=} type\n     * @param {?=} modifiers\n     */\n    constructor(name, body, type, modifiers = null) {\n        super(type, modifiers);\n        this.name = name;\n        this.body = body;\n    }\n}\nfunction ClassGetter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ClassGetter.prototype.name;\n    /** @type {?} */\n    ClassGetter.prototype.body;\n}\nexport class ClassStmt extends Statement {\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @param {?} fields\n     * @param {?} getters\n     * @param {?} constructorMethod\n     * @param {?} methods\n     * @param {?=} modifiers\n     * @param {?=} sourceSpan\n     */\n    constructor(name, parent, fields, getters, constructorMethod, methods, modifiers = null, sourceSpan) {\n        super(modifiers, sourceSpan);\n        this.name = name;\n        this.parent = parent;\n        this.fields = fields;\n        this.getters = getters;\n        this.constructorMethod = constructorMethod;\n        this.methods = methods;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    }\n}\nfunction ClassStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ClassStmt.prototype.name;\n    /** @type {?} */\n    ClassStmt.prototype.parent;\n    /** @type {?} */\n    ClassStmt.prototype.fields;\n    /** @type {?} */\n    ClassStmt.prototype.getters;\n    /** @type {?} */\n    ClassStmt.prototype.constructorMethod;\n    /** @type {?} */\n    ClassStmt.prototype.methods;\n}\nexport class IfStmt extends Statement {\n    /**\n     * @param {?} condition\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     */\n    constructor(condition, trueCase, falseCase = [], sourceSpan) {\n        super(null, sourceSpan);\n        this.condition = condition;\n        this.trueCase = trueCase;\n        this.falseCase = falseCase;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    }\n}\nfunction IfStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IfStmt.prototype.condition;\n    /** @type {?} */\n    IfStmt.prototype.trueCase;\n    /** @type {?} */\n    IfStmt.prototype.falseCase;\n}\nexport class CommentStmt extends Statement {\n    /**\n     * @param {?} comment\n     * @param {?=} sourceSpan\n     */\n    constructor(comment, sourceSpan) {\n        super(null, sourceSpan);\n        this.comment = comment;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    }\n}\nfunction CommentStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CommentStmt.prototype.comment;\n}\nexport class TryCatchStmt extends Statement {\n    /**\n     * @param {?} bodyStmts\n     * @param {?} catchStmts\n     * @param {?=} sourceSpan\n     */\n    constructor(bodyStmts, catchStmts, sourceSpan) {\n        super(null, sourceSpan);\n        this.bodyStmts = bodyStmts;\n        this.catchStmts = catchStmts;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    }\n}\nfunction TryCatchStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    TryCatchStmt.prototype.bodyStmts;\n    /** @type {?} */\n    TryCatchStmt.prototype.catchStmts;\n}\nexport class ThrowStmt extends Statement {\n    /**\n     * @param {?} error\n     * @param {?=} sourceSpan\n     */\n    constructor(error, sourceSpan) {\n        super(null, sourceSpan);\n        this.error = error;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    visitStatement(visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    }\n}\nfunction ThrowStmt_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ThrowStmt.prototype.error;\n}\nexport class AstTransformer {\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    transformExpr(expr, context) { return expr; }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    transformStmt(stmt, context) { return stmt; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) { return this.transformExpr(ast, context); }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWritePropExpr(expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeMethodExpr(ast, context) {\n        const /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralExpr(ast, context) { return this.transformExpr(ast, context); }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExternalExpr(ast, context) {\n        return this.transformExpr(ast, context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditionalExpr(ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNotExpr(ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCastExpr(ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionExpr(ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadPropExpr(ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, context) {\n        const /** @type {?} */ entries = ast.entries.map((entry) => new LiteralMapEntry(entry.key, entry.value.visitExpression(this, context), entry.quoted));\n        const /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    }\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllExpressions(exprs, context) {\n        return exprs.map(expr => expr.visitExpression(this, context));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitReturnStmt(stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        const /** @type {?} */ parent = ((stmt.parent)).visitExpression(this, context);\n        const /** @type {?} */ getters = stmt.getters.map(getter => new ClassGetter(getter.name, this.visitAllStatements(getter.body, context), getter.type, getter.modifiers));\n        const /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        const /** @type {?} */ methods = stmt.methods.map(method => new ClassMethod(method.name, method.params, this.visitAllStatements(method.body, context), method.type, method.modifiers));\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitIfStmt(stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitThrowStmt(stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) {\n        return this.transformStmt(stmt, context);\n    }\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllStatements(stmts, context) {\n        return stmts.map(stmt => stmt.visitStatement(this, context));\n    }\n}\nexport class RecursiveAstVisitor {\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) { return ast; }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, context) {\n        expr.value.visitExpression(this, context);\n        return expr;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.index.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    visitWritePropExpr(expr, context) {\n        expr.receiver.visitExpression(this, context);\n        expr.value.visitExpression(this, context);\n        return expr;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeMethodExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralExpr(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitExternalExpr(ast, context) { return ast; }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitConditionalExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNotExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, context) {\n        ast.condition.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCastExpr(ast, context) {\n        ast.value.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitFunctionExpr(ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadPropExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, context) {\n        ast.entries.forEach((entry) => entry.value.visitExpression(this, context));\n        return ast;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n    }\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllExpressions(exprs, context) {\n        exprs.forEach(expr => expr.visitExpression(this, context));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitReturnStmt(stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(getter => this.visitAllStatements(getter.body, context));\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(method => this.visitAllStatements(method.body, context));\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitIfStmt(stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitThrowStmt(stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) { return stmt; }\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    visitAllStatements(stmts, context) {\n        stmts.forEach(stmt => stmt.visitStatement(this, context));\n    }\n}\n/**\n * @param {?} stmts\n * @return {?}\n */\nexport function findReadVarNames(stmts) {\n    const /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nclass _ReadVarVisitor extends RecursiveAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.varNames = new Set();\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReadVarExpr(ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    }\n}\nfunction _ReadVarVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ReadVarVisitor.prototype.varNames;\n}\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    const /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nexport function applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    const /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nclass _ApplySourceSpanTransformer extends AstTransformer {\n    /**\n     * @param {?} sourceSpan\n     */\n    constructor(sourceSpan) {\n        super();\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _clone(obj) {\n        const /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (let /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    transformExpr(expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    transformStmt(stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    }\n}\nfunction _ApplySourceSpanTransformer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ApplySourceSpanTransformer.prototype.sourceSpan;\n}\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function importExpr(id, typeParams = null, sourceSpan) {\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function importType(id, typeParams = null, typeModifiers = null) {\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nexport function expressionType(expr, typeModifiers = null) {\n    return expr != null ? ((new ExpressionType(expr, typeModifiers))) : null;\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nexport function literalMap(values, type = null) {\n    return new LiteralMapExpr(values.map(e => new LiteralMapEntry(e.key, e.value, e.quoted)), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nexport function literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n//# sourceMappingURL=output_ast.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/output_ast.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { visitValue } from '../util';\nimport * as o from './output_ast';\nexport const /** @type {?} */ QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nexport function convertValueToOutputAst(ctx, value, type = null) {\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nclass _ValueOutputAstTransformer {\n    /**\n     * @param {?} ctx\n     */\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    visitArray(arr, type) {\n        return o.literalArr(arr.map(value => visitValue(value, this, null)), type);\n    }\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    visitStringMap(map, type) {\n        const /** @type {?} */ entries = [];\n        const /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(key => {\n            entries.push(new o.LiteralMapEntry(key, visitValue(map[key], this, null), quotedSet.has(key)));\n        });\n        return new o.LiteralMapExpr(entries, type);\n    }\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    visitPrimitive(value, type) { return o.literal(value, type); }\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    visitOther(value, type) {\n        if (value instanceof o.Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    }\n}\nfunction _ValueOutputAstTransformer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ValueOutputAstTransformer.prototype.ctx;\n}\n//# sourceMappingURL=value_util.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/value_util.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ProviderAstType } from '../template_parser/template_ast';\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nexport function providerDef(ctx, providerAst) {\n    let /** @type {?} */ flags = 0 /* None */;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach((lifecycleHook) => {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    const { providerExpr, flags: providerFlags, depsExpr } = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]);\n    return {\n        providerExpr,\n        flags: providerFlags, depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    const /** @type {?} */ allDepDefs = [];\n    const /** @type {?} */ allParams = [];\n    const /** @type {?} */ exprs = providers.map((provider, providerIndex) => {\n        let /** @type {?} */ expr;\n        if (provider.useClass) {\n            const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            const /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            const /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    const /** @type {?} */ providerExpr = o.fn(allParams, [new o.ReturnStatement(o.literalArr(exprs))], o.INFERRED_TYPE);\n    return {\n        providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: o.literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map((dep, depIndex) => {\n            const /** @type {?} */ paramName = `p${providerIndex}_${depIndex}`;\n            allParams.push(new o.FnParam(paramName, o.DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return o.variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    let /** @type {?} */ providerExpr;\n    let /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = o.NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    const /** @type {?} */ depsExpr = o.literalArr(deps.map(dep => depDef(ctx, dep)));\n    return { providerExpr, flags, depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        o.literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nexport function depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    const /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    let /** @type {?} */ flags = 0 /* None */;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : o.literalArr([o.literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nexport function lifecycleHookToNodeFlag(lifecycleHook) {\n    let /** @type {?} */ nodeFlag = 0 /* None */;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nexport function componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    const /** @type {?} */ entryComponentFactories = entryComponents.map((entryComponent) => ctx.importExpr(entryComponent.componentFactory));\n    const /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    const /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: o.literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    const { providerExpr, flags: providerFlags, depsExpr } = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token,\n        multi: false,\n        useClass: classMeta,\n    });\n    return { providerExpr, flags: providerFlags, depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n//# sourceMappingURL=provider_compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/view_compiler/provider_compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { identifierName } from './compile_metadata';\nimport { CompileReflector } from './compile_reflector';\nimport { Identifiers } from './identifiers';\nimport { CompilerInjectable } from './injectable';\nimport * as o from './output/output_ast';\nimport { typeSourceSpan } from './parse_util';\nimport { NgModuleProviderAnalyzer } from './provider_analyzer';\nimport { componentFactoryResolverProviderDef, providerDef } from './view_compiler/provider_compiler';\nexport class NgModuleCompileResult {\n    /**\n     * @param {?} ngModuleFactoryVar\n     */\n    constructor(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n}\nfunction NgModuleCompileResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleCompileResult.prototype.ngModuleFactoryVar;\n}\nconst /** @type {?} */ LOG_VAR = o.variable('_l');\nexport class NgModuleCompiler {\n    /**\n     * @param {?} reflector\n     */\n    constructor(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    compile(ctx, ngModuleMeta, extraProviders) {\n        const /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        const /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        const /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        const /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        const /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map((provider) => providerDef(ctx, provider)))\n            .map(({ providerExpr, depsExpr, flags, tokenExpr }) => {\n            return o.importExpr(Identifiers.moduleProviderDef).callFn([\n                o.literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        const /** @type {?} */ ngModuleDef = o.importExpr(Identifiers.moduleDef).callFn([o.literalArr(providerDefs)]);\n        const /** @type {?} */ ngModuleDefFactory = o.fn([new o.FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new o.ReturnStatement(ngModuleDef)], o.INFERRED_TYPE);\n        const /** @type {?} */ ngModuleFactoryVar = `${identifierName(ngModuleMeta.type)}NgFactory`;\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, o.importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            o.literalArr(bootstrapComponents.map(id => ctx.importExpr(id.reference))),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            const /** @type {?} */ registerFactoryStmt = o.importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([o.literal(ngModuleMeta.id), o.variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    createStub(ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, o.NULL_EXPR);\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    _createNgModuleFactory(ctx, reference, value) {\n        const /** @type {?} */ ngModuleFactoryVar = `${identifierName({ reference: reference })}NgFactory`;\n        const /** @type {?} */ ngModuleFactoryStmt = o.variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(o.importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((o.expressionType(ctx.importExpr(reference))))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    }\n}\nNgModuleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nNgModuleCompiler.ctorParameters = () => [\n    { type: CompileReflector, },\n];\nfunction NgModuleCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    NgModuleCompiler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    NgModuleCompiler.ctorParameters;\n    /** @type {?} */\n    NgModuleCompiler.prototype.reflector;\n}\n//# sourceMappingURL=ng_module_compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/ng_module_compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { utf8Encode } from '../util';\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nconst /** @type {?} */ VERSION = 3;\nconst /** @type {?} */ JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nexport class SourceMapGenerator {\n    /**\n     * @param {?=} file\n     */\n    constructor(file = null) {\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    addSource(url, content = null) {\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    addLine() {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    }\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    addMapping(col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(`A line must be added before mappings can be added`);\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(`Unknown source file \"${sourceUrl}\"`);\n        }\n        if (col0 == null) {\n            throw new Error(`The column in the generated code must be provided`);\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(`Mapping should be added in output order`);\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(`The source location must be provided when a source url is provided`);\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0, sourceUrl, sourceLine0, sourceCol0 });\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    get currentLine() { return this.lines.slice(-1)[0]; }\n    /**\n     * @return {?}\n     */\n    toJSON() {\n        if (!this.hasMappings) {\n            return null;\n        }\n        const /** @type {?} */ sourcesIndex = new Map();\n        const /** @type {?} */ sources = [];\n        const /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach((url, i) => {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(this.sourcesContent.get(url) || null);\n        });\n        let /** @type {?} */ mappings = '';\n        let /** @type {?} */ lastCol0 = 0;\n        let /** @type {?} */ lastSourceIndex = 0;\n        let /** @type {?} */ lastSourceLine0 = 0;\n        let /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(segments => {\n            lastCol0 = 0;\n            mappings += segments\n                .map(segment => {\n                // zero-based starting column of the line in the generated code\n                let /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    }\n    /**\n     * @return {?}\n     */\n    toJsComment() {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    }\n}\nfunction SourceMapGenerator_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SourceMapGenerator.prototype.sourcesContent;\n    /** @type {?} */\n    SourceMapGenerator.prototype.lines;\n    /** @type {?} */\n    SourceMapGenerator.prototype.lastCol0;\n    /** @type {?} */\n    SourceMapGenerator.prototype.hasMappings;\n    /** @type {?} */\n    SourceMapGenerator.prototype.file;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function toBase64String(value) {\n    let /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (let /** @type {?} */ i = 0; i < value.length;) {\n        const /** @type {?} */ i1 = value.charCodeAt(i++);\n        const /** @type {?} */ i2 = value.charCodeAt(i++);\n        const /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    let /** @type {?} */ out = '';\n    do {\n        let /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nconst /** @type {?} */ B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(`Can only encode value in the range [0, 63]`);\n    }\n    return B64_DIGITS[value];\n}\n//# sourceMappingURL=source_map.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/source_map.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { SourceMapGenerator } from './source_map';\nconst /** @type {?} */ _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nconst /** @type {?} */ _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nconst /** @type {?} */ _INDENT_WITH = '  ';\nexport const /** @type {?} */ CATCH_ERROR_VAR = o.variable('error', null, null);\nexport const /** @type {?} */ CATCH_STACK_VAR = o.variable('stack', null, null);\n/**\n * @abstract\n */\nexport class OutputEmitter {\n    /**\n     * @abstract\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    emitStatements(srcFilePath, genFilePath, stmts, preamble) { }\n}\nclass _EmittedLine {\n    /**\n     * @param {?} indent\n     */\n    constructor(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n}\nfunction _EmittedLine_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _EmittedLine.prototype.partsLength;\n    /** @type {?} */\n    _EmittedLine.prototype.parts;\n    /** @type {?} */\n    _EmittedLine.prototype.srcSpans;\n    /** @type {?} */\n    _EmittedLine.prototype.indent;\n}\nexport class EmitterVisitorContext {\n    /**\n     * @param {?} _indent\n     */\n    constructor(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    static createRoot() { return new EmitterVisitorContext(0); }\n    /**\n     * @return {?}\n     */\n    get _currentLine() { return this._lines[this._lines.length - 1]; }\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    println(from, lastPart = '') {\n        this.print(from || null, lastPart, true);\n    }\n    /**\n     * @return {?}\n     */\n    lineIsEmpty() { return this._currentLine.parts.length === 0; }\n    /**\n     * @return {?}\n     */\n    lineLength() {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    }\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    print(from, part, newLine = false) {\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    removeEmptyLastLine() {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    incIndent() {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    decIndent() {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    }\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    pushClass(clazz) { this._classes.push(clazz); }\n    /**\n     * @return {?}\n     */\n    popClass() { return ((this._classes.pop())); }\n    /**\n     * @return {?}\n     */\n    get currentClass() {\n        return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n    }\n    /**\n     * @return {?}\n     */\n    toSource() {\n        return this.sourceLines\n            .map(l => l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : '')\n            .join('\\n');\n    }\n    /**\n     * @param {?} sourceFilePath\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    toSourceMapGenerator(sourceFilePath, genFilePath, startsAtLine = 0) {\n        const /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        let /** @type {?} */ firstOffsetMapped = false;\n        const /** @type {?} */ mapFirstOffsetIfNeeded = () => {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(sourceFilePath, ' ').addMapping(0, sourceFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (let /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach((line, lineIdx) => {\n            map.addLine();\n            const /** @type {?} */ spans = line.srcSpans;\n            const /** @type {?} */ parts = line.parts;\n            let /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            let /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                const /** @type {?} */ span = ((spans[spanIdx]));\n                const /** @type {?} */ source = span.start.file;\n                const /** @type {?} */ sourceLine = span.start.line;\n                const /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    setPreambleLineCount(count) { return this._preambleLineCount = count; }\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    spanOf(line, column) {\n        const /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            let /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (let /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                const /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    get sourceLines() {\n        if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n            return this._lines.slice(0, -1);\n        }\n        return this._lines;\n    }\n}\nfunction EmitterVisitorContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    EmitterVisitorContext.prototype._lines;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._classes;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._preambleLineCount;\n    /** @type {?} */\n    EmitterVisitorContext.prototype._indent;\n}\n/**\n * @abstract\n */\nexport class AbstractEmitterVisitor {\n    /**\n     * @param {?} _escapeDollarInStrings\n     */\n    constructor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReturnStmt(stmt, ctx) {\n        ctx.print(stmt, `return `);\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCastExpr(ast, context) { }\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) { }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitIfStmt(stmt, ctx) {\n        ctx.print(stmt, `if (`);\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, `) {`);\n        const /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, ` `);\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, ` `);\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, `} else {`);\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) { }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitThrowStmt(stmt, ctx) {\n        ctx.print(stmt, `throw `);\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCommentStmt(stmt, ctx) {\n        const /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach((line) => { ctx.println(stmt, `// ${line}`); });\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) { }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, ctx) {\n        const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, `${expr.name} = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, ctx) {\n        const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, `[`);\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, `] = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWritePropExpr(expr, ctx) {\n        const /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, `.${expr.name} = `);\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeMethodExpr(expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        let /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, `.${name}(`);\n        this.visitAllExpressions(expr.args, ctx, `,`);\n        ctx.print(expr, `)`);\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} method\n     * @return {?}\n     */\n    getBuiltinMethodName(method) { }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, `(`);\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        let /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case o.BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case o.BuiltinVar.CatchError:\n                    varName = ((CATCH_ERROR_VAR.name));\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = ((CATCH_STACK_VAR.name));\n                    break;\n                default:\n                    throw new Error(`Unknown builtin variable ${ast.builtin}`);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        ctx.print(ast, `new `);\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, `(`);\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) {\n        const /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, `${value}`);\n        }\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) { }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitConditionalExpr(ast, ctx) {\n        ctx.print(ast, `(`);\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitNotExpr(ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @abstract\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) { }\n    /**\n     * @abstract\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, ctx) {\n        let /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case o.BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case o.BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case o.BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case o.BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case o.BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case o.BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case o.BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case o.BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case o.BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case o.BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case o.BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case o.BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case o.BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case o.BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(`Unknown operator ${ast.operator}`);\n        }\n        ctx.print(ast, `(`);\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, ` ${opStr} `);\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadPropExpr(ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, `.`);\n        ctx.print(ast, ast.name);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, `[`);\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, `]`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        ctx.print(ast, `[`);\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, `]`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, ctx) {\n        ctx.print(ast, `{`);\n        this.visitAllObjects(entry => {\n            ctx.print(ast, `${escapeIdentifier(entry.key, this._escapeDollarInStrings, entry.quoted)}:`);\n            entry.value.visitExpression(this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCommaExpr(ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    }\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    visitAllExpressions(expressions, ctx, separator) {\n        this.visitAllObjects(expr => expr.visitExpression(this, ctx), expressions, ctx, separator);\n    }\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    visitAllObjects(handler, expressions, ctx, separator) {\n        let /** @type {?} */ incrementedIndent = false;\n        for (let /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    }\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllStatements(statements, ctx) {\n        statements.forEach((stmt) => stmt.visitStatement(this, ctx));\n    }\n}\nfunction AbstractEmitterVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AbstractEmitterVisitor.prototype._escapeDollarInStrings;\n}\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nexport function escapeIdentifier(input, escapeDollar, alwaysQuote = true) {\n    if (input == null) {\n        return null;\n    }\n    const /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, (...match) => {\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return `\\\\${match[0]}`;\n        }\n    });\n    const /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? `'${body}'` : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    let /** @type {?} */ res = '';\n    for (let /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n//# sourceMappingURL=abstract_emitter.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/abstract_emitter.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR, EmitterVisitorContext } from './abstract_emitter';\nimport * as o from './output_ast';\nconst /** @type {?} */ _debugFilePath = '/debug/lib';\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function debugOutputAstAsTypeScript(ast) {\n    const /** @type {?} */ converter = new _TsEmitterVisitor();\n    const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    const /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach((ast) => {\n        if (ast instanceof o.Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof o.Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof o.Type) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(`Don't know how to print debug info for ${ast}`);\n        }\n    });\n    return ctx.toSource();\n}\nexport class TypeScriptEmitter {\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @return {?}\n     */\n    emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble = '', emitSourceMaps = true) {\n        const /** @type {?} */ converter = new _TsEmitterVisitor();\n        const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        const /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach((reexports, exportedModuleName) => {\n            const /** @type {?} */ reexportsCode = reexports.map(reexport => `${reexport.name} as ${reexport.as}`).join(',');\n            preambleLines.push(`export {${reexportsCode}} from '${exportedModuleName}';`);\n        });\n        converter.importsWithPrefixes.forEach((prefix, importedModuleName) => {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(`imp` +\n                `ort * as ${prefix} from '${importedModuleName}';`);\n        });\n        const /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(srcFilePath, genFilePath, preambleLines.length).toJsComment() :\n            '';\n        const /** @type {?} */ lines = [...preambleLines, ctx.toSource(), sm];\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    }\n    /**\n     * @param {?} srcFilePath\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    emitStatements(srcFilePath, genFilePath, stmts, preamble = '') {\n        return this.emitStatementsAndContext(srcFilePath, genFilePath, stmts, preamble).sourceText;\n    }\n}\nclass _TsEmitterVisitor extends AbstractEmitterVisitor {\n    constructor() {\n        super(false);\n        this.typeExpression = 0;\n        this.importsWithPrefixes = new Map();\n        this.reexports = new Map();\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    visitType(t, ctx, defaultType = 'any') {\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) {\n        const /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != o.INFERRED_TYPE) {\n            ctx.print(ast, `(${value} as any)`);\n            return null;\n        }\n        return super.visitLiteralExpr(ast, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        const /** @type {?} */ result = super.visitLiteralArrayExpr(ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        const /** @type {?} */ result = super.visitAssertNotNullExpr(ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported) && stmt.value instanceof o.ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            const { name, moduleName } = stmt.value.value;\n            if (moduleName) {\n                let /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        if (stmt.hasModifier(o.StmtModifier.Final)) {\n            ctx.print(stmt, `const`);\n        }\n        else {\n            ctx.print(stmt, `var`);\n        }\n        ctx.print(stmt, ` ${stmt.name}`);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, ` = `);\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        ctx.print(ast, `(<`); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, `>`);\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        ctx.print(ast, `new `);\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, `(`);\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, `)`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        ctx.print(stmt, `class ${stmt.name}`);\n        if (stmt.parent != null) {\n            ctx.print(stmt, ` extends `);\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, ` {`);\n        ctx.incIndent();\n        stmt.fields.forEach((field) => this._visitClassField(field, ctx));\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach((getter) => this._visitClassGetter(getter, ctx));\n        stmt.methods.forEach((method) => this._visitClassMethod(method, ctx));\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        ctx.popClass();\n        return null;\n    }\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassField(field, ctx) {\n        if (field.hasModifier(o.StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, `/*private*/ `);\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, `;`);\n    }\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassGetter(getter, ctx) {\n        if (getter.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, `private `);\n        }\n        ctx.print(null, `get ${getter.name}()`);\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, `}`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassConstructor(stmt, ctx) {\n        ctx.print(stmt, `constructor(`);\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n    }\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassMethod(method, ctx) {\n        if (method.hasModifier(o.StmtModifier.Private)) {\n            ctx.print(null, `private `);\n        }\n        ctx.print(null, `${method.name}(`);\n        this._visitParams(method.params, ctx);\n        ctx.print(null, `)`);\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, `}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        ctx.print(ast, `(`);\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, `)`);\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, ` => {`);\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.print(stmt, `export `);\n        }\n        ctx.print(stmt, `function ${stmt.name}(`);\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, `)`);\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, ` {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        ctx.println(stmt, `try {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n        ctx.incIndent();\n        const /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack', null)).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBuiltintType(type, ctx) {\n        let /** @type {?} */ typeStr;\n        switch (type.name) {\n            case o.BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case o.BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case o.BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case o.BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case o.BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(`Unsupported builtin type ${type.name}`);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionType(ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitArrayType(type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, `[]`);\n        return null;\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitMapType(type, ctx) {\n        ctx.print(null, `{[key: string]:`);\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, `}`);\n        return null;\n    }\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    getBuiltinMethodName(method) {\n        let /** @type {?} */ name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(`Unknown builtin method: ${method}`);\n        }\n        return name;\n    }\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitParams(params, ctx) {\n        this.visitAllObjects(param => {\n            ctx.print(null, param.name);\n            this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    }\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitIdentifier(value, typeParams, ctx) {\n        const { name, moduleName } = value;\n        if (moduleName) {\n            let /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = `i${this.importsWithPrefixes.size}`;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, `${prefix}.`);\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            const /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, `<`);\n                this.visitAllObjects(type => type.visitType(this, ctx), /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, `>`);\n            }\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _printColonType(type, ctx, defaultType) {\n        if (type !== o.INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    }\n}\nfunction _TsEmitterVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.typeExpression;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.importsWithPrefixes;\n    /** @type {?} */\n    _TsEmitterVisitor.prototype.reexports;\n}\n//# sourceMappingURL=ts_emitter.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/ts_emitter.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { SecurityContext } from '@angular/core';\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nexport const SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (const /** @type {?} */ spec of specs)\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n//# sourceMappingURL=dom_security_schema.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/schema/dom_security_schema.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, SecurityContext } from '@angular/core';\nimport { CompilerInjectable } from '../injectable';\nimport { isNgContainer, isNgContent } from '../ml_parser/tags';\nimport { dashCaseToCamelCase } from '../util';\nimport { SECURITY_SCHEMA } from './dom_security_schema';\nimport { ElementSchemaRegistry } from './element_schema_registry';\nconst /** @type {?} */ BOOLEAN = 'boolean';\nconst /** @type {?} */ NUMBER = 'number';\nconst /** @type {?} */ STRING = 'string';\nconst /** @type {?} */ OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\n// =================================================================================================\n// =================================================================================================\n// =========== S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P   -  S T O P  ===========\n// =================================================================================================\n// =================================================================================================\n//\n//                       DO NOT EDIT THIS DOM SCHEMA WITHOUT A SECURITY REVIEW!\n//\n// Newly added properties must be security reviewed and assigned an appropriate SecurityContext in\n// dom_security_schema.ts. Reach out to mprobst & rjamet for details.\n//\n// =================================================================================================\nconst /** @type {?} */ SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nconst /** @type {?} */ _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nexport class DomElementSchemaRegistry extends ElementSchemaRegistry {\n    constructor() {\n        super();\n        this._schema = {};\n        SCHEMA.forEach(encodedType => {\n            const type = {};\n            const [strType, strProperties] = encodedType.split('|');\n            const properties = strProperties.split(',');\n            const [typeNames, superName] = strType.split('^');\n            typeNames.split(',').forEach(tag => this._schema[tag.toLowerCase()] = type);\n            const superType = superName && this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach((prop) => { type[prop] = superType[prop]; });\n            }\n            properties.forEach((property) => {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasProperty(tagName, propName, schemaMetas) {\n        if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        const /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    hasElement(tagName, schemaMetas) {\n        if (schemaMetas.some((schema) => schema.name === NO_ERRORS_SCHEMA.name)) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some((schema) => schema.name === CUSTOM_ELEMENTS_SCHEMA.name)) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    }\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    securityContext(tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        let /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    }\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    getMappedPropName(propName) { return _ATTR_TO_PROP[propName] || propName; }\n    /**\n     * @return {?}\n     */\n    getDefaultComponentElementName() { return 'ng-component'; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    validateProperty(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            const /** @type {?} */ msg = `Binding to event property '${name}' is disallowed for security reasons, ` +\n                `please use (${name.slice(2)})=...` +\n                `\\nIf '${name}' is a directive input, make sure the directive is imported by the` +\n                ` current module.`;\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    validateAttribute(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            const /** @type {?} */ msg = `Binding to event attribute '${name}' is disallowed for security reasons, ` +\n                `please use (${name.slice(2)})=...`;\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    }\n    /**\n     * @return {?}\n     */\n    allKnownElementNames() { return Object.keys(this._schema); }\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    normalizeAnimationStyleProperty(propName) {\n        return dashCaseToCamelCase(propName);\n    }\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    normalizeAnimationStyleValue(camelCaseProp, userProvidedProp, val) {\n        let /** @type {?} */ unit = '';\n        const /** @type {?} */ strVal = val.toString().trim();\n        let /** @type {?} */ errorMsg = ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                const /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = `Please provide a CSS unit value for ${userProvidedProp}:${val}`;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    }\n}\nDomElementSchemaRegistry.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nDomElementSchemaRegistry.ctorParameters = () => [];\nfunction DomElementSchemaRegistry_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DomElementSchemaRegistry.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    DomElementSchemaRegistry.ctorParameters;\n    /** @type {?} */\n    DomElementSchemaRegistry.prototype._schema;\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n//# sourceMappingURL=dom_element_schema_registry.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/schema/dom_element_schema_registry.js","export class ShadowCss {\n    constructor() {\n        this.strictStyling = true;\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    shimCssText(cssText, selector, hostSelector = '') {\n        const /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertDirectives(cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertPolyfillDirectivesInCssText(cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function (...m) { return m[2] + '{'; });\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _insertPolyfillRulesInCssText(cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, (...m) => {\n            const /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _scopeCssText(cssText, scopeSelector, hostSelector) {\n        const /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _extractUnscopedRulesFromCssText(cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        let /** @type {?} */ r = '';\n        let /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            const /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertColonHost(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertColonHostContext(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    _convertColonRule(cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function (...m) {\n            if (m[2]) {\n                const /** @type {?} */ parts = m[2].split(',');\n                const /** @type {?} */ r = [];\n                for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n                    const /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    }\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    _colonHostContextPartReplacer(host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    }\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    _colonHostPartReplacer(host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    }\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    _convertShadowDOMSelectors(cssText) {\n        return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n    }\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _scopeSelectors(cssText, scopeSelector, hostSelector) {\n        return processRules(cssText, (rule) => {\n            let /** @type {?} */ selector = rule.selector;\n            let /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    this._scopeSelector(rule.selector, scopeSelector, hostSelector, this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    _scopeSelector(selector, scopeSelector, hostSelector, strict) {\n        return selector.split(',')\n            .map(part => part.trim().split(_shadowDeepSelectors))\n            .map((deepParts) => {\n            const [shallowPart, ...otherParts] = deepParts;\n            const /** @type {?} */ applyScope = (shallowPart) => {\n                if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart), ...otherParts].join(' ');\n        })\n            .join(', ');\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    _selectorNeedsScoping(selector, scopeSelector) {\n        const /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    }\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    _makeScopeMatcher(scopeSelector) {\n        const /** @type {?} */ lre = /\\[/g;\n        const /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applySelectorScope(selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            const /** @type {?} */ replaceBy = this.strictStyling ? `[${hostSelector}]` : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, (hnc, selector) => {\n                return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {\n                    return before + replaceBy + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    }\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    _applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n        const /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n        const /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        const /** @type {?} */ _scopeSelectorPart = (p) => {\n            let /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                const /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    const /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        const /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        let /** @type {?} */ scopedSelector = '';\n        let /** @type {?} */ startIndex = 0;\n        let /** @type {?} */ res;\n        const /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        const /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            const /** @type {?} */ separator = res[1];\n            const /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            const /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += `${scopedPart} ${separator} `;\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    _insertPolyfillHostInCssText(selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    }\n}\nfunction ShadowCss_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ShadowCss.prototype.strictStyling;\n}\nclass SafeSelector {\n    /**\n     * @param {?} selector\n     */\n    constructor(selector) {\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(keep);\n            this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(exp);\n            this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    restore(content) {\n        return content.replace(/__ph-(\\d+)__/g, (ph, index) => this.placeholders[+index]);\n    }\n    /**\n     * @return {?}\n     */\n    content() { return this._content; }\n}\nfunction SafeSelector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    SafeSelector.prototype.placeholders;\n    /** @type {?} */\n    SafeSelector.prototype.index;\n    /** @type {?} */\n    SafeSelector.prototype._content;\n}\nconst /** @type {?} */ _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nconst /** @type {?} */ _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nconst /** @type {?} */ _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst /** @type {?} */ _polyfillHostContext = '-shadowcsscontext';\nconst /** @type {?} */ _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst /** @type {?} */ _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst /** @type {?} */ _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst /** @type {?} */ _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst /** @type {?} */ _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst /** @type {?} */ _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    // Deprecated selectors\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nconst /** @type {?} */ _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nconst /** @type {?} */ _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst /** @type {?} */ _polyfillHostRe = /-shadowcsshost/gim;\nconst /** @type {?} */ _colonHostRe = /:host/gim;\nconst /** @type {?} */ _colonHostContextRe = /:host-context/gim;\nconst /** @type {?} */ _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nconst /** @type {?} */ _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    const /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nconst /** @type {?} */ _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst /** @type {?} */ _curlyRe = /([{}])/g;\nconst /** @type {?} */ OPEN_CURLY = '{';\nconst /** @type {?} */ CLOSE_CURLY = '}';\nconst /** @type {?} */ BLOCK_PLACEHOLDER = '%BLOCK%';\nexport class CssRule {\n    /**\n     * @param {?} selector\n     * @param {?} content\n     */\n    constructor(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n}\nfunction CssRule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CssRule.prototype.selector;\n    /** @type {?} */\n    CssRule.prototype.content;\n}\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nexport function processRules(input, ruleCallback) {\n    const /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    let /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function (...m) {\n        const /** @type {?} */ selector = m[2];\n        let /** @type {?} */ content = '';\n        let /** @type {?} */ suffix = m[4];\n        let /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n}\nclass StringWithEscapedBlocks {\n    /**\n     * @param {?} escapedString\n     * @param {?} blocks\n     */\n    constructor(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n}\nfunction StringWithEscapedBlocks_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StringWithEscapedBlocks.prototype.escapedString;\n    /** @type {?} */\n    StringWithEscapedBlocks.prototype.blocks;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    const /** @type {?} */ inputParts = input.split(_curlyRe);\n    const /** @type {?} */ resultParts = [];\n    const /** @type {?} */ escapedBlocks = [];\n    let /** @type {?} */ bracketCount = 0;\n    let /** @type {?} */ currentBlockParts = [];\n    for (let /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n//# sourceMappingURL=shadow_css.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/shadow_css.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation } from '@angular/core';\nimport { CompileStylesheetMetadata, identifierModuleUrl, identifierName } from './compile_metadata';\nimport { CompilerInjectable } from './injectable';\nimport * as o from './output/output_ast';\nimport { ShadowCss } from './shadow_css';\nimport { UrlResolver } from './url_resolver';\nconst /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nconst /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nexport class StylesCompileDependency {\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} setValue\n     */\n    constructor(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n}\nfunction StylesCompileDependency_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StylesCompileDependency.prototype.name;\n    /** @type {?} */\n    StylesCompileDependency.prototype.moduleUrl;\n    /** @type {?} */\n    StylesCompileDependency.prototype.setValue;\n}\nexport class CompiledStylesheet {\n    /**\n     * @param {?} outputCtx\n     * @param {?} stylesVar\n     * @param {?} dependencies\n     * @param {?} isShimmed\n     * @param {?} meta\n     */\n    constructor(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n}\nfunction CompiledStylesheet_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompiledStylesheet.prototype.outputCtx;\n    /** @type {?} */\n    CompiledStylesheet.prototype.stylesVar;\n    /** @type {?} */\n    CompiledStylesheet.prototype.dependencies;\n    /** @type {?} */\n    CompiledStylesheet.prototype.isShimmed;\n    /** @type {?} */\n    CompiledStylesheet.prototype.meta;\n}\nexport class StyleCompiler {\n    /**\n     * @param {?} _urlResolver\n     */\n    constructor(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    compileComponent(outputCtx, comp) {\n        const /** @type {?} */ template = ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), true);\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    compileStyles(outputCtx, comp, stylesheet) {\n        return this._compileStyles(outputCtx, comp, stylesheet, false);\n    }\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    needsStyleShim(comp) {\n        return ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    _compileStyles(outputCtx, comp, stylesheet, isComponentStylesheet) {\n        const /** @type {?} */ shim = this.needsStyleShim(comp);\n        const /** @type {?} */ styleExpressions = stylesheet.styles.map(plainStyle => o.literal(this._shimIfNeeded(plainStyle, shim)));\n        const /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach((styleUrl) => {\n            const /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, (value) => styleExpressions[exprIndex] = outputCtx.importExpr(value)));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        const /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        const /** @type {?} */ stmt = o.variable(stylesVar)\n            .set(o.literalArr(styleExpressions, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [o.StmtModifier.Final] : [\n            o.StmtModifier.Final, o.StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    }\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    _shimIfNeeded(style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    }\n}\nStyleCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nStyleCompiler.ctorParameters = () => [\n    { type: UrlResolver, },\n];\nfunction StyleCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StyleCompiler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    StyleCompiler.ctorParameters;\n    /** @type {?} */\n    StyleCompiler.prototype._shadowCss;\n    /** @type {?} */\n    StyleCompiler.prototype._urlResolver;\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    let /** @type {?} */ result = `styles`;\n    if (component) {\n        result += `_${identifierName(component.type)}`;\n    }\n    return result;\n}\n//# sourceMappingURL=style_compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/style_compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as cdAst from '../expression_parser/ast';\nimport { Identifiers } from '../identifiers';\nimport * as o from '../output/output_ast';\nexport class EventHandlerVars {\n}\nEventHandlerVars.event = o.variable('$event');\nfunction EventHandlerVars_tsickle_Closure_declarations() {\n    /** @type {?} */\n    EventHandlerVars.event;\n}\nexport class ConvertActionBindingResult {\n    /**\n     * @param {?} stmts\n     * @param {?} allowDefault\n     */\n    constructor(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n}\nfunction ConvertActionBindingResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ConvertActionBindingResult.prototype.stmts;\n    /** @type {?} */\n    ConvertActionBindingResult.prototype.allowDefault;\n}\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nexport function convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    const /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: (argCount) => {\n            // Note: no caching for literal arrays in actions.\n            return (args) => o.literalArr(args);\n        },\n        createLiteralMapConverter: (keys) => {\n            // Note: no caching for literal maps in actions.\n            return (values) => {\n                const /** @type {?} */ entries = keys.map((k, i) => ({\n                    key: k.key,\n                    value: values[i],\n                    quoted: k.quoted,\n                }));\n                return o.literalMap(entries);\n            };\n        },\n        createPipeConverter: (name) => {\n            throw new Error(`Illegal State: Actions are not allowed to contain pipes. Pipe: ${name}`);\n        }\n    }, action);\n    const /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    const /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    const /** @type {?} */ lastIndex = actionStmts.length - 1;\n    let /** @type {?} */ preventDefaultVar = ((null));\n    if (lastIndex >= 0) {\n        const /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        const /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(o.DYNAMIC_TYPE).notIdentical(o.literal(false)))\n                    .toDeclStmt(null, [o.StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nexport function convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nexport class ConvertPropertyBindingResult {\n    /**\n     * @param {?} stmts\n     * @param {?} currValExpr\n     */\n    constructor(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n}\nfunction ConvertPropertyBindingResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ConvertPropertyBindingResult.prototype.stmts;\n    /** @type {?} */\n    ConvertPropertyBindingResult.prototype.currValExpr;\n}\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nexport function convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    const /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    const /** @type {?} */ stmts = [];\n    const /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    const /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (let /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [o.StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    const /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return `tmp_${bindingId}_${temporaryNumber}`;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nexport function temporaryDeclaration(bindingId, temporaryNumber) {\n    return new o.DeclareVarStmt(temporaryName(bindingId, temporaryNumber), o.NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (let /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\nlet _Mode = {};\n_Mode.Statement = 0;\n_Mode.Expression = 1;\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(`Expected a statement, but saw ${ast}`);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(`Expected an expression, but saw ${ast}`);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nclass _BuiltinAstConverter extends cdAst.AstTransformer {\n    /**\n     * @param {?} _converterFactory\n     */\n    constructor(_converterFactory) {\n        super();\n        this._converterFactory = _converterFactory;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitPipe(ast, context) {\n        const /** @type {?} */ args = [ast.exp, ...ast.args].map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralArray(ast, context) {\n        const /** @type {?} */ args = ast.expressions.map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitLiteralMap(ast, context) {\n        const /** @type {?} */ args = ast.values.map(ast => ast.visit(this, context));\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    }\n}\nfunction _BuiltinAstConverter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _BuiltinAstConverter.prototype._converterFactory;\n}\nclass _AstToIrVisitor {\n    /**\n     * @param {?} _localResolver\n     * @param {?} _implicitReceiver\n     * @param {?} bindingId\n     */\n    constructor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitBinary(ast, mode) {\n        let /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = o.BinaryOperator.Plus;\n                break;\n            case '-':\n                op = o.BinaryOperator.Minus;\n                break;\n            case '*':\n                op = o.BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = o.BinaryOperator.Divide;\n                break;\n            case '%':\n                op = o.BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = o.BinaryOperator.And;\n                break;\n            case '||':\n                op = o.BinaryOperator.Or;\n                break;\n            case '==':\n                op = o.BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = o.BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = o.BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = o.BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = o.BinaryOperator.Lower;\n                break;\n            case '>':\n                op = o.BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = o.BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = o.BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(`Unsupported operation ${ast.operation}`);\n        }\n        return convertToStatementIfNeeded(mode, new o.BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitChain(ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitConditional(ast, mode) {\n        const /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPipe(ast, mode) {\n        throw new Error(`Illegal state: Pipes should have been converted into functions. Pipe: ${ast.name}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitFunctionCall(ast, mode) {\n        const /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        let /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitImplicitReceiver(ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitInterpolation(ast, mode) {\n        ensureExpressionMode(mode, ast);\n        const /** @type {?} */ args = [o.literal(ast.expressions.length)];\n        for (let /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(o.literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(o.literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            o.importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            o.importExpr(Identifiers.interpolate).callFn([args[0], o.literalArr(args.slice(1))]);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitKeyedRead(ast, mode) {\n        const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitKeyedWrite(ast, mode) {\n        const /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        const /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        const /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralArray(ast, mode) {\n        throw new Error(`Illegal State: literal arrays should have been converted into functions`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralMap(ast, mode) {\n        throw new Error(`Illegal State: literal maps should have been converted into functions`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitLiteralPrimitive(ast, mode) {\n        return convertToStatementIfNeeded(mode, o.literal(ast.value));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _getLocal(name) { return this._localResolver.getLocal(name); }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitMethodCall(ast, mode) {\n        const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            const /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            let /** @type {?} */ result = null;\n            const /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                const /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPrefixNot(ast, mode) {\n        return convertToStatementIfNeeded(mode, o.not(this._visit(ast.expression, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitNonNullAssert(ast, mode) {\n        return convertToStatementIfNeeded(mode, o.assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPropertyRead(ast, mode) {\n        const /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            let /** @type {?} */ result = null;\n            const /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitPropertyWrite(ast, mode) {\n        const /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            const /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitSafePropertyRead(ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitSafeMethodCall(ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    }\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    visitAll(asts, mode) { return asts.map(ast => this._visit(ast, mode)); }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    visitQuote(ast, mode) {\n        throw new Error(`Quotes are not supported for evaluation!\n        Statement: ${ast.uninterpretedExpression} located at ${ast.location}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _visit(ast, mode) {\n        const /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    convertSafeAccess(ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        let /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        let /** @type {?} */ temporary = ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        const /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof cdAst.SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new cdAst.MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new cdAst.PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        const /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(o.literal(null), access));\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    leftMostSafeNode(ast) {\n        const /** @type {?} */ visit = (visitor, ast) => {\n            return (this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead(ast) { return visit(this, ast.obj); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall(ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead(ast) { return visit(this, ast.receiver); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote(ast) { return null; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall(ast) { return visit(this, ast.receiver) || ast; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead(ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    needsTemporary(ast) {\n        const /** @type {?} */ visit = (visitor, ast) => {\n            return ast && (this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        const /** @type {?} */ visitSome = (visitor, ast) => {\n            return ast.some(ast => visit(visitor, ast));\n        };\n        return ast.visit({\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitBinary(ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitChain(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitConditional(ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitFunctionCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitImplicitReceiver(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitInterpolation(ast) { return visitSome(this, ast.expressions); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedRead(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitKeyedWrite(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralArray(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralMap(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitLiteralPrimitive(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitMethodCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPipe(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPrefixNot(ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitNonNullAssert(ast) { return visit(this, ast.expression); },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyRead(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitPropertyWrite(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitQuote(ast) { return false; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafeMethodCall(ast) { return true; },\n            /**\n             * @param {?} ast\n             * @return {?}\n             */\n            visitSafePropertyRead(ast) { return false; }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    allocateTemporary() {\n        const /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new o.ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    }\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    releaseTemporary(temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(`Temporary ${temporary.name} released out of order`);\n        }\n    }\n}\nfunction _AstToIrVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _AstToIrVisitor.prototype._nodeMap;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._resultMap;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._currentTemporary;\n    /** @type {?} */\n    _AstToIrVisitor.prototype.temporaryCount;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._localResolver;\n    /** @type {?} */\n    _AstToIrVisitor.prototype._implicitReceiver;\n    /** @type {?} */\n    _AstToIrVisitor.prototype.bindingId;\n}\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        ((arg)).forEach((entry) => flattenStatements(entry, output));\n    }\n    else {\n        output.push(arg);\n    }\n}\nclass DefaultLocalResolver {\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    }\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return o.variable(`currVal_${bindingId}`); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return o.variable(`pd_${bindingId}`);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof o.ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof o.ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nclass BuiltinFunctionCall extends cdAst.FunctionCall {\n    /**\n     * @param {?} span\n     * @param {?} args\n     * @param {?} converter\n     */\n    constructor(span, args, converter) {\n        super(span, null, args);\n        this.args = args;\n        this.converter = converter;\n    }\n}\nfunction BuiltinFunctionCall_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BuiltinFunctionCall.prototype.args;\n    /** @type {?} */\n    BuiltinFunctionCall.prototype.converter;\n}\n//# sourceMappingURL=expression_converter.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/compiler_util/expression_converter.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, ɵelementEventFullName as elementEventFullName } from '@angular/core';\nimport { rendererTypeName, tokenReference, viewClassName } from '../compile_metadata';\nimport { CompileReflector } from '../compile_reflector';\nimport { EventHandlerVars, convertActionBinding, convertPropertyBinding, convertPropertyBindingBuiltins } from '../compiler_util/expression_converter';\nimport { Identifiers } from '../identifiers';\nimport { CompilerInjectable } from '../injectable';\nimport { LifecycleHooks } from '../lifecycle_reflector';\nimport { isNgContainer } from '../ml_parser/tags';\nimport * as o from '../output/output_ast';\nimport { convertValueToOutputAst } from '../output/value_util';\nimport { ElementAst, EmbeddedTemplateAst, NgContentAst, PropertyBindingType, templateVisitAll } from '../template_parser/template_ast';\nimport { componentFactoryResolverProviderDef, depDef, lifecycleHookToNodeFlag, providerDef } from './provider_compiler';\nconst /** @type {?} */ CLASS_ATTR = 'class';\nconst /** @type {?} */ STYLE_ATTR = 'style';\nconst /** @type {?} */ IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst /** @type {?} */ NG_CONTAINER_TAG = 'ng-container';\nexport class ViewCompileResult {\n    /**\n     * @param {?} viewClassVar\n     * @param {?} rendererTypeVar\n     */\n    constructor(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n}\nfunction ViewCompileResult_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewCompileResult.prototype.viewClassVar;\n    /** @type {?} */\n    ViewCompileResult.prototype.rendererTypeVar;\n}\nexport class ViewCompiler {\n    /**\n     * @param {?} _reflector\n     */\n    constructor(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    compileComponent(outputCtx, component, template, styles, usedPipes) {\n        let /** @type {?} */ embeddedViewCount = 0;\n        const /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        let /** @type {?} */ renderComponentVarName = ((undefined));\n        if (!component.isHost) {\n            const /** @type {?} */ template = ((component.template));\n            const /** @type {?} */ customRenderData = [];\n            if (template.animations && template.animations.length) {\n                customRenderData.push(new o.LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template.animations), true));\n            }\n            const /** @type {?} */ renderComponentVar = o.variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(o.importExpr(Identifiers.createRendererType2).callFn([new o.LiteralMapExpr([\n                    new o.LiteralMapEntry('encapsulation', o.literal(template.encapsulation), false),\n                    new o.LiteralMapEntry('styles', styles, false),\n                    new o.LiteralMapEntry('data', new o.LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(o.importType(Identifiers.RendererType2), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n        }\n        const /** @type {?} */ viewBuilderFactory = (parent) => {\n            const /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        const /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        outputCtx.statements.push(...visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n    }\n}\nViewCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nViewCompiler.ctorParameters = () => [\n    { type: CompileReflector, },\n];\nfunction ViewCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewCompiler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    ViewCompiler.ctorParameters;\n    /** @type {?} */\n    ViewCompiler.prototype._reflector;\n}\nconst /** @type {?} */ LOG_VAR = o.variable('_l');\nconst /** @type {?} */ VIEW_VAR = o.variable('_v');\nconst /** @type {?} */ CHECK_VAR = o.variable('_ck');\nconst /** @type {?} */ COMP_VAR = o.variable('_co');\nconst /** @type {?} */ EVENT_NAME_VAR = o.variable('en');\nconst /** @type {?} */ ALLOW_DEFAULT_VAR = o.variable(`ad`);\nclass ViewBuilder {\n    /**\n     * @param {?} reflector\n     * @param {?} outputCtx\n     * @param {?} parent\n     * @param {?} component\n     * @param {?} embeddedViewIndex\n     * @param {?} usedPipes\n     * @param {?} staticQueryIds\n     * @param {?} viewBuilderFactory\n     */\n    constructor(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            o.DYNAMIC_TYPE :\n            o.expressionType(outputCtx.importExpr(this.component.type.reference));\n    }\n    /**\n     * @return {?}\n     */\n    get viewName() {\n        return viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    visitAll(variables, astNodes) {\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach((pipe) => {\n                if (pipe.pure) {\n                    this.purePipeNodeIndices[pipe.name] = this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            const /** @type {?} */ queryIds = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach((query, queryIndex) => {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                const /** @type {?} */ queryId = queryIndex + 1;\n                const /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1 /* All */;\n                const /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n                this.nodes.push(() => ({\n                    sourceSpan: null,\n                    nodeFlags: flags,\n                    nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                        o.literal(flags), o.literal(queryId),\n                        new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                    ])\n                }));\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(() => ({\n                sourceSpan: null,\n                nodeFlags: 1 /* TypeElement */,\n                nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                    o.literal(0 /* None */), o.NULL_EXPR, o.NULL_EXPR, o.literal(0)\n                ])\n            }));\n        }\n    }\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    build(targetStatements = []) {\n        this.children.forEach((child) => child.build(targetStatements));\n        const { updateRendererStmts, updateDirectivesStmts, nodeDefExprs } = this._createNodeExpressions();\n        const /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        const /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        let /** @type {?} */ viewFlags = 0 /* None */;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        const /** @type {?} */ viewFactory = new o.DeclareFunctionStmt(this.viewName, [new o.FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new o.ReturnStatement(o.importExpr(Identifiers.viewDef).callFn([\n                o.literal(viewFlags),\n                o.literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], o.importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [o.StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    }\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    _createUpdateFn(updateStmts) {\n        let /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            const /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && o.findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = o.fn([\n                new o.FnParam(/** @type {?} */ ((CHECK_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((VIEW_VAR.name)), o.INFERRED_TYPE)\n            ], [...preStmts, ...updateStmts], o.INFERRED_TYPE);\n        }\n        else {\n            updateFn = o.NULL_EXPR;\n        }\n        return updateFn;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitNgContent(ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(() => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 8 /* TypeNgContent */,\n            nodeDef: o.importExpr(Identifiers.ngContentDef).callFn([\n                o.literal(ast.ngContentIndex), o.literal(ast.index)\n            ])\n        }));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitText(ast, context) {\n        // Static text nodes have no check function\n        const /** @type {?} */ checkIndex = -1;\n        this.nodes.push(() => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr([o.literal(ast.value)]),\n            ])\n        }));\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitBoundText(ast, context) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        const /** @type {?} */ astWithSource = (ast.value);\n        const /** @type {?} */ inter = (astWithSource.ast);\n        const /** @type {?} */ updateRendererExpressions = inter.expressions.map((expr, bindingIndex) => this._preprocessUpdateExpression({ nodeIndex, bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr }));\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        const /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 2 /* TypeText */,\n            nodeDef: o.importExpr(Identifiers.textDef).callFn([\n                o.literal(checkIndex),\n                o.literal(ast.ngContentIndex),\n                o.literalArr(inter.strings.map(s => o.literal(s))),\n            ]),\n            updateRenderer: updateRendererExpressions\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEmbeddedTemplate(ast, context) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        const { flags, queryMatchesExpr, hostEvents } = this._visitElementOrTemplate(nodeIndex, ast);\n        const /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.anchorDef).callFn([\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                this._createElementHandleEventFn(nodeIndex, hostEvents),\n                o.variable(childVisitor.viewName),\n            ])\n        });\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElement(ast, context) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        const /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        const { flags, usedEvents, queryMatchesExpr, hostBindings: dirHostBindings, hostEvents } = this._visitElementOrTemplate(nodeIndex, ast);\n        let /** @type {?} */ inputDefs = [];\n        let /** @type {?} */ updateRendererExpressions = [];\n        let /** @type {?} */ outputDefs = [];\n        if (elName) {\n            const /** @type {?} */ hostBindings = ast.inputs\n                .map((inputAst) => ({\n                context: /** @type {?} */ (COMP_VAR),\n                inputAst,\n                dirAst: /** @type {?} */ (null),\n            }))\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map((hostBinding, bindingIndex) => this._preprocessUpdateExpression({\n                        context: hostBinding.context,\n                        nodeIndex,\n                        bindingIndex,\n                        sourceSpan: hostBinding.inputAst.sourceSpan,\n                        value: hostBinding.inputAst.value\n                    }));\n                inputDefs = hostBindings.map(hostBinding => elementBindingDef(hostBinding.inputAst, hostBinding.dirAst));\n            }\n            outputDefs = usedEvents.map(([target, eventName]) => o.literalArr([o.literal(target), o.literal(eventName)]));\n        }\n        templateVisitAll(this, ast.children);\n        const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        const /** @type {?} */ compAst = ast.directives.find(dirAst => dirAst.directive.isComponent);\n        let /** @type {?} */ compRendererType = (o.NULL_EXPR);\n        let /** @type {?} */ compView = (o.NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        const /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: ast.sourceSpan,\n            nodeFlags: 1 /* TypeElement */ | flags,\n            nodeDef: o.importExpr(Identifiers.elementDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchesExpr,\n                o.literal(ast.ngContentIndex),\n                o.literal(childCount),\n                o.literal(elName),\n                elName ? fixedAttrsDef(ast) : o.NULL_EXPR,\n                inputDefs.length ? o.literalArr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? o.literalArr(outputDefs) : o.NULL_EXPR,\n                this._createElementHandleEventFn(nodeIndex, hostEvents),\n                compView,\n                compRendererType,\n            ]),\n            updateRenderer: updateRendererExpressions\n        });\n    }\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    _visitElementOrTemplate(nodeIndex, ast) {\n        let /** @type {?} */ flags = 0 /* None */;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        const /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach((event) => {\n            const { name, target } = elementEventNameAndTarget(event, null);\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach((dirAst) => {\n            dirAst.hostEvents.forEach((event) => {\n                const { name, target } = elementEventNameAndTarget(event, dirAst);\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        const /** @type {?} */ hostBindings = [];\n        const /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach((providerAst, providerIndex) => {\n            let /** @type {?} */ dirAst = ((undefined));\n            let /** @type {?} */ dirIndex = ((undefined));\n            ast.directives.forEach((localDirAst, i) => {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                const { hostBindings: dirHostBindings, hostEvents: dirHostEvents } = this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((this.staticQueryIds.get(/** @type {?} */ (ast)))));\n                hostBindings.push(...dirHostBindings);\n                hostEvents.push(...dirHostEvents);\n            }\n            else {\n                this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        let /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach((match) => {\n            let /** @type {?} */ valueType = ((undefined));\n            if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(valueType)]));\n            }\n        });\n        ast.references.forEach((ref) => {\n            let /** @type {?} */ valueType = ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach((outputAst) => {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n            hostBindings,\n            hostEvents: hostEvents\n        };\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    _visitDirective(providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach((query, queryIndex) => {\n            const /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            const /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            const /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1 /* All */;\n            this.nodes.push(() => ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: flags,\n                nodeDef: o.importExpr(Identifiers.queryDef).callFn([\n                    o.literal(flags), o.literal(queryId),\n                    new o.LiteralMapExpr([new o.LiteralMapEntry(query.propertyName, o.literal(bindingType), false)])\n                ]),\n            }));\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        const /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        let { flags, queryMatchExprs, providerExpr, depsExpr } = this._visitProviderOrDirective(providerAst, queryMatches);\n        refs.forEach((ref) => {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(o.literalArr([o.literal(ref.name), o.literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        const /** @type {?} */ inputDefs = dirAst.inputs.map((inputAst, inputIndex) => {\n            const /** @type {?} */ mapValue = o.literalArr([o.literal(inputIndex), o.literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new o.LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        const /** @type {?} */ outputDefs = [];\n        const /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach((propName) => {\n            const /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new o.LiteralMapEntry(propName, o.literal(eventName), false));\n            }\n        });\n        let /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map((input, bindingIndex) => this._preprocessUpdateExpression({\n                    nodeIndex,\n                    bindingIndex,\n                    sourceSpan: input.sourceSpan,\n                    context: COMP_VAR,\n                    value: input.value\n                }));\n        }\n        const /** @type {?} */ dirContextExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n        const /** @type {?} */ hostBindings = dirAst.hostProperties.map((inputAst) => ({\n            context: dirContextExpr,\n            dirAst,\n            inputAst,\n        }));\n        const /** @type {?} */ hostEvents = dirAst.hostEvents.map((hostEventAst) => ({\n            context: dirContextExpr,\n            eventAst: hostEventAst, dirAst,\n        }));\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        const /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = () => ({\n            sourceSpan: dirAst.sourceSpan,\n            nodeFlags: 16384 /* TypeDirective */ | flags,\n            nodeDef: o.importExpr(Identifiers.directiveDef).callFn([\n                o.literal(checkIndex),\n                o.literal(flags),\n                queryMatchExprs.length ? o.literalArr(queryMatchExprs) : o.NULL_EXPR,\n                o.literal(childCount),\n                providerExpr,\n                depsExpr,\n                inputDefs.length ? new o.LiteralMapExpr(inputDefs) : o.NULL_EXPR,\n                outputDefs.length ? new o.LiteralMapExpr(outputDefs) : o.NULL_EXPR,\n            ]),\n            updateDirectives: updateDirectiveExpressions,\n            directive: dirAst.directive.type,\n        });\n        return { hostBindings, hostEvents };\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    _visitProvider(providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    }\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    _visitComponentFactoryResolverProvider(directives) {\n        const /** @type {?} */ componentDirMeta = directives.find(dirAst => dirAst.directive.isComponent);\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            const { providerExpr, depsExpr, flags, tokenExpr } = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents);\n            this._addProviderNode({\n                providerExpr,\n                depsExpr,\n                flags,\n                tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    _addProviderNode(data) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(() => ({\n            sourceSpan: data.sourceSpan,\n            nodeFlags: data.flags,\n            nodeDef: o.importExpr(Identifiers.providerDef).callFn([\n                o.literal(data.flags),\n                data.queryMatchExprs.length ? o.literalArr(data.queryMatchExprs) : o.NULL_EXPR,\n                data.tokenExpr, data.providerExpr, data.depsExpr\n            ])\n        }));\n    }\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    _visitProviderOrDirective(providerAst, queryMatches) {\n        let /** @type {?} */ flags = 0 /* None */;\n        let /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach((match) => {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(o.literalArr([o.literal(match.queryId), o.literal(4 /* Provider */)]));\n            }\n        });\n        const { providerExpr, depsExpr, flags: providerFlags, tokenExpr } = providerDef(this.outputCtx, providerAst);\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs,\n            providerExpr,\n            depsExpr,\n            tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getLocal(name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        let /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (let /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(o.DYNAMIC_TYPE)) {\n            // check references\n            const /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return o.importExpr(Identifiers.nodeValue).callFn([currViewExpr, o.literal(refNodeIndex)]);\n            }\n            // check variables\n            const /** @type {?} */ varAst = currBuilder.variables.find((varAst) => varAst.name === name);\n            if (varAst) {\n                const /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    _createLiteralArrayConverter(sourceSpan, argCount) {\n        if (argCount === 0) {\n            const /** @type {?} */ valueExpr = o.importExpr(Identifiers.EMPTY_ARRAY);\n            return () => valueExpr;\n        }\n        const /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 32 /* TypePureArray */,\n            nodeDef: o.importExpr(Identifiers.pureArrayDef).callFn([\n                o.literal(checkIndex),\n                o.literal(argCount),\n            ])\n        }));\n        return (args) => callCheckStmt(checkIndex, args);\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    _createLiteralMapConverter(sourceSpan, keys) {\n        if (keys.length === 0) {\n            const /** @type {?} */ valueExpr = o.importExpr(Identifiers.EMPTY_MAP);\n            return () => valueExpr;\n        }\n        const /** @type {?} */ map = o.literalMap(keys.map((e, i) => (Object.assign({}, e, { value: o.literal(i) }))));\n        const /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 64 /* TypePureObject */,\n            nodeDef: o.importExpr(Identifiers.pureObjectDef).callFn([\n                o.literal(checkIndex),\n                map,\n            ])\n        }));\n        return (args) => callCheckStmt(checkIndex, args);\n    }\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    _createPipeConverter(expression, name, argCount) {\n        const /** @type {?} */ pipe = ((this.usedPipes.find((pipeSummary) => pipeSummary.name === name)));\n        if (pipe.pure) {\n            const /** @type {?} */ checkIndex = this.nodes.length;\n            this.nodes.push(() => ({\n                sourceSpan: expression.sourceSpan,\n                nodeFlags: 128 /* TypePurePipe */,\n                nodeDef: o.importExpr(Identifiers.purePipeDef).callFn([\n                    o.literal(checkIndex),\n                    o.literal(argCount),\n                ])\n            }));\n            // find underlying pipe in the component view\n            let /** @type {?} */ compViewExpr = VIEW_VAR;\n            let /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(o.DYNAMIC_TYPE);\n            }\n            const /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            const /** @type {?} */ pipeValueExpr = o.importExpr(Identifiers.nodeValue).callFn([compViewExpr, o.literal(pipeNodeIndex)]);\n            return (args) => callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex, [pipeValueExpr].concat(args)));\n        }\n        else {\n            const /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            const /** @type {?} */ nodeValueExpr = o.importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, o.literal(nodeIndex)]);\n            return (args) => callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr.callMethod('transform', args));\n        }\n    }\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    _createPipe(sourceSpan, pipe) {\n        const /** @type {?} */ nodeIndex = this.nodes.length;\n        let /** @type {?} */ flags = 0 /* None */;\n        pipe.type.lifecycleHooks.forEach((lifecycleHook) => {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        const /** @type {?} */ depExprs = pipe.type.diDeps.map((diDep) => depDef(this.outputCtx, diDep));\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(() => ({\n            sourceSpan,\n            nodeFlags: 16 /* TypePipe */,\n            nodeDef: o.importExpr(Identifiers.pipeDef).callFn([\n                o.literal(flags), this.outputCtx.importExpr(pipe.type.reference), o.literalArr(depExprs)\n            ])\n        }));\n        return nodeIndex;\n    }\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    _preprocessUpdateExpression(expression) {\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: (argCount) => this._createLiteralArrayConverter(expression.sourceSpan, argCount),\n                createLiteralMapConverter: (keys) => this._createLiteralMapConverter(expression.sourceSpan, keys),\n                createPipeConverter: (name, argCount) => this._createPipeConverter(expression, name, argCount)\n            }, expression.value)\n        };\n    }\n    /**\n     * @return {?}\n     */\n    _createNodeExpressions() {\n        const /** @type {?} */ self = this;\n        let /** @type {?} */ updateBindingCount = 0;\n        const /** @type {?} */ updateRendererStmts = [];\n        const /** @type {?} */ updateDirectivesStmts = [];\n        const /** @type {?} */ nodeDefExprs = this.nodes.map((factory, nodeIndex) => {\n            const { nodeDef, nodeFlags, updateDirectives, updateRenderer, sourceSpan } = factory();\n            if (updateRenderer) {\n                updateRendererStmts.push(...createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push(...createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            const /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new o.CommaExpr([LOG_VAR.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return o.applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts, updateDirectivesStmts, nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            const /** @type {?} */ updateStmts = [];\n            const /** @type {?} */ exprs = expressions.map(({ sourceSpan, context, value }) => {\n                const /** @type {?} */ bindingId = `${updateBindingCount++}`;\n                const /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                const { stmts, currValExpr } = convertPropertyBinding(nameResolver, context, value, bindingId);\n                updateStmts.push(...stmts.map((stmt) => o.applySourceSpanToStatementIfNeeded(stmt, sourceSpan)));\n                return o.applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(o.applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    }\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    _createElementHandleEventFn(nodeIndex, handlers) {\n        const /** @type {?} */ handleEventStmts = [];\n        let /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(({ context, eventAst, dirAst }) => {\n            const /** @type {?} */ bindingId = `${handleEventBindingCount++}`;\n            const /** @type {?} */ nameResolver = context === COMP_VAR ? this : null;\n            const { stmts, allowDefault } = convertActionBinding(nameResolver, context, eventAst.handler, bindingId);\n            const /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            const { target: eventTarget, name: eventName } = elementEventNameAndTarget(eventAst, dirAst);\n            const /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(o.applySourceSpanToStatementIfNeeded(new o.IfStmt(o.literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        let /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            const /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE)];\n            if (!this.component.isHost && o.findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = o.fn([\n                new o.FnParam(/** @type {?} */ ((VIEW_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), o.INFERRED_TYPE),\n                new o.FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), o.INFERRED_TYPE)\n            ], [...preStmts, ...handleEventStmts, new o.ReturnStatement(ALLOW_DEFAULT_VAR)], o.INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = o.NULL_EXPR;\n        }\n        return handleEventFn;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirective(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitDirectiveProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitReference(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitVariable(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitEvent(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitElementProperty(ast, context) { }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitAttr(ast, context) { }\n}\nfunction ViewBuilder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ViewBuilder.prototype.compType;\n    /** @type {?} */\n    ViewBuilder.prototype.nodes;\n    /** @type {?} */\n    ViewBuilder.prototype.purePipeNodeIndices;\n    /** @type {?} */\n    ViewBuilder.prototype.refNodeIndices;\n    /** @type {?} */\n    ViewBuilder.prototype.variables;\n    /** @type {?} */\n    ViewBuilder.prototype.children;\n    /** @type {?} */\n    ViewBuilder.prototype.reflector;\n    /** @type {?} */\n    ViewBuilder.prototype.outputCtx;\n    /** @type {?} */\n    ViewBuilder.prototype.parent;\n    /** @type {?} */\n    ViewBuilder.prototype.component;\n    /** @type {?} */\n    ViewBuilder.prototype.embeddedViewIndex;\n    /** @type {?} */\n    ViewBuilder.prototype.usedPipes;\n    /** @type {?} */\n    ViewBuilder.prototype.staticQueryIds;\n    /** @type {?} */\n    ViewBuilder.prototype.viewBuilderFactory;\n}\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    const /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return o.literalArr([\n                o.literal(1 /* TypeElementAttribute */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return o.literalArr([\n                o.literal(8 /* TypeProperty */), o.literal(inputAst.name),\n                o.literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            const /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return o.literalArr([\n                o.literal(bindingType), o.literal('@' + inputAst.name), o.literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return o.literalArr([o.literal(2 /* TypeElementClass */), o.literal(inputAst.name), o.NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return o.literalArr([\n                o.literal(4 /* TypeElementStyle */), o.literal(inputAst.name), o.literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    const /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(attrAst => { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(dirAst => {\n        Object.keys(dirAst.directive.hostAttributes).forEach(name => {\n            const /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            const /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return o.literalArr(Object.keys(mapResult).sort().map((attrName) => o.literalArr([o.literal(attrName), o.literal(mapResult[attrName])])));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n        return `${attrValue1} ${attrValue2}`;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(1 /* Dynamic */), o.literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, o.literal(nodeIndex), o.literal(0 /* Inline */), ...exprs]);\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return o.importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, o.literal(nodeIndex), o.literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result = new Map()) {\n    nodes.forEach((node) => {\n        const /** @type {?} */ staticQueryIds = new Set();\n        const /** @type {?} */ dynamicQueryIds = new Set();\n        let /** @type {?} */ queryMatches = ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach((child) => {\n                const /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n                childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach((child) => {\n                const /** @type {?} */ childData = ((result.get(child)));\n                childData.staticQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n                childData.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach((match) => staticQueryIds.add(match.queryId));\n        }\n        dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n        result.set(node, { staticQueryIds, dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    const /** @type {?} */ staticQueryIds = new Set();\n    const /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach((entry) => {\n        entry.staticQueryIds.forEach(queryId => staticQueryIds.add(queryId));\n        entry.dynamicQueryIds.forEach(queryId => dynamicQueryIds.add(queryId));\n    });\n    dynamicQueryIds.forEach(queryId => staticQueryIds.delete(queryId));\n    return { staticQueryIds, dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: `@${eventAst.name}.${eventAst.phase}`,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    let /** @type {?} */ flags = 0 /* None */;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n//# sourceMappingURL=view_compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/view_compiler/view_compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { sourceUrl } from '../compile_metadata';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nexport class GeneratedFile {\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} genFileUrl\n     * @param {?} sourceOrStmts\n     */\n    constructor(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n}\nfunction GeneratedFile_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GeneratedFile.prototype.source;\n    /** @type {?} */\n    GeneratedFile.prototype.stmts;\n    /** @type {?} */\n    GeneratedFile.prototype.srcFileUrl;\n    /** @type {?} */\n    GeneratedFile.prototype.genFileUrl;\n}\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nexport function toTypeScript(file, preamble = '') {\n    if (!file.stmts) {\n        throw new Error(`Illegal state: No stmts present on GeneratedFile ${file.genFileUrl}`);\n    }\n    return new TypeScriptEmitter().emitStatements(sourceUrl(file.srcFileUrl), file.genFileUrl, file.stmts, preamble);\n}\n//# sourceMappingURL=generated_file.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/generated_file.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { CompileNgModuleMetadata, CompileSummaryKind } from '../compile_metadata';\nimport * as o from '../output/output_ast';\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { summaryForJitFileName, summaryForJitName } from './util';\n/**\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nexport function serializeSummaries(forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    const /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver);\n    const /** @type {?} */ forJitSerializer = new ForJitSerializer(forJitCtx, symbolResolver);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach((resolvedSymbol) => toJsonSerializer.addOrMergeSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata }));\n    // Add summaries that are referenced by the given symbols (transitively)\n    // Note: the serializer.symbols array might be growing while\n    // we execute the loop!\n    for (let /** @type {?} */ processedIndex = 0; processedIndex < toJsonSerializer.symbols.length; processedIndex++) {\n        const /** @type {?} */ symbol = toJsonSerializer.symbols[processedIndex];\n        if (summaryResolver.isLibraryFile(symbol.filePath)) {\n            let /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n            if (!summary) {\n                // some symbols might originate from a plain typescript library\n                // that just exported .d.ts and .metadata.json files, i.e. where no summary\n                // files were created.\n                const /** @type {?} */ resolvedSymbol = symbolResolver.resolveSymbol(symbol);\n                if (resolvedSymbol) {\n                    summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n                }\n            }\n            if (summary) {\n                if (summary.type) {\n                    forJitSerializer.addLibType(summary.type);\n                }\n                toJsonSerializer.addOrMergeSummary(summary);\n            }\n        }\n    }\n    // Add type summaries.\n    // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n    // as the type summaries already contain the transitive data that they require\n    // (in a minimal way).\n    types.forEach(({ summary, metadata }) => {\n        forJitSerializer.addSourceType(summary, metadata);\n        toJsonSerializer.addOrMergeSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        if (summary.summaryKind === CompileSummaryKind.NgModule) {\n            const /** @type {?} */ ngModuleSummary = (summary);\n            ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach((id) => {\n                const /** @type {?} */ symbol = id.reference;\n                if (summaryResolver.isLibraryFile(symbol.filePath)) {\n                    const /** @type {?} */ summary = summaryResolver.resolveSummary(symbol);\n                    if (summary) {\n                        toJsonSerializer.addOrMergeSummary(summary);\n                    }\n                }\n            });\n        }\n    });\n    const { json, exportAs } = toJsonSerializer.serialize();\n    forJitSerializer.serialize(exportAs);\n    return { json, exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} json\n * @return {?}\n */\nexport function deserializeSummaries(symbolCache, json) {\n    const /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache);\n    return deserializer.deserialize(json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nexport function createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, o.NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    const /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(o.fn([], [new o.ReturnStatement(value)], new o.ArrayType(o.DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        o.StmtModifier.Final, o.StmtModifier.Exported\n    ]));\n}\nclass ToJsonSerializer extends ValueTransformer {\n    /**\n     * @param {?} symbolResolver\n     * @param {?} summaryResolver\n     */\n    constructor(symbolResolver, summaryResolver) {\n        super();\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        // Note: This only contains symbols without members.\n        this.symbols = [];\n        this.indexBySymbol = new Map();\n        this.processedSummaryBySymbol = new Map();\n        this.processedSummaries = [];\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addOrMergeSummary(summary) {\n        let /** @type {?} */ symbolMeta = summary.metadata;\n        if (symbolMeta && symbolMeta.__symbolic === 'class') {\n            // For classes, we keep everything except their class decorators.\n            // We need to keep e.g. the ctor args, method names, method decorators\n            // so that the class can be extended in another compilation unit.\n            // We don't keep the class decorators as\n            // 1) they refer to data\n            //   that should not cause a rebuild of downstream compilation units\n            //   (e.g. inline templates of @Component, or @NgModule.declarations)\n            // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n            const /** @type {?} */ clone = {};\n            Object.keys(symbolMeta).forEach((propName) => {\n                if (propName !== 'decorators') {\n                    clone[propName] = symbolMeta[propName];\n                }\n            });\n            symbolMeta = clone;\n        }\n        let /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!processedSummary) {\n            processedSummary = this.processValue({ symbol: summary.symbol });\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.metadata == null && symbolMeta != null) {\n            processedSummary.metadata = this.processValue(symbolMeta);\n        }\n        // Note: == on purpose to compare with undefined!\n        if (processedSummary.type == null && summary.type != null) {\n            processedSummary.type = this.processValue(summary.type);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    serialize() {\n        const /** @type {?} */ exportAs = [];\n        const /** @type {?} */ json = JSON.stringify({\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map((symbol, index) => {\n                symbol.assertNoMembers();\n                let /** @type {?} */ importAs = ((undefined));\n                if (this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    importAs = `${symbol.name}_${index}`;\n                    exportAs.push({ symbol, exportAs: importAs });\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    // We convert the source filenames tinto output filenames,\n                    // as the generated summary file will be used when the current\n                    // compilation unit is used as a library\n                    filePath: this.summaryResolver.getLibraryFileName(symbol.filePath),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json, exportAs };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    processValue(value) { return visitValue(value, this, null); }\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    visitOther(value, context) {\n        if (value instanceof StaticSymbol) {\n            const /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            let /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n            // Note: == on purpose to compare with undefined!\n            if (index == null) {\n                index = this.indexBySymbol.size;\n                this.indexBySymbol.set(baseSymbol, index);\n                this.symbols.push(baseSymbol);\n            }\n            return { __symbol: index, members: value.members };\n        }\n    }\n}\nfunction ToJsonSerializer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ToJsonSerializer.prototype.symbols;\n    /** @type {?} */\n    ToJsonSerializer.prototype.indexBySymbol;\n    /** @type {?} */\n    ToJsonSerializer.prototype.processedSummaryBySymbol;\n    /** @type {?} */\n    ToJsonSerializer.prototype.processedSummaries;\n    /** @type {?} */\n    ToJsonSerializer.prototype.symbolResolver;\n    /** @type {?} */\n    ToJsonSerializer.prototype.summaryResolver;\n}\nclass ForJitSerializer {\n    /**\n     * @param {?} outputCtx\n     * @param {?} symbolResolver\n     */\n    constructor(outputCtx, symbolResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.data = new Map();\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    addSourceType(summary, metadata) {\n        this.data.set(summary.type.reference, { summary, metadata, isLibrary: false });\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addLibType(summary) {\n        this.data.set(summary.type.reference, { summary, metadata: null, isLibrary: true });\n    }\n    /**\n     * @param {?} exportAs\n     * @return {?}\n     */\n    serialize(exportAs) {\n        const /** @type {?} */ ngModuleSymbols = new Set();\n        Array.from(this.data.values()).forEach(({ summary, metadata, isLibrary }) => {\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                const /** @type {?} */ modSummary = (summary);\n                modSummary.modules.forEach((mod) => { ngModuleSymbols.add(mod.reference); });\n            }\n            if (!isLibrary) {\n                const /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        });\n        exportAs.forEach((entry) => {\n            const /** @type {?} */ symbol = entry.symbol;\n            if (ngModuleSymbols.has(symbol)) {\n                const /** @type {?} */ jitExportAsName = summaryForJitName(entry.exportAs);\n                this.outputCtx.statements.push(o.variable(jitExportAsName).set(this.serializeSummaryRef(symbol)).toDeclStmt(null, [\n                    o.StmtModifier.Exported\n                ]));\n            }\n        });\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    serializeSummaryWithDeps(summary, metadata) {\n        const /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        let /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push(...\n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(type => type.reference)\n                .concat(metadata.transitiveModule.modules.map(type => type.reference)\n                .filter(ref => ref !== metadata.type.reference))\n                .map((ref) => this.serializeSummaryRef(ref)));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            const /** @type {?} */ dirSummary = (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push(...providers.filter(provider => !!provider.useClass).map(provider => this.serializeSummary(/** @type {?} */ ({\n            summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n        }))));\n        return o.literalArr(expressions);\n    }\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    serializeSummaryRef(typeSymbol) {\n        const /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    serializeSummary(data) {\n        const /** @type {?} */ outputCtx = this.outputCtx;\n        class Transformer {\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            visitArray(arr, context) {\n                return o.literalArr(arr.map(entry => visitValue(entry, this, context)));\n            }\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            visitStringMap(map, context) {\n                return new o.LiteralMapExpr(Object.keys(map).map((key) => new o.LiteralMapEntry(key, visitValue(map[key], this, context), false)));\n            }\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            visitPrimitive(value, context) { return o.literal(value); }\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            visitOther(value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(`Illegal State: Encountered value ${value}`);\n                }\n            }\n        }\n        return visitValue(data, new Transformer(), null);\n    }\n}\nfunction ForJitSerializer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ForJitSerializer.prototype.data;\n    /** @type {?} */\n    ForJitSerializer.prototype.outputCtx;\n    /** @type {?} */\n    ForJitSerializer.prototype.symbolResolver;\n}\nclass FromJsonDeserializer extends ValueTransformer {\n    /**\n     * @param {?} symbolCache\n     */\n    constructor(symbolCache) {\n        super();\n        this.symbolCache = symbolCache;\n    }\n    /**\n     * @param {?} json\n     * @return {?}\n     */\n    deserialize(json) {\n        const /** @type {?} */ data = JSON.parse(json);\n        const /** @type {?} */ importAs = [];\n        this.symbols = [];\n        data.symbols.forEach((serializedSymbol) => {\n            const /** @type {?} */ symbol = this.symbolCache.get(serializedSymbol.filePath, serializedSymbol.name);\n            this.symbols.push(symbol);\n            if (serializedSymbol.importAs) {\n                importAs.push({ symbol: symbol, importAs: serializedSymbol.importAs });\n            }\n        });\n        const /** @type {?} */ summaries = visitValue(data.summaries, this, null);\n        return { summaries, importAs };\n    }\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    visitStringMap(map, context) {\n        if ('__symbol' in map) {\n            const /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            const /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return super.visitStringMap(map, context);\n        }\n    }\n}\nfunction FromJsonDeserializer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    FromJsonDeserializer.prototype.symbols;\n    /** @type {?} */\n    FromJsonDeserializer.prototype.symbolCache;\n}\n//# sourceMappingURL=summary_serializer.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/summary_serializer.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { componentFactoryName, createHostComponentMeta, flatten, identifierName, templateSourceUrl } from '../compile_metadata';\nimport { Identifiers, createTokenForExternalReference } from '../identifiers';\nimport * as o from '../output/output_ast';\nimport { syntaxError } from '../util';\nimport { GeneratedFile } from './generated_file';\nimport { StaticSymbol } from './static_symbol';\nimport { createForJitStub, serializeSummaries } from './summary_serializer';\nimport { ngfactoryFilePath, splitTypescriptSuffix, summaryFileName, summaryForJitFileName } from './util';\nexport class AotCompiler {\n    /**\n     * @param {?} _config\n     * @param {?} _host\n     * @param {?} _reflector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _outputEmitter\n     * @param {?} _summaryResolver\n     * @param {?} _localeId\n     * @param {?} _translationFormat\n     * @param {?} _enableSummariesForJit\n     * @param {?} _symbolResolver\n     */\n    constructor(_config, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _localeId, _translationFormat, _enableSummariesForJit, _symbolResolver) {\n        this._config = _config;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._localeId = _localeId;\n        this._translationFormat = _translationFormat;\n        this._enableSummariesForJit = _enableSummariesForJit;\n        this._symbolResolver = _symbolResolver;\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() { this._metadataResolver.clearCache(); }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    analyzeModulesSync(rootFiles) {\n        const /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        const /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        analyzeResult.ngModules.forEach(ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true));\n        return analyzeResult;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    analyzeModulesAsync(rootFiles) {\n        const /** @type {?} */ programSymbols = extractProgramSymbols(this._symbolResolver, rootFiles, this._host);\n        const /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(programSymbols, this._host, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(ngModule => this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false)))\n            .then(() => analyzeResult);\n    }\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    emitAllStubs(analyzeResult) {\n        const { files } = analyzeResult;\n        const /** @type {?} */ sourceModules = files.map(file => this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, false));\n        return flatten(sourceModules);\n    }\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    emitPartialStubs(analyzeResult) {\n        const { files } = analyzeResult;\n        const /** @type {?} */ sourceModules = files.map(file => this._compileStubFile(file.srcUrl, file.directives, file.pipes, file.ngModules, true));\n        return flatten(sourceModules);\n    }\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    emitAllImpls(analyzeResult) {\n        const { ngModuleByPipeOrDirective, files } = analyzeResult;\n        const /** @type {?} */ sourceModules = files.map(file => this._compileImplFile(file.srcUrl, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables));\n        return flatten(sourceModules);\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} partial\n     * @return {?}\n     */\n    _compileStubFile(srcFileUrl, directives, pipes, ngModules, partial) {\n        // partial is true when we only need the files we are certain will produce a factory and/or\n        // summary.\n        // This is the normal case for `ngc` but if we assume libraryies are generating their own\n        // factories\n        // then we might need a factory for a file that re-exports a module or factory which we cannot\n        // know\n        // ahead of time so we need a stub generate for all non-.d.ts files. The .d.ts files do not need\n        // to\n        // be excluded here because they are excluded when the modules are analyzed. If a factory ends\n        // up\n        // not being needed, the factory file is not written in writeFile callback.\n        const /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        const /** @type {?} */ generatedFiles = [];\n        const /** @type {?} */ ngFactoryOutputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        const /** @type {?} */ jitSummaryOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        // create exports that user code can reference\n        ngModules.forEach((ngModuleReference) => {\n            this._ngModuleCompiler.createStub(ngFactoryOutputCtx, ngModuleReference);\n            createForJitStub(jitSummaryOutputCtx, ngModuleReference);\n        });\n        let /** @type {?} */ partialJitStubRequired = false;\n        let /** @type {?} */ partialFactoryStubRequired = false;\n        // create stubs for external stylesheets (always empty, as users should not import anything from\n        // the generated code)\n        directives.forEach((dirType) => {\n            const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            partialJitStubRequired = true;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n                const /** @type {?} */ styleContext = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMeta.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n                _createTypeReferenceStub(styleContext, Identifiers.ComponentFactory);\n                generatedFiles.push(this._codegenSourceModule(/** @type {?} */ ((stylesheetMeta.moduleUrl)), styleContext));\n            });\n            partialFactoryStubRequired = true;\n        });\n        // If we need all the stubs to be generated then insert an arbitrary reference into the stub\n        if ((partialFactoryStubRequired || !partial) && ngFactoryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(ngFactoryOutputCtx, Identifiers.ComponentFactory);\n        }\n        if ((partialJitStubRequired || !partial || (pipes && pipes.length > 0)) &&\n            jitSummaryOutputCtx.statements.length <= 0) {\n            _createTypeReferenceStub(jitSummaryOutputCtx, Identifiers.ComponentFactory);\n        }\n        // Note: we are creating stub ngfactory/ngsummary for all source files,\n        // as the real calculation requires almost the same logic as producing the real content for\n        // them. Our pipeline will filter out empty ones at the end. Because of this filter, however,\n        // stub references to the reference type needs to be generated even if the user cannot\n        // refer to type from the `.d.ts` file to prevent the file being elided from the emit.\n        generatedFiles.push(this._codegenSourceModule(srcFileUrl, ngFactoryOutputCtx));\n        if (this._enableSummariesForJit) {\n            generatedFiles.push(this._codegenSourceModule(srcFileUrl, jitSummaryOutputCtx));\n        }\n        return generatedFiles;\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    _compileImplFile(srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        const /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        const /** @type {?} */ generatedFiles = [];\n        const /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push(...this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach((ngModuleType) => this._compileModule(outputCtx, ngModuleType));\n        // compile components\n        directives.forEach((dirType) => {\n            const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            const /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(`Internal Error: cannot determine the module for component ${identifierName(compMeta.type)}!`);\n            }\n            // compile styles\n            const /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n                generatedFiles.push(this._codegenStyles(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compMeta, stylesheetMeta, fileSuffix));\n            });\n            // compile components\n            const /** @type {?} */ compViewVars = this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0) {\n            const /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    _createSummary(srcFileUrl, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        const /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileUrl)\n            .map(symbol => this._symbolResolver.resolveSymbol(symbol));\n        const /** @type {?} */ typeData = [\n            ...ngModules.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getNgModuleSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(ref)))\n            })),\n            ...directives.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getDirectiveMetadata(ref)))\n            })),\n            ...pipes.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getPipeMetadata(ref)))\n            })),\n            ...injectables.map(ref => ({\n                summary: /** @type {?} */ ((this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((this._metadataResolver.getInjectableSummary(ref))).type\n            }))\n        ];\n        const /** @type {?} */ forJitOutputCtx = this._createOutputContext(summaryForJitFileName(srcFileUrl, true));\n        const { json, exportAs } = serializeSummaries(forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData);\n        exportAs.forEach((entry) => {\n            ngFactoryCtx.statements.push(o.variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                o.StmtModifier.Exported\n            ]));\n        });\n        const /** @type {?} */ summaryJson = new GeneratedFile(srcFileUrl, summaryFileName(srcFileUrl), json);\n        if (this._enableSummariesForJit) {\n            return [summaryJson, this._codegenSourceModule(srcFileUrl, forJitOutputCtx)];\n        }\n        return [summaryJson];\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModuleType\n     * @return {?}\n     */\n    _compileModule(outputCtx, ngModuleType) {\n        const /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(ngModuleType)));\n        const /** @type {?} */ providers = [];\n        if (this._localeId) {\n            const /** @type {?} */ normalizedLocale = this._localeId.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._translationFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._translationFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix) {\n        const /** @type {?} */ hostType = this._metadataResolver.getHostComponentType(compMeta.type.reference);\n        const /** @type {?} */ hostMeta = createHostComponentMeta(hostType, compMeta, this._metadataResolver.getHostComponentViewClass(hostType));\n        const /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        const /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        const /** @type {?} */ inputsExprs = [];\n        for (let /** @type {?} */ propName in compMeta.inputs) {\n            const /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        const /** @type {?} */ outputsExprs = [];\n        for (let /** @type {?} */ propName in compMeta.outputs) {\n            const /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new o.LiteralMapEntry(propName, o.literal(templateName), false));\n        }\n        outputCtx.statements.push(o.variable(compFactoryVar)\n            .set(o.importExpr(Identifiers.createComponentFactory).callFn([\n            o.literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            o.variable(hostViewFactoryVar), new o.LiteralMapExpr(inputsExprs),\n            new o.LiteralMapExpr(outputsExprs),\n            o.literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(selector => o.literal(selector)))\n        ]))\n            .toDeclStmt(o.importType(Identifiers.ComponentFactory, [/** @type {?} */ ((o.expressionType(outputCtx.importExpr(compMeta.type.reference))))], [o.TypeModifier.Const]), [o.StmtModifier.Final, o.StmtModifier.Exported]));\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _compileComponent(outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        const /** @type {?} */ directives = directiveIdentifiers.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n        const /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n        const /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces;\n        const { template: parsedTemplate, pipes: usedPipes } = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        const /** @type {?} */ stylesExpr = componentStyles ? o.variable(componentStyles.stylesVar) : o.literalArr([]);\n        const /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    }\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    _createOutputContext(genFilePath) {\n        const /** @type {?} */ importExpr = (symbol, typeParams = null) => {\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(`Internal error: unknown identifier ${JSON.stringify(symbol)}`);\n            }\n            const /** @type {?} */ arity = this._symbolResolver.getTypeArity(symbol) || 0;\n            const { filePath, name, members } = this._symbolResolver.getImportAs(symbol) || symbol;\n            const /** @type {?} */ importModule = this._symbolResolver.fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            const /** @type {?} */ selfReference = this._symbolResolver.fileNameToModuleName(genFilePath, genFilePath);\n            const /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            const /** @type {?} */ suppliedTypeParams = typeParams || [];\n            const /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            const /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(o.DYNAMIC_TYPE));\n            return members.reduce((expr, memberName) => expr.prop(memberName), /** @type {?} */ (o.importExpr(new o.ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath, importExpr };\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    _codegenStyles(srcFileUrl, compMeta, stylesheetMetadata, fileSuffix) {\n        const /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), this._styleCompiler.needsStyleShim(compMeta), fileSuffix));\n        const /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    }\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    _codegenSourceModule(srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    }\n}\nfunction AotCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AotCompiler.prototype._config;\n    /** @type {?} */\n    AotCompiler.prototype._host;\n    /** @type {?} */\n    AotCompiler.prototype._reflector;\n    /** @type {?} */\n    AotCompiler.prototype._metadataResolver;\n    /** @type {?} */\n    AotCompiler.prototype._templateParser;\n    /** @type {?} */\n    AotCompiler.prototype._styleCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._viewCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._ngModuleCompiler;\n    /** @type {?} */\n    AotCompiler.prototype._outputEmitter;\n    /** @type {?} */\n    AotCompiler.prototype._summaryResolver;\n    /** @type {?} */\n    AotCompiler.prototype._localeId;\n    /** @type {?} */\n    AotCompiler.prototype._translationFormat;\n    /** @type {?} */\n    AotCompiler.prototype._enableSummariesForJit;\n    /** @type {?} */\n    AotCompiler.prototype._symbolResolver;\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction _createTypeReferenceStub(outputCtx, reference) {\n    outputCtx.statements.push(o.importExpr(reference).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach((dep) => {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return `${stylesheetUrl}${shim ? '.shim' : ''}.ngstyle${suffix}`;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeNgModules(programStaticSymbols, host, metadataResolver) {\n    const { ngModules, symbolsMissingModule } = _createNgModules(programStaticSymbols, host, metadataResolver);\n    return _analyzeNgModules(programStaticSymbols, ngModules, symbolsMissingModule, metadataResolver);\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nexport function analyzeAndValidateNgModules(programStaticSymbols, host, metadataResolver) {\n    const /** @type {?} */ result = analyzeNgModules(programStaticSymbols, host, metadataResolver);\n    if (result.symbolsMissingModule && result.symbolsMissingModule.length) {\n        const /** @type {?} */ messages = result.symbolsMissingModule.map(s => `Cannot determine the module for class ${s.name} in ${s.filePath}! Add ${s.name} to the NgModule to fix it.`);\n        throw syntaxError(messages.join('\\n'));\n    }\n    return result;\n}\n/**\n * @param {?} programSymbols\n * @param {?} ngModuleMetas\n * @param {?} symbolsMissingModule\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeNgModules(programSymbols, ngModuleMetas, symbolsMissingModule, metadataResolver) {\n    const /** @type {?} */ moduleMetasByRef = new Map();\n    ngModuleMetas.forEach((ngModule) => moduleMetasByRef.set(ngModule.type.reference, ngModule));\n    const /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    const /** @type {?} */ ngModulesByFile = new Map();\n    const /** @type {?} */ ngDirectivesByFile = new Map();\n    const /** @type {?} */ ngPipesByFile = new Map();\n    const /** @type {?} */ ngInjectablesByFile = new Map();\n    const /** @type {?} */ filePaths = new Set();\n    // Make sure we produce an analyzed file for each input file\n    programSymbols.forEach((symbol) => {\n        const /** @type {?} */ filePath = symbol.filePath;\n        filePaths.add(filePath);\n        if (metadataResolver.isInjectable(symbol)) {\n            ngInjectablesByFile.set(filePath, (ngInjectablesByFile.get(filePath) || []).concat(symbol));\n        }\n    });\n    // Looping over all modules to construct:\n    // - a map from file to modules `ngModulesByFile`,\n    // - a map from file to directives `ngDirectivesByFile`,\n    // - a map from file to pipes `ngPipesByFile`,\n    // - a map from directive/pipe to module `ngModuleByPipeOrDirective`.\n    ngModuleMetas.forEach((ngModuleMeta) => {\n        const /** @type {?} */ srcFileUrl = ngModuleMeta.type.reference.filePath;\n        filePaths.add(srcFileUrl);\n        ngModulesByFile.set(srcFileUrl, (ngModulesByFile.get(srcFileUrl) || []).concat(ngModuleMeta.type.reference));\n        ngModuleMeta.declaredDirectives.forEach((dirIdentifier) => {\n            const /** @type {?} */ fileUrl = dirIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngDirectivesByFile.set(fileUrl, (ngDirectivesByFile.get(fileUrl) || []).concat(dirIdentifier.reference));\n            ngModuleByPipeOrDirective.set(dirIdentifier.reference, ngModuleMeta);\n        });\n        ngModuleMeta.declaredPipes.forEach((pipeIdentifier) => {\n            const /** @type {?} */ fileUrl = pipeIdentifier.reference.filePath;\n            filePaths.add(fileUrl);\n            ngPipesByFile.set(fileUrl, (ngPipesByFile.get(fileUrl) || []).concat(pipeIdentifier.reference));\n            ngModuleByPipeOrDirective.set(pipeIdentifier.reference, ngModuleMeta);\n        });\n    });\n    const /** @type {?} */ files = [];\n    filePaths.forEach((srcUrl) => {\n        const /** @type {?} */ directives = ngDirectivesByFile.get(srcUrl) || [];\n        const /** @type {?} */ pipes = ngPipesByFile.get(srcUrl) || [];\n        const /** @type {?} */ ngModules = ngModulesByFile.get(srcUrl) || [];\n        const /** @type {?} */ injectables = ngInjectablesByFile.get(srcUrl) || [];\n        files.push({ srcUrl, directives, pipes, ngModules, injectables });\n    });\n    return {\n        // map directive/pipe to module\n        ngModuleByPipeOrDirective,\n        // list modules and directives for every source file\n        files,\n        ngModules: ngModuleMetas, symbolsMissingModule\n    };\n}\n/**\n * @param {?} staticSymbolResolver\n * @param {?} files\n * @param {?} host\n * @return {?}\n */\nexport function extractProgramSymbols(staticSymbolResolver, files, host) {\n    const /** @type {?} */ staticSymbols = [];\n    files.filter(fileName => host.isSourceFile(fileName)).forEach(sourceFile => {\n        staticSymbolResolver.getSymbolsOf(sourceFile).forEach((symbol) => {\n            const /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            const /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (symbolMeta) {\n                if (symbolMeta.__symbolic != 'error') {\n                    // Ignore symbols that are only included to record error information.\n                    staticSymbols.push(resolvedSymbol.symbol);\n                }\n            }\n        });\n    });\n    return staticSymbols;\n}\n/**\n * @param {?} programStaticSymbols\n * @param {?} host\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _createNgModules(programStaticSymbols, host, metadataResolver) {\n    const /** @type {?} */ ngModules = new Map();\n    const /** @type {?} */ programPipesAndDirectives = [];\n    const /** @type {?} */ ngModulePipesAndDirective = new Set();\n    const /** @type {?} */ addNgModule = (staticSymbol) => {\n        if (ngModules.has(staticSymbol) || !host.isSourceFile(staticSymbol.filePath)) {\n            return false;\n        }\n        const /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(staticSymbol, false);\n        if (ngModule) {\n            ngModules.set(ngModule.type.reference, ngModule);\n            ngModule.declaredDirectives.forEach((dir) => ngModulePipesAndDirective.add(dir.reference));\n            ngModule.declaredPipes.forEach((pipe) => ngModulePipesAndDirective.add(pipe.reference));\n            // For every input module add the list of transitively included modules\n            ngModule.transitiveModule.modules.forEach(modMeta => addNgModule(modMeta.reference));\n        }\n        return !!ngModule;\n    };\n    programStaticSymbols.forEach((staticSymbol) => {\n        if (!addNgModule(staticSymbol) &&\n            (metadataResolver.isDirective(staticSymbol) || metadataResolver.isPipe(staticSymbol))) {\n            programPipesAndDirectives.push(staticSymbol);\n        }\n    });\n    // Throw an error if any of the program pipe or directives is not declared by a module\n    const /** @type {?} */ symbolsMissingModule = programPipesAndDirectives.filter(s => !ngModulePipesAndDirective.has(s));\n    return { ngModules: Array.from(ngModules.values()), symbolsMissingModule };\n}\n//# sourceMappingURL=compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Attribute, Component, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Inject, Injectable, Input, NgModule, Optional, Output, Pipe, Self, SkipSelf, ViewChild, ViewChildren, animate, group, keyframes, sequence, state, style, transition, trigger } from '@angular/core';\nimport { CompileSummaryKind } from '../compile_metadata';\nimport { syntaxError } from '../util';\nimport { StaticSymbol } from './static_symbol';\nconst /** @type {?} */ ANGULAR_CORE = '@angular/core';\nconst /** @type {?} */ ANGULAR_ROUTER = '@angular/router';\nconst /** @type {?} */ HIDDEN_KEY = /^\\$.*\\$$/;\nconst /** @type {?} */ IGNORE = {\n    __symbolic: 'ignore'\n};\nconst /** @type {?} */ USE_VALUE = 'useValue';\nconst /** @type {?} */ PROVIDE = 'provide';\nconst /** @type {?} */ REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nexport class StaticReflector {\n    /**\n     * @param {?} summaryResolver\n     * @param {?} symbolResolver\n     * @param {?=} knownMetadataClasses\n     * @param {?=} knownMetadataFunctions\n     * @param {?=} errorRecorder\n     */\n    constructor(summaryResolver, symbolResolver, knownMetadataClasses = [], knownMetadataFunctions = [], errorRecorder) {\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.annotationNames = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach((kc) => this._registerDecoratorOrConstructor(this.getStaticSymbol(kc.filePath, kc.name), kc.ctor));\n        knownMetadataFunctions.forEach((kf) => this._registerFunction(this.getStaticSymbol(kf.filePath, kf.name), kf.fn));\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [Directive, Component]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [Pipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [NgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [Injectable, Pipe, Directive, Component, NgModule]);\n        this.annotationNames.set(Directive, 'Directive');\n        this.annotationNames.set(Component, 'Component');\n        this.annotationNames.set(Pipe, 'Pipe');\n        this.annotationNames.set(NgModule, 'NgModule');\n        this.annotationNames.set(Injectable, 'Injectable');\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    componentModuleUrl(typeOrFunc) {\n        const /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    }\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    resolveExternalReference(ref) {\n        const /** @type {?} */ importSymbol = this.getStaticSymbol(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        const /** @type {?} */ rootSymbol = this.findDeclaration(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)));\n        if (importSymbol != rootSymbol) {\n            this.symbolResolver.recordImportAs(rootSymbol, importSymbol);\n        }\n        return rootSymbol;\n    }\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    findDeclaration(moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    }\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    tryFindDeclaration(moduleUrl, name) {\n        return this.symbolResolver.ignoreErrorsFor(() => this.findDeclaration(moduleUrl, name));\n    }\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    findSymbolDeclaration(symbol) {\n        const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    annotations(type) {\n        let /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                const /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push(...parentAnnotations);\n            }\n            let /** @type {?} */ ownAnnotations = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations = this.simplify(type, classMetadata['decorators']);\n                annotations.push(...ownAnnotations);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                const /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    const /** @type {?} */ requiredAnnotationTypes = ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    const /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some((requiredType) => ownAnnotations.some(ann => ann instanceof requiredType));\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(`Class ${type.name} in ${type.filePath} extends from a ${CompileSummaryKind[((summary.type.summaryKind))]} in another compilation unit without duplicating the decorator. ` +\n                            `Please add a ${requiredAnnotationTypes.map((type) => this.annotationNames.get(type)).join(' or ')} decorator to the class.`), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(ann => !!ann));\n        }\n        return annotations;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    propMetadata(type) {\n        let /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                const /** @type {?} */ parentPropMetadata = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata).forEach((parentProp) => {\n                    ((propMetadata))[parentProp] = parentPropMetadata[parentProp];\n                });\n            }\n            const /** @type {?} */ members = classMetadata['members'] || {};\n            Object.keys(members).forEach((propName) => {\n                const /** @type {?} */ propData = members[propName];\n                const /** @type {?} */ prop = ((propData))\n                    .find(a => a['__symbolic'] == 'property' || a['__symbolic'] == 'method');\n                const /** @type {?} */ decorators = [];\n                if (((propMetadata))[propName]) {\n                    decorators.push(...((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push(...this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    parameters(type) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(`parameters received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n            return [];\n        }\n        try {\n            let /** @type {?} */ parameters = this.parameterCache.get(type);\n            if (!parameters) {\n                const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                const /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                const /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    const /** @type {?} */ ctor = ((ctorData)).find(a => a['__symbolic'] == 'constructor');\n                    const /** @type {?} */ rawParameterTypes = (ctor['parameters']) || [];\n                    const /** @type {?} */ parameterDecorators = (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters = [];\n                    rawParameterTypes.forEach((rawParamType, index) => {\n                        const /** @type {?} */ nestedResult = [];\n                        const /** @type {?} */ paramType = this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        const /** @type {?} */ decorators = parameterDecorators ? parameterDecorators[index] : null;\n                        if (decorators) {\n                            nestedResult.push(...decorators);\n                        } /** @type {?} */\n                        ((parameters)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters = this.parameters(parentType);\n                }\n                if (!parameters) {\n                    parameters = [];\n                }\n                this.parameterCache.set(type, parameters);\n            }\n            return parameters;\n        }\n        catch (e) {\n            console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n            throw e;\n        }\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _methodNames(type) {\n        let /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            const /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            const /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                const /** @type {?} */ parentMethodNames = this._methodNames(parentType);\n                Object.keys(parentMethodNames).forEach((parentProp) => {\n                    ((methodNames))[parentProp] = parentMethodNames[parentProp];\n                });\n            }\n            const /** @type {?} */ members = classMetadata['members'] || {};\n            Object.keys(members).forEach((propName) => {\n                const /** @type {?} */ propData = members[propName];\n                const /** @type {?} */ isMethod = ((propData)).some(a => a['__symbolic'] == 'method'); /** @type {?} */\n                ((methodNames))[propName] = ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    }\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    findParentType(type, classMetadata) {\n        const /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(`hasLifecycleHook received ${JSON.stringify(type)} which is not a StaticSymbol`), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (e) {\n            console.error(`Failed on type ${JSON.stringify(type)} with error ${e}`);\n            throw e;\n        }\n    }\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    _registerDecoratorOrConstructor(type, ctor) {\n        this.conversionMap.set(type, (context, args) => new ctor(...args));\n    }\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    _registerFunction(type, fn) {\n        this.conversionMap.set(type, (context, args) => fn.apply(undefined, args));\n    }\n    /**\n     * @return {?}\n     */\n    initializeConversionMap() {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), Injectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), Inject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), Attribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), ContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), ContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), ViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), ViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), Input);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), Output);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), Pipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), HostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), HostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), Directive);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), Component);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), NgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), Host);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), Self);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), SkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), Optional);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'trigger'), trigger);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'state'), state);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'transition'), transition);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'style'), style);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'animate'), animate);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'keyframes'), keyframes);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'sequence'), sequence);\n        this._registerFunction(this.findDeclaration(ANGULAR_CORE, 'group'), group);\n    }\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    getStaticSymbol(declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    }\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    reportError(error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    trySimplify(context, value) {\n        const /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = (error, fileName) => { };\n        const /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    }\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    simplify(context, value) {\n        const /** @type {?} */ self = this;\n        let /** @type {?} */ scope = BindingScope.empty;\n        const /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                const /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    calling.set(functionSymbol, true);\n                    try {\n                        const /** @type {?} */ value = targetFunction['value'];\n                        if (value && (depth != 0 || value.__symbolic != 'error')) {\n                            const /** @type {?} */ parameters = targetFunction['parameters'];\n                            const /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(arg => simplifyInContext(context, arg, depth + 1, references))\n                                .map(arg => shouldIgnore(arg) ? undefined : arg);\n                            if (defaults && defaults.length > args.length) {\n                                args.push(...defaults.slice(args.length).map((value) => simplify(value)));\n                            }\n                            const /** @type {?} */ functionScope = BindingScope.build();\n                            for (let /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            const /** @type {?} */ oldScope = scope;\n                            let /** @type {?} */ result;\n                            try {\n                                scope = functionScope.done();\n                                result = simplifyInContext(functionSymbol, value, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    const /** @type {?} */ result = [];\n                    for (const /** @type {?} */ item of ((expression))) {\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            const /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (const /** @type {?} */ spreadItem of spreadArray) {\n                                    result.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        const /** @type {?} */ value = simplify(item);\n                        if (shouldIgnore(value)) {\n                            continue;\n                        }\n                        result.push(value);\n                    }\n                    return result;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context\n                    if (expression === self.injectionToken || expression === self.opaqueToken ||\n                        self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        const /** @type {?} */ staticSymbol = expression;\n                        const /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        let /** @type {?} */ staticSymbol;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                let /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                let /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                let /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                let /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                let /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                let /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                const /** @type {?} */ member = expression['member'];\n                                let /** @type {?} */ selectContext = context;\n                                let /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    const /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    const /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                const /** @type {?} */ name = expression['name'];\n                                const /** @type {?} */ localValue = scope.resolve(name);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        return context;\n                                    }\n                                    const /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    let /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        const /** @type {?} */ args = argExpressions\n                                            .map(arg => simplifyInContext(context, arg, depth + 1, references))\n                                            .map(arg => shouldIgnore(arg) ? undefined : arg);\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        const /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                let /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        `${message} (position ${expression['line'] + 1}:${expression['character'] + 1} in the original .ts file)`;\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, (value, name) => {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                const /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (e) {\n                const /** @type {?} */ members = context.members.length ? `.${context.members.join('.')}` : '';\n                const /** @type {?} */ message = `${e.message}, resolving symbol ${context.name}${members} in ${context.filePath}`;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        const /** @type {?} */ recordedSimplifyInContext = (context, value) => {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (e) {\n                this.reportError(e, context);\n            }\n        };\n        const /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    getTypeMetadata(type) {\n        const /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    }\n}\nfunction StaticReflector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StaticReflector.prototype.annotationCache;\n    /** @type {?} */\n    StaticReflector.prototype.propertyCache;\n    /** @type {?} */\n    StaticReflector.prototype.parameterCache;\n    /** @type {?} */\n    StaticReflector.prototype.methodCache;\n    /** @type {?} */\n    StaticReflector.prototype.conversionMap;\n    /** @type {?} */\n    StaticReflector.prototype.injectionToken;\n    /** @type {?} */\n    StaticReflector.prototype.opaqueToken;\n    /** @type {?} */\n    StaticReflector.prototype.ROUTES;\n    /** @type {?} */\n    StaticReflector.prototype.ANALYZE_FOR_ENTRY_COMPONENTS;\n    /** @type {?} */\n    StaticReflector.prototype.annotationForParentClassWithSummaryKind;\n    /** @type {?} */\n    StaticReflector.prototype.annotationNames;\n    /** @type {?} */\n    StaticReflector.prototype.summaryResolver;\n    /** @type {?} */\n    StaticReflector.prototype.symbolResolver;\n    /** @type {?} */\n    StaticReflector.prototype.errorRecorder;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return `Reference to a non-exported class ${error.context.className}. Consider exporting the class`;\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return `Could not resolve type ${error.context.typeName}`;\n            }\n            break;\n        case 'Function call not supported':\n            let /** @type {?} */ prefix = error.context && error.context.name ? `Calling function '${error.context.name}', f` : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return `Reference to a local (non-exported) symbol '${error.context.name}'. Consider exporting the symbol`;\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return `Error encountered resolving symbol values statically. ${expandedMessage(error)}`;\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    const /** @type {?} */ result = {};\n    Object.keys(input).forEach((key) => {\n        const /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nclass BindingScope {\n    /**\n     * @abstract\n     * @param {?} name\n     * @return {?}\n     */\n    resolve(name) { }\n    /**\n     * @return {?}\n     */\n    static build() {\n        const /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    }\n}\nBindingScope.missing = {};\nBindingScope.empty = { resolve: name => BindingScope.missing };\nfunction BindingScope_tsickle_Closure_declarations() {\n    /** @type {?} */\n    BindingScope.missing;\n    /** @type {?} */\n    BindingScope.empty;\n}\nclass PopulatedScope extends BindingScope {\n    /**\n     * @param {?} bindings\n     */\n    constructor(bindings) {\n        super();\n        this.bindings = bindings;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    resolve(name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    }\n}\nfunction PopulatedScope_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PopulatedScope.prototype.bindings;\n}\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    const /** @type {?} */ result = new Error(message);\n    ((result)).fileName = fileName;\n    ((result)).line = line;\n    ((result)).column = column;\n    return result;\n}\n//# sourceMappingURL=static_reflector.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/static_reflector.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ValueTransformer, visitValue } from '../util';\nimport { StaticSymbol } from './static_symbol';\nimport { isGeneratedFile, stripSummaryForJitFileSuffix, stripSummaryForJitNameSuffix, summaryForJitFileName, summaryForJitName } from './util';\nexport class ResolvedStaticSymbol {\n    /**\n     * @param {?} symbol\n     * @param {?} metadata\n     */\n    constructor(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n}\nfunction ResolvedStaticSymbol_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ResolvedStaticSymbol.prototype.symbol;\n    /** @type {?} */\n    ResolvedStaticSymbol.prototype.metadata;\n}\nconst /** @type {?} */ SUPPORTED_SCHEMA_VERSION = 3;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nexport class StaticSymbolResolver {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     * @param {?} summaryResolver\n     * @param {?=} errorRecorder\n     */\n    constructor(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    resolveSymbol(staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        let /** @type {?} */ result = this.resolvedSymbols.get(staticSymbol);\n        if (result) {\n            return result;\n        }\n        result = ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (result) {\n            return result;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        result = ((this.resolvedSymbols.get(staticSymbol)));\n        return result;\n    }\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    getImportAs(staticSymbol) {\n        if (staticSymbol.members.length) {\n            const /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            const /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        const /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            const /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            const /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            const /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        let /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    }\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getResourcePath(staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    }\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getTypeArity(staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        let /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    }\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    fileNameToModuleName(importedFilePath, containingFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) ||\n            this.host.fileNameToModuleName(importedFilePath, containingFilePath);\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    recordImportAs(sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    }\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    invalidateFile(fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        const /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (const /** @type {?} */ symbol of symbols) {\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    }\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    ignoreErrorsFor(cb) {\n        const /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = () => { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    _resolveSymbolMembers(staticSymbol) {\n        const /** @type {?} */ members = staticSymbol.members;\n        const /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        const /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            let /** @type {?} */ value = baseMetadata;\n            for (let /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    _resolveSymbolFromSummary(staticSymbol) {\n        const /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    }\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    getStaticSymbol(declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) {\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        let /** @type {?} */ symbols = new Set(this.summaryResolver.getSymbolsOf(filePath));\n        this._createSymbolsOf(filePath);\n        this.resolvedSymbols.forEach((resolvedSymbol) => {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                symbols.add(resolvedSymbol.symbol);\n            }\n        });\n        return Array.from(symbols);\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    _createSymbolsOf(filePath) {\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        const /** @type {?} */ resolvedSymbols = [];\n        const /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            const /** @type {?} */ topLevelSymbolNames = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            const /** @type {?} */ origins = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach((metadataKey) => {\n                const /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                const /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                const /** @type {?} */ symbol = this.getStaticSymbol(filePath, name);\n                const /** @type {?} */ origin = origins.hasOwnProperty(metadataKey) && origins[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    const /** @type {?} */ originFilePath = this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        this.reportError(new Error(`Couldn't resolve original symbol for ${origin} from ${filePath}`));\n                    }\n                    else {\n                        this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames, symbolMeta));\n            });\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            for (const /** @type {?} */ moduleExport of metadata['exports']) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach((exportSymbol) => {\n                        let /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        let /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        const /** @type {?} */ resolvedModule = this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            const /** @type {?} */ targetSymbol = this.getStaticSymbol(resolvedModule, symName);\n                            const /** @type {?} */ sourceSymbol = this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    const /** @type {?} */ resolvedModule = this.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        const /** @type {?} */ nestedExports = this.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach((targetSymbol) => {\n                            const /** @type {?} */ sourceSymbol = this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            }\n        }\n        resolvedSymbols.forEach((resolvedSymbol) => this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol));\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(resolvedSymbol => resolvedSymbol.symbol));\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    createResolvedSymbol(sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            const /** @type {?} */ transformedMeta = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n        }\n        const /** @type {?} */ self = this;\n        class ReferenceTransformer extends ValueTransformer {\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            visitStringMap(map, functionParams) {\n                const /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    const /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push(...(map['parameters'] || []));\n                    const /** @type {?} */ result = super.visitStringMap(map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    const /** @type {?} */ module = map['module'];\n                    const /** @type {?} */ name = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name) {\n                        return null;\n                    }\n                    let /** @type {?} */ filePath;\n                    if (module) {\n                        filePath = ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: `Could not resolve ${module} relative to ${sourceSymbol.filePath}.`\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name);\n                    }\n                    else if (functionParams.indexOf(name) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name)) {\n                            return self.getStaticSymbol(topLevelPath, name);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return super.visitStringMap(map, functionParams);\n                }\n            }\n        }\n        const /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    }\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    createExport(sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    }\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    reportError(error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    }\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    getModuleMetadata(module) {\n        let /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            const /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                let /** @type {?} */ maxVersion = -1;\n                moduleMetadatas.forEach((md) => {\n                    if (md['version'] > maxVersion) {\n                        maxVersion = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                const /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    `Unsupported metadata version ${moduleMetadata['version']} for module ${module}. This module should be compiled with a newer version of ngc` :\n                    `Metadata version mismatch for module ${module}, found version ${moduleMetadata['version']}, expected ${SUPPORTED_SCHEMA_VERSION}`;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    }\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    getSymbolByModule(module, symbolName, containingFile) {\n        const /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(`Could not resolve module ${module}${containingFile ? ` relative to $ {\n            containingFile\n          } ` : ''}`));\n            return this.getStaticSymbol(`ERROR:${module}`, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    }\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    resolveModule(module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (e) {\n            console.error(`Could not resolve module '${module}' relative to file ${containingFile}`);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    }\n}\nfunction StaticSymbolResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    StaticSymbolResolver.prototype.metadataCache;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.resolvedSymbols;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.resolvedFilePaths;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.importAs;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.symbolResourcePaths;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.symbolFromFile;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.knownFileNameToModuleNames;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.host;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.staticSymbolCache;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.summaryResolver;\n    /** @type {?} */\n    StaticSymbolResolver.prototype.errorRecorder;\n}\n/**\n * @param {?} identifier\n * @return {?}\n */\nexport function unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n//# sourceMappingURL=static_symbol_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/static_symbol_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { deserializeSummaries } from './summary_serializer';\nimport { ngfactoryFilePath, stripGeneratedFileSuffix, summaryFileName } from './util';\nexport class AotSummaryResolver {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolCache\n     */\n    constructor(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Set();\n        this.importAs = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    isLibraryFile(filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getLibraryFileName(filePath) { return this.host.getOutputFileName(filePath); }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    resolveSummary(staticSymbol) {\n        staticSymbol.assertNoMembers();\n        let /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary;\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    getSymbolsOf(filePath) {\n        this._loadSummaryFile(filePath);\n        return Array.from(this.summaryCache.keys()).filter((symbol) => symbol.filePath === filePath);\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    getImportAs(staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return ((this.importAs.get(staticSymbol)));\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    addSummary(summary) { this.summaryCache.set(summary.symbol, summary); }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    _loadSummaryFile(filePath) {\n        if (this.loadedFilePaths.has(filePath)) {\n            return;\n        }\n        this.loadedFilePaths.add(filePath);\n        if (this.isLibraryFile(filePath)) {\n            const /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            let /** @type {?} */ json;\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (e) {\n                console.error(`Error loading summary file ${summaryFilePath}`);\n                throw e;\n            }\n            if (json) {\n                const { summaries, importAs } = deserializeSummaries(this.staticSymbolCache, json);\n                summaries.forEach((summary) => this.summaryCache.set(summary.symbol, summary));\n                importAs.forEach((importAs) => {\n                    this.importAs.set(importAs.symbol, this.staticSymbolCache.get(ngfactoryFilePath(filePath), importAs.importAs));\n                });\n            }\n        }\n    }\n}\nfunction AotSummaryResolver_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AotSummaryResolver.prototype.summaryCache;\n    /** @type {?} */\n    AotSummaryResolver.prototype.loadedFilePaths;\n    /** @type {?} */\n    AotSummaryResolver.prototype.importAs;\n    /** @type {?} */\n    AotSummaryResolver.prototype.host;\n    /** @type {?} */\n    AotSummaryResolver.prototype.staticSymbolCache;\n}\n//# sourceMappingURL=summary_resolver.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/summary_resolver.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ViewEncapsulation, ɵConsole as Console } from '@angular/core';\nimport { CompilerConfig } from '../config';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { Lexer } from '../expression_parser/lexer';\nimport { Parser } from '../expression_parser/parser';\nimport { I18NHtmlParser } from '../i18n/i18n_html_parser';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { TypeScriptEmitter } from '../output/ts_emitter';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { StyleCompiler } from '../style_compiler';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { createOfflineCompileUrlResolver } from '../url_resolver';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\nimport { AotCompiler } from './compiler';\nimport { StaticReflector } from './static_reflector';\nimport { StaticSymbolCache } from './static_symbol';\nimport { StaticSymbolResolver } from './static_symbol_resolver';\nimport { AotSummaryResolver } from './summary_resolver';\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @return {?}\n */\nexport function createAotCompiler(compilerHost, options) {\n    let /** @type {?} */ translations = options.translations || '';\n    const /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n    const /** @type {?} */ symbolCache = new StaticSymbolCache();\n    const /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    const /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    const /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver);\n    const /** @type {?} */ console = new Console();\n    const /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    const /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate !== false,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n    });\n    const /** @type {?} */ normalizer = new DirectiveNormalizer({ get: (url) => compilerHost.loadResource(url) }, urlResolver, htmlParser, config);\n    const /** @type {?} */ expressionParser = new Parser(new Lexer());\n    const /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    const /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    const /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    const /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    const /** @type {?} */ compiler = new AotCompiler(config, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, options.locale || null, options.i18nFormat || null, options.enableSummariesForJit || null, symbolResolver);\n    return { compiler, reflector: staticReflector };\n}\n//# sourceMappingURL=compiler_factory.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/aot/compiler_factory.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as o from './output_ast';\nimport { debugOutputAstAsTypeScript } from './ts_emitter';\n/**\n * @param {?} statements\n * @return {?}\n */\nexport function interpretStatements(statements) {\n    const /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    const /** @type {?} */ visitor = new StatementInterpreter();\n    visitor.visitAllStatements(statements, ctx);\n    const /** @type {?} */ result = {};\n    ctx.exports.forEach((exportName) => { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    const /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (let /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    const /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nclass _ExecutionContext {\n    /**\n     * @param {?} parent\n     * @param {?} instance\n     * @param {?} className\n     * @param {?} vars\n     */\n    constructor(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    createChildWihtLocalVars() {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    }\n}\nfunction _ExecutionContext_tsickle_Closure_declarations() {\n    /** @type {?} */\n    _ExecutionContext.prototype.exports;\n    /** @type {?} */\n    _ExecutionContext.prototype.parent;\n    /** @type {?} */\n    _ExecutionContext.prototype.instance;\n    /** @type {?} */\n    _ExecutionContext.prototype.className;\n    /** @type {?} */\n    _ExecutionContext.prototype.vars;\n}\nclass ReturnValue {\n    /**\n     * @param {?} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\nfunction ReturnValue_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ReturnValue.prototype.value;\n}\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    const /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach((getter) => {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        const /** @type {?} */ paramNames = method.params.map(param => param.name);\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function (...args) {\n                const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    const /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(param => param.name);\n    // Note: use `function` instead of arrow function to capture `this`\n    const /** @type {?} */ ctor = function (...args) {\n        const /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach((field) => { this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    const /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nclass StatementInterpreter {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    debugAst(ast) { return debugOutputAstAsTypeScript(ast); }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteVarExpr(expr, ctx) {\n        const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        let /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(`Not declared variable ${expr.name}`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        let /** @type {?} */ varName = ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case o.BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case o.BuiltinVar.This:\n                    return ctx.instance;\n                case o.BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR;\n                    break;\n                case o.BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR;\n                    break;\n                default:\n                    throw new Error(`Unknown builtin variable ${ast.builtin}`);\n            }\n        }\n        let /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = ((currCtx.parent));\n        }\n        throw new Error(`Not declared variable ${varName}`);\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWriteKeyExpr(expr, ctx) {\n        const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        const /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitWritePropExpr(expr, ctx) {\n        const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        const /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeMethodExpr(expr, ctx) {\n        const /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        const /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        let /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case o.BuiltinMethod.ConcatArray:\n                    result = receiver.concat(...args);\n                    break;\n                case o.BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case o.BuiltinMethod.Bind:\n                    result = receiver.bind(...args);\n                    break;\n                default:\n                    throw new Error(`Unknown builtin method ${expr.builtin}`);\n            }\n        }\n        else {\n            result = receiver[((expr.name))].apply(receiver, args);\n        }\n        return result;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(stmt, ctx) {\n        const /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        const /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            const /** @type {?} */ fn = stmt.fn.visitExpression(this, ctx);\n            return fn.apply(null, args);\n        }\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReturnStmt(stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        const /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExpressionStmt(stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitIfStmt(stmt, ctx) {\n        const /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (e) {\n            const /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR, e);\n            childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitThrowStmt(stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    visitCommentStmt(stmt, context) { return null; }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInstantiateExpr(ast, ctx) {\n        const /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        const /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new clazz(...args);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralExpr(ast, ctx) { return ast.value; }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) { return ast.value.runtime; }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitConditionalExpr(ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitNotExpr(ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAssertNotNullExpr(ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        const /** @type {?} */ paramNames = ast.params.map((param) => param.name);\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        const /** @type {?} */ paramNames = stmt.params.map((param) => param.name);\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitBinaryOperatorExpr(ast, ctx) {\n        const /** @type {?} */ lhs = () => ast.lhs.visitExpression(this, ctx);\n        const /** @type {?} */ rhs = () => ast.rhs.visitExpression(this, ctx);\n        switch (ast.operator) {\n            case o.BinaryOperator.Equals:\n                return lhs() == rhs();\n            case o.BinaryOperator.Identical:\n                return lhs() === rhs();\n            case o.BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case o.BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case o.BinaryOperator.And:\n                return lhs() && rhs();\n            case o.BinaryOperator.Or:\n                return lhs() || rhs();\n            case o.BinaryOperator.Plus:\n                return lhs() + rhs();\n            case o.BinaryOperator.Minus:\n                return lhs() - rhs();\n            case o.BinaryOperator.Divide:\n                return lhs() / rhs();\n            case o.BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case o.BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case o.BinaryOperator.Lower:\n                return lhs() < rhs();\n            case o.BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case o.BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case o.BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(`Unknown operator ${ast.operator}`);\n        }\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadPropExpr(ast, ctx) {\n        let /** @type {?} */ result;\n        const /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadKeyExpr(ast, ctx) {\n        const /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        const /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralArrayExpr(ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitLiteralMapExpr(ast, ctx) {\n        const /** @type {?} */ result = {};\n        ast.entries.forEach(entry => result[entry.key] = entry.value.visitExpression(this, ctx));\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    visitCommaExpr(ast, context) {\n        const /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    }\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllExpressions(expressions, ctx) {\n        return expressions.map((expr) => expr.visitExpression(this, ctx));\n    }\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitAllStatements(statements, ctx) {\n        for (let /** @type {?} */ i = 0; i < statements.length; i++) {\n            const /** @type {?} */ stmt = statements[i];\n            const /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    }\n}\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return (...args) => _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n}\nconst /** @type {?} */ CATCH_ERROR_VAR = 'error';\nconst /** @type {?} */ CATCH_STACK_VAR = 'stack';\n//# sourceMappingURL=output_interpreter.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/output_interpreter.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AbstractEmitterVisitor, CATCH_ERROR_VAR, CATCH_STACK_VAR } from './abstract_emitter';\nimport * as o from './output_ast';\n/**\n * @abstract\n */\nexport class AbstractJsEmitterVisitor extends AbstractEmitterVisitor {\n    constructor() { super(false); }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, `${stmt.name}.prototype = Object.create(`);\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, `.prototype);`);\n        }\n        stmt.getters.forEach((getter) => this._visitClassGetter(stmt, getter, ctx));\n        stmt.methods.forEach((method) => this._visitClassMethod(stmt, method, ctx));\n        ctx.popClass();\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassConstructor(stmt, ctx) {\n        ctx.print(stmt, `function ${stmt.name}(`);\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, `var self = this;`);\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassGetter(stmt, getter, ctx) {\n        ctx.println(stmt, `Object.defineProperty(${stmt.name}.prototype, '${getter.name}', { get: function() {`);\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, `var self = this;`);\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `}});`);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitClassMethod(stmt, method, ctx) {\n        ctx.print(stmt, `${stmt.name}.prototype.${method.name} = function(`);\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, `var self = this;`);\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, `};`);\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitReadVarExpr(ast, ctx) {\n        if (ast.builtin === o.BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === o.BuiltinVar.Super) {\n            throw new Error(`'super' needs to be handled at a parent ast node, not at the variable level!`);\n        }\n        else {\n            super.visitReadVarExpr(ast, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        ctx.print(stmt, `var ${stmt.name} = `);\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, `;`);\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitCastExpr(ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    }\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitInvokeFunctionExpr(expr, ctx) {\n        const /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n            ((((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, `.call(this`);\n            if (expr.args.length > 0) {\n                ctx.print(expr, `, `);\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, `)`);\n        }\n        else {\n            super.visitInvokeFunctionExpr(expr, ctx);\n        }\n        return null;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitFunctionExpr(ast, ctx) {\n        ctx.print(ast, `function(`);\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        ctx.print(stmt, `function ${stmt.name}(`);\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, `) {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitTryCatchStmt(stmt, ctx) {\n        ctx.println(stmt, `try {`);\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `} catch (${CATCH_ERROR_VAR.name}) {`);\n        ctx.incIndent();\n        const /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR.set(CATCH_ERROR_VAR.prop('stack')).toDeclStmt(null, [\n                o.StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, `}`);\n        return null;\n    }\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _visitParams(params, ctx) {\n        this.visitAllObjects(param => ctx.print(null, param.name), params, ctx, ',');\n    }\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    getBuiltinMethodName(method) {\n        let /** @type {?} */ name;\n        switch (method) {\n            case o.BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case o.BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case o.BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(`Unknown builtin method: ${method}`);\n        }\n        return name;\n    }\n}\n//# sourceMappingURL=abstract_js_emitter.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/abstract_js_emitter.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '@angular/core';\nimport { identifierName } from '../compile_metadata';\nimport { EmitterVisitorContext } from './abstract_emitter';\nimport { AbstractJsEmitterVisitor } from './abstract_js_emitter';\nimport * as o from './output_ast';\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars) {\n    let /** @type {?} */ fnBody = `${ctx.toSource()}\\n//# sourceURL=${sourceUrl}`;\n    const /** @type {?} */ fnArgNames = [];\n    const /** @type {?} */ fnArgValues = [];\n    for (const /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (isDevMode()) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        const /** @type {?} */ emptyFn = new Function(...fnArgNames.concat('return null;')).toString();\n        const /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += `\\n${ctx.toSourceMapGenerator(sourceUrl, sourceUrl, headerLines).toJsComment()}`;\n    }\n    return new Function(...fnArgNames.concat(fnBody))(...fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @return {?}\n */\nexport function jitStatements(sourceUrl, statements) {\n    const /** @type {?} */ converter = new JitEmitterVisitor();\n    const /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs());\n}\nexport class JitEmitterVisitor extends AbstractJsEmitterVisitor {\n    constructor() {\n        super(...arguments);\n        this._evalArgNames = [];\n        this._evalArgValues = [];\n        this._evalExportedVars = [];\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    createReturnStmt(ctx) {\n        const /** @type {?} */ stmt = new o.ReturnStatement(new o.LiteralMapExpr(this._evalExportedVars.map(resultVar => new o.LiteralMapEntry(resultVar, o.variable(resultVar), false))));\n        stmt.visitStatement(this, ctx);\n    }\n    /**\n     * @return {?}\n     */\n    getArgs() {\n        const /** @type {?} */ result = {};\n        for (let /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitExternalExpr(ast, ctx) {\n        const /** @type {?} */ value = ast.value.runtime;\n        let /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            const /** @type {?} */ name = identifierName({ reference: ast.value.runtime }) || 'val';\n            this._evalArgNames.push(`jit_${name}_${id}`);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareVarStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareVarStmt(stmt, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareFunctionStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareFunctionStmt(stmt, ctx);\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    visitDeclareClassStmt(stmt, ctx) {\n        if (stmt.hasModifier(o.StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return super.visitDeclareClassStmt(stmt, ctx);\n    }\n}\nfunction JitEmitterVisitor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalArgNames;\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalArgValues;\n    /** @type {?} */\n    JitEmitterVisitor.prototype._evalExportedVars;\n}\n//# sourceMappingURL=output_jit.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/output/output_jit.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Compiler, Injector, ModuleWithComponentFactories, ɵConsole as Console, ɵgetComponentViewDefinitionFactory as getComponentViewDefinitionFactory, ɵstringify as stringify } from '@angular/core';\nimport { ProviderMeta, createHostComponentMeta, identifierName, ngModuleJitUrl, sharedStylesheetJitUrl, templateJitUrl, templateSourceUrl } from '../compile_metadata';\nimport { CompilerConfig } from '../config';\nimport { CompilerInjectable } from '../injectable';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport * as ir from '../output/output_ast';\nimport { interpretStatements } from '../output/output_interpreter';\nimport { jitStatements } from '../output/output_jit';\nimport { StyleCompiler } from '../style_compiler';\nimport { SummaryResolver } from '../summary_resolver';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { SyncAsync } from '../util';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nexport class JitCompiler {\n    /**\n     * @param {?} _injector\n     * @param {?} _metadataResolver\n     * @param {?} _templateParser\n     * @param {?} _styleCompiler\n     * @param {?} _viewCompiler\n     * @param {?} _ngModuleCompiler\n     * @param {?} _summaryResolver\n     * @param {?} _compilerConfig\n     * @param {?} _console\n     */\n    constructor(_injector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _compilerConfig, _console) {\n        this._injector = _injector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._injector; }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    getNgContentSelectors(component) {\n        this._console.warn('Compiler.getNgContentSelectors is deprecated. Use ComponentFactory.ngContentSelectors instead!');\n        const /** @type {?} */ template = this._compiledTemplateCache.get(component);\n        if (!template) {\n            throw new Error(`The component ${stringify(component)} is not yet compiled!`);\n        }\n        return ((template.compMeta.template)).ngContentSelectors;\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    getComponentFactory(component) {\n        const /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return (summary.componentFactory);\n    }\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    loadAotSummaries(summaries) {\n        this.clearCache();\n        flattenSummaries(summaries).forEach((summary) => {\n            this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    }\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    hasAotSummary(ref) { return !!this._summaryResolver.resolveSummary(ref); }\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    _filterJitIdentifiers(ids) {\n        return ids.map(mod => mod.reference).filter((ref) => !this.hasAotSummary(ref));\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    _compileModuleAndComponents(moduleType, isSync) {\n        return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n            this._compileComponents(moduleType, null);\n            return this._compileModule(moduleType);\n        });\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    _compileModuleAndAllComponents(moduleType, isSync) {\n        return SyncAsync.then(this._loadModules(moduleType, isSync), () => {\n            const /** @type {?} */ componentFactories = [];\n            this._compileComponents(moduleType, componentFactories);\n            return new ModuleWithComponentFactories(this._compileModule(moduleType), componentFactories);\n        });\n    }\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    _loadModules(mainModule, isSync) {\n        const /** @type {?} */ loading = [];\n        const /** @type {?} */ mainNgModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach((nestedNgModule) => {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            const /** @type {?} */ moduleMeta = ((this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach((ref) => {\n                const /** @type {?} */ promise = this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach((ref) => this._metadataResolver.getOrLoadPipeMetadata(ref));\n        });\n        return SyncAsync.all(loading);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    _compileModule(moduleType) {\n        let /** @type {?} */ ngModuleFactory = ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            const /** @type {?} */ moduleMeta = ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            const /** @type {?} */ extraProviders = [this._metadataResolver.getProviderMetadata(new ProviderMeta(Compiler, { useFactory: () => new ModuleBoundCompiler(this, moduleMeta.type.reference) }))];\n            const /** @type {?} */ outputCtx = createOutputContext();\n            const /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            if (!this._compilerConfig.useJit) {\n                ngModuleFactory =\n                    interpretStatements(outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            else {\n                ngModuleFactory = jitStatements(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            }\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    }\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    _compileComponents(mainModule, allComponentFactories) {\n        const /** @type {?} */ ngModule = ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        const /** @type {?} */ moduleByJitDirective = new Map();\n        const /** @type {?} */ templates = new Set();\n        const /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach((localMod) => {\n            const /** @type {?} */ localModuleMeta = ((this._metadataResolver.getNgModuleMetadata(localMod)));\n            this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        const /** @type {?} */ template = this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach((localMod) => {\n            const /** @type {?} */ localModuleMeta = ((this._metadataResolver.getNgModuleMetadata(localMod)));\n            this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach((dirRef) => {\n                const /** @type {?} */ dirMeta = this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach((entryComponentType) => {\n                        const /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach((entryComponentType) => {\n                if (!this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    const /** @type {?} */ moduleMeta = ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach((template) => this._compileTemplate(template));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        const /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clearCache() {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    }\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    _createCompiledHostTemplate(compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(`Component ${stringify(compType)} is not part of any NgModule or the module has not been imported into your module.`);\n        }\n        let /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            const /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            const /** @type {?} */ componentFactory = (compMeta.componentFactory);\n            const /** @type {?} */ hostClass = this._metadataResolver.getHostComponentType(compType);\n            const /** @type {?} */ hostMeta = createHostComponentMeta(hostClass, compMeta, /** @type {?} */ (getComponentViewDefinitionFactory(componentFactory)));\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    }\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    _createCompiledTemplate(compMeta, ngModule) {\n        let /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    }\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    _compileTemplate(template) {\n        if (template.isCompiled) {\n            return;\n        }\n        const /** @type {?} */ compMeta = template.compMeta;\n        const /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        const /** @type {?} */ outputContext = createOutputContext();\n        const /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta);\n        const /** @type {?} */ preserveWhitespaces = ((((compMeta)).template)).preserveWhitespaces; /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach((stylesheetMeta) => {\n            const /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        const /** @type {?} */ directives = template.directives.map(dir => this._metadataResolver.getDirectiveSummary(dir.reference));\n        const /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(pipe => this._metadataResolver.getPipeSummary(pipe.reference));\n        const { template: parsedTemplate, pipes: usedPipes } = this._templateParser.parse(compMeta, /** @type {?} */ ((((compMeta.template)).template)), directives, pipes, template.ngModule.schemas, templateSourceUrl(template.ngModule.type, template.compMeta, /** @type {?} */ ((template.compMeta.template))), preserveWhitespaces);\n        const /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, ir.variable(componentStylesheet.stylesVar), usedPipes);\n        let /** @type {?} */ evalResult;\n        if (!this._compilerConfig.useJit) {\n            evalResult = interpretStatements(outputContext.statements);\n        }\n        else {\n            evalResult = jitStatements(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        }\n        const /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        const /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    }\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    _resolveStylesCompileResult(result, externalStylesheetsByModuleUrl) {\n        result.dependencies.forEach((dep, i) => {\n            const /** @type {?} */ nestedCompileResult = ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            const /** @type {?} */ nestedStylesArr = this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    }\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    _resolveAndEvalStylesCompileResult(result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(result.outputCtx.statements)[result.stylesVar];\n        }\n        else {\n            return jitStatements(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n        }\n    }\n}\nJitCompiler.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompiler.ctorParameters = () => [\n    { type: Injector, },\n    { type: CompileMetadataResolver, },\n    { type: TemplateParser, },\n    { type: StyleCompiler, },\n    { type: ViewCompiler, },\n    { type: NgModuleCompiler, },\n    { type: SummaryResolver, },\n    { type: CompilerConfig, },\n    { type: Console, },\n];\nfunction JitCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JitCompiler.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    JitCompiler.ctorParameters;\n    /** @type {?} */\n    JitCompiler.prototype._compiledTemplateCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledHostTemplateCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledDirectiveWrapperCache;\n    /** @type {?} */\n    JitCompiler.prototype._compiledNgModuleCache;\n    /** @type {?} */\n    JitCompiler.prototype._sharedStylesheetCount;\n    /** @type {?} */\n    JitCompiler.prototype._injector;\n    /** @type {?} */\n    JitCompiler.prototype._metadataResolver;\n    /** @type {?} */\n    JitCompiler.prototype._templateParser;\n    /** @type {?} */\n    JitCompiler.prototype._styleCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._viewCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._ngModuleCompiler;\n    /** @type {?} */\n    JitCompiler.prototype._summaryResolver;\n    /** @type {?} */\n    JitCompiler.prototype._compilerConfig;\n    /** @type {?} */\n    JitCompiler.prototype._console;\n}\nclass CompiledTemplate {\n    /**\n     * @param {?} isHost\n     * @param {?} compType\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directives\n     */\n    constructor(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    compiled(viewClass, rendererType) {\n        this._viewClass = viewClass;\n        ((this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (let /** @type {?} */ prop in rendererType) {\n            ((this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    }\n}\nfunction CompiledTemplate_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CompiledTemplate.prototype._viewClass;\n    /** @type {?} */\n    CompiledTemplate.prototype.isCompiled;\n    /** @type {?} */\n    CompiledTemplate.prototype.isHost;\n    /** @type {?} */\n    CompiledTemplate.prototype.compType;\n    /** @type {?} */\n    CompiledTemplate.prototype.compMeta;\n    /** @type {?} */\n    CompiledTemplate.prototype.ngModule;\n    /** @type {?} */\n    CompiledTemplate.prototype.directives;\n}\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(`Could not compile '${identifierName(meta.type)}' because it is not a component.`);\n    }\n}\n/**\n * Implements `Compiler` by delegating to the JitCompiler using a known module.\n */\nclass ModuleBoundCompiler {\n    /**\n     * @param {?} _delegate\n     * @param {?} _ngModule\n     */\n    constructor(_delegate, _ngModule) {\n        this._delegate = _delegate;\n        this._ngModule = _ngModule;\n    }\n    /**\n     * @return {?}\n     */\n    get _injector() { return this._delegate.injector; }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) {\n        return this._delegate.compileModuleSync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) {\n        return this._delegate.compileModuleAsync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n    }\n    /**\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n    }\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    getNgContentSelectors(component) {\n        return this._delegate.getNgContentSelectors(component);\n    }\n    /**\n     * Clears all caches\n     * @return {?}\n     */\n    clearCache() { this._delegate.clearCache(); }\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) { this._delegate.clearCacheFor(type); }\n}\nfunction ModuleBoundCompiler_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ModuleBoundCompiler.prototype._delegate;\n    /** @type {?} */\n    ModuleBoundCompiler.prototype._ngModule;\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @return {?}\n */\nfunction flattenSummaries(fn, out = []) {\n    fn().forEach((entry) => {\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out);\n        }\n        else {\n            out.push(entry);\n        }\n    });\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    const /** @type {?} */ importExpr = (symbol) => ir.importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    return { statements: [], genFilePath: '', importExpr };\n}\n//# sourceMappingURL=compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/jit/compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { extractMessages } from './extractor_merger';\nimport * as i18n from './i18n_ast';\n/**\n * A container for message extracted from the templates.\n */\nexport class MessageBundle {\n    /**\n     * @param {?} _htmlParser\n     * @param {?} _implicitTags\n     * @param {?} _implicitAttrs\n     * @param {?=} _locale\n     */\n    constructor(_htmlParser, _implicitTags, _implicitAttrs, _locale = null) {\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    updateFromTemplate(html, url, interpolationConfig) {\n        const /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        const /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        this._messages.push(...i18nParserResult.messages);\n        return [];\n    }\n    /**\n     * @return {?}\n     */\n    getMessages() { return this._messages; }\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    write(serializer, filterSources) {\n        const /** @type {?} */ messages = {};\n        const /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(message => {\n            const /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                messages[id].sources.push(...message.sources);\n            }\n        });\n        // Transform placeholder names using the serializer mapping\n        const /** @type {?} */ msgList = Object.keys(messages).map(id => {\n            const /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            const /** @type {?} */ src = messages[id];\n            const /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            let /** @type {?} */ transformedMessage = new i18n.Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach((source) => source.filePath = filterSources(source.filePath));\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    }\n}\nfunction MessageBundle_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MessageBundle.prototype._messages;\n    /** @type {?} */\n    MessageBundle.prototype._htmlParser;\n    /** @type {?} */\n    MessageBundle.prototype._implicitTags;\n    /** @type {?} */\n    MessageBundle.prototype._implicitAttrs;\n    /** @type {?} */\n    MessageBundle.prototype._locale;\n}\nclass MapPlaceholderNames extends i18n.CloneVisitor {\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    convert(nodes, mapper) {\n        return mapper ? nodes.map(n => n.visit(this, mapper)) : nodes;\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitTagPlaceholder(ph, mapper) {\n        const /** @type {?} */ startName = ((mapper.toPublicName(ph.startName)));\n        const /** @type {?} */ closeName = ph.closeName ? ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        const /** @type {?} */ children = ph.children.map(n => n.visit(this, mapper));\n        return new i18n.TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitPlaceholder(ph, mapper) {\n        return new i18n.Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    }\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    visitIcuPlaceholder(ph, mapper) {\n        return new i18n.IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    }\n}\n//# sourceMappingURL=message_bundle.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/message_bundle.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\nimport { ViewEncapsulation, ɵConsole as Console } from '@angular/core';\nimport { analyzeAndValidateNgModules, extractProgramSymbols } from '../aot/compiler';\nimport { StaticReflector } from '../aot/static_reflector';\nimport { StaticSymbolCache } from '../aot/static_symbol';\nimport { StaticSymbolResolver } from '../aot/static_symbol_resolver';\nimport { AotSummaryResolver } from '../aot/summary_resolver';\nimport { CompilerConfig } from '../config';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { InterpolationConfig } from '../ml_parser/interpolation_config';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { PipeResolver } from '../pipe_resolver';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { createOfflineCompileUrlResolver } from '../url_resolver';\nimport { MessageBundle } from './message_bundle';\nexport class Extractor {\n    /**\n     * @param {?} host\n     * @param {?} staticSymbolResolver\n     * @param {?} messageBundle\n     * @param {?} metadataResolver\n     */\n    constructor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    extract(rootFiles) {\n        const /** @type {?} */ programSymbols = extractProgramSymbols(this.staticSymbolResolver, rootFiles, this.host);\n        const { files, ngModules } = analyzeAndValidateNgModules(programSymbols, this.host, this.metadataResolver);\n        return Promise\n            .all(ngModules.map(ngModule => this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false)))\n            .then(() => {\n            const /** @type {?} */ errors = [];\n            files.forEach(file => {\n                const /** @type {?} */ compMetas = [];\n                file.directives.forEach(directiveType => {\n                    const /** @type {?} */ dirMeta = this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(compMeta => {\n                    const /** @type {?} */ html = ((((compMeta.template)).template));\n                    const /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push(...((this.messageBundle.updateFromTemplate(html, file.srcUrl, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(e => e.toString()).join('\\n'));\n            }\n            return this.messageBundle;\n        });\n    }\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    static create(host, locale) {\n        const /** @type {?} */ htmlParser = new HtmlParser();\n        const /** @type {?} */ urlResolver = createOfflineCompileUrlResolver();\n        const /** @type {?} */ symbolCache = new StaticSymbolCache();\n        const /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        const /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        const /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        const /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        const /** @type {?} */ normalizer = new DirectiveNormalizer({ get: (url) => host.loadResource(url) }, urlResolver, htmlParser, config);\n        const /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        const /** @type {?} */ resolver = new CompileMetadataResolver(config, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, new Console(), symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        const /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        const /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor, staticReflector };\n    }\n}\nfunction Extractor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Extractor.prototype.host;\n    /** @type {?} */\n    Extractor.prototype.staticSymbolResolver;\n    /** @type {?} */\n    Extractor.prototype.messageBundle;\n    /** @type {?} */\n    Extractor.prototype.metadataResolver;\n}\n//# sourceMappingURL=extractor.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/extractor.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { Extractor } from './extractor';\nexport { I18NHtmlParser } from './i18n_html_parser';\nexport { MessageBundle } from './message_bundle';\nexport { Serializer } from './serializers/serializer';\nexport { Xliff } from './serializers/xliff';\nexport { Xliff2 } from './serializers/xliff2';\nexport { Xmb } from './serializers/xmb';\nexport { Xtb } from './serializers/xtb';\n//# sourceMappingURL=index.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/i18n/index.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵReflectionCapabilities as ReflectionCapabilities, ɵstringify as stringify } from '@angular/core';\nimport { getUrlScheme } from '../url_resolver';\nimport { MODULE_SUFFIX, syntaxError } from '../util';\nexport class JitReflector {\n    constructor() { this.reflectionCapabilities = new ReflectionCapabilities(); }\n    /**\n     * @param {?} type\n     * @param {?} cmpMetadata\n     * @return {?}\n     */\n    componentModuleUrl(type, cmpMetadata) {\n        const /** @type {?} */ moduleId = cmpMetadata.moduleId;\n        if (typeof moduleId === 'string') {\n            const /** @type {?} */ scheme = getUrlScheme(moduleId);\n            return scheme ? moduleId : `package:${moduleId}${MODULE_SUFFIX}`;\n        }\n        else if (moduleId !== null && moduleId !== void 0) {\n            throw syntaxError(`moduleId should be a string in \"${stringify(type)}\". See https://goo.gl/wIDDiL for more information.\\n` +\n                `If you're using Webpack you should inline the template and the styles, see https://goo.gl/X2J8zc.`);\n        }\n        return `./${stringify(type)}`;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    resolveExternalReference(ref) { return ref.runtime; }\n}\nfunction JitReflector_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JitReflector.prototype.reflectionCapabilities;\n}\n//# sourceMappingURL=jit_reflector.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/jit/jit_reflector.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { COMPILER_OPTIONS, Compiler, CompilerFactory, Inject, InjectionToken, MissingTranslationStrategy, Optional, ReflectiveInjector, TRANSLATIONS, TRANSLATIONS_FORMAT, ViewEncapsulation, createPlatformFactory, isDevMode, platformCore, ɵConsole as Console } from '@angular/core';\nimport { CompileReflector } from '../compile_reflector';\nimport { CompilerConfig } from '../config';\nimport { DirectiveNormalizer } from '../directive_normalizer';\nimport { DirectiveResolver } from '../directive_resolver';\nimport { Lexer } from '../expression_parser/lexer';\nimport { Parser } from '../expression_parser/parser';\nimport * as i18n from '../i18n/index';\nimport { CompilerInjectable } from '../injectable';\nimport { CompileMetadataResolver } from '../metadata_resolver';\nimport { HtmlParser } from '../ml_parser/html_parser';\nimport { NgModuleCompiler } from '../ng_module_compiler';\nimport { NgModuleResolver } from '../ng_module_resolver';\nimport { PipeResolver } from '../pipe_resolver';\nimport { ResourceLoader } from '../resource_loader';\nimport { DomElementSchemaRegistry } from '../schema/dom_element_schema_registry';\nimport { ElementSchemaRegistry } from '../schema/element_schema_registry';\nimport { StyleCompiler } from '../style_compiler';\nimport { JitSummaryResolver, SummaryResolver } from '../summary_resolver';\nimport { TemplateParser } from '../template_parser/template_parser';\nimport { DEFAULT_PACKAGE_URL_PROVIDER, UrlResolver } from '../url_resolver';\nimport { ViewCompiler } from '../view_compiler/view_compiler';\nimport { JitCompiler } from './compiler';\nimport { JitReflector } from './jit_reflector';\nconst /** @type {?} */ _NO_RESOURCE_LOADER = {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    get(url) {\n        throw new Error(`No ResourceLoader implementation has been provided. Can't read the url \"${url}\"`);\n    }\n};\nconst /** @type {?} */ baseHtmlParser = new InjectionToken('HtmlParser');\n/**\n * A set of providers that provide `JitCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const COMPILER_PROVIDERS = [\n    { provide: CompileReflector, useValue: new JitReflector() },\n    { provide: ResourceLoader, useValue: _NO_RESOURCE_LOADER },\n    JitSummaryResolver,\n    { provide: SummaryResolver, useExisting: JitSummaryResolver },\n    Console,\n    Lexer,\n    Parser,\n    {\n        provide: baseHtmlParser,\n        useClass: HtmlParser,\n    },\n    {\n        provide: i18n.I18NHtmlParser,\n        useFactory: (parser, translations, format, config, console) => {\n            translations = translations || '';\n            const missingTranslation = translations ? config.missingTranslation : MissingTranslationStrategy.Ignore;\n            return new i18n.I18NHtmlParser(parser, translations, format, missingTranslation, console);\n        },\n        deps: [\n            baseHtmlParser,\n            [new Optional(), new Inject(TRANSLATIONS)],\n            [new Optional(), new Inject(TRANSLATIONS_FORMAT)],\n            [CompilerConfig],\n            [Console],\n        ]\n    },\n    {\n        provide: HtmlParser,\n        useExisting: i18n.I18NHtmlParser,\n    },\n    TemplateParser,\n    DirectiveNormalizer,\n    CompileMetadataResolver,\n    DEFAULT_PACKAGE_URL_PROVIDER,\n    StyleCompiler,\n    ViewCompiler,\n    NgModuleCompiler,\n    { provide: CompilerConfig, useValue: new CompilerConfig() },\n    JitCompiler,\n    { provide: Compiler, useExisting: JitCompiler },\n    DomElementSchemaRegistry,\n    { provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry },\n    UrlResolver,\n    DirectiveResolver,\n    PipeResolver,\n    NgModuleResolver,\n];\nexport class JitCompilerFactory {\n    /**\n     * @param {?} defaultOptions\n     */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            useDebug: isDevMode(),\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n            enableLegacyTemplate: true,\n            preserveWhitespaces: true,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    createCompiler(options = []) {\n        const /** @type {?} */ opts = _mergeOptions(this._defaultOptions.concat(options));\n        const /** @type {?} */ injector = ReflectiveInjector.resolveAndCreate([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: () => {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        enableLegacyTemplate: opts.enableLegacyTemplate,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            }, /** @type {?} */ ((opts.providers))\n        ]);\n        return injector.get(Compiler);\n    }\n}\nJitCompilerFactory.decorators = [\n    { type: CompilerInjectable },\n];\n/**\n * @nocollapse\n */\nJitCompilerFactory.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [COMPILER_OPTIONS,] },] },\n];\nfunction JitCompilerFactory_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JitCompilerFactory.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    JitCompilerFactory.ctorParameters;\n    /** @type {?} */\n    JitCompilerFactory.prototype._defaultOptions;\n}\n/**\n * A platform that included corePlatform and the compiler.\n *\n * \\@experimental\n */\nexport const platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory },\n]);\n/**\n * @param {?} optionsArr\n * @return {?}\n */\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n        defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map(options => ((options.providers)))),\n        missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n        enableLegacyTemplate: _lastDefined(optionsArr.map(options => options.enableLegacyTemplate)),\n        preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n    };\n}\n/**\n * @template T\n * @param {?} args\n * @return {?}\n */\nfunction _lastDefined(args) {\n    for (let /** @type {?} */ i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\n/**\n * @param {?} parts\n * @return {?}\n */\nfunction _mergeArrays(parts) {\n    const /** @type {?} */ result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n//# sourceMappingURL=compiler_factory.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/jit/compiler_factory.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all APIs of the compiler package.\n *\n * <div class=\"callout is-critical\">\n *   <header>Unstable APIs</header>\n *   <p>\n *     All compiler apis are currently considered experimental and private!\n *   </p>\n *   <p>\n *     We expect the APIs in this package to keep on changing. Do not rely on them.\n *   </p>\n * </div>\n */\nexport { VERSION } from './version';\nexport { TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, PropertyBindingType, NullTemplateVisitor, RecursiveTemplateAstVisitor, templateVisitAll } from './template_parser/template_ast';\nexport { TEMPLATE_TRANSFORMS } from './template_parser/template_parser';\nexport { CompilerConfig, preserveWhitespacesDefault } from './config';\nexport { identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, CompileSummaryKind, tokenName, tokenReference, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, createHostComponentMeta, CompilePipeMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta, flatten, sourceUrl, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl } from './compile_metadata';\nexport { createAotCompiler } from './aot/compiler_factory';\nexport { AotCompiler, analyzeNgModules, analyzeAndValidateNgModules, extractProgramSymbols } from './aot/compiler';\nexport { GeneratedFile, toTypeScript } from './aot/generated_file';\nexport { StaticReflector } from './aot/static_reflector';\nexport { StaticSymbol, StaticSymbolCache } from './aot/static_symbol';\nexport { ResolvedStaticSymbol, StaticSymbolResolver, unescapeIdentifier } from './aot/static_symbol_resolver';\nexport { AotSummaryResolver } from './aot/summary_resolver';\nexport { AstPath } from './ast_path';\nexport { SummaryResolver, JitSummaryResolver } from './summary_resolver';\nexport { JitCompiler } from './jit/compiler';\nexport { COMPILER_PROVIDERS, JitCompilerFactory, platformCoreDynamic } from './jit/compiler_factory';\nexport { JitReflector } from './jit/jit_reflector';\nexport { CompileReflector } from './compile_reflector';\nexport { createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, DEFAULT_PACKAGE_URL_PROVIDER, UrlResolver, getUrlScheme } from './url_resolver';\nexport { ResourceLoader } from './resource_loader';\nexport { DirectiveResolver } from './directive_resolver';\nexport { PipeResolver } from './pipe_resolver';\nexport { NgModuleResolver } from './ng_module_resolver';\nexport { DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig } from './ml_parser/interpolation_config';\nexport { ElementSchemaRegistry } from './schema/element_schema_registry';\nexport { Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb } from './i18n/index';\nexport { DirectiveNormalizer } from './directive_normalizer';\nexport { ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor, AstTransformer, visitAstChildren } from './expression_parser/ast';\nexport { TokenType, Lexer, Token, EOF, isIdentifier, isQuote } from './expression_parser/lexer';\nexport { SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST } from './expression_parser/parser';\nexport { ERROR_COLLECTOR_TOKEN, CompileMetadataResolver } from './metadata_resolver';\nexport { Text, Expansion, ExpansionCase, Attribute, Element, Comment, visitAll, RecursiveVisitor, findNode } from './ml_parser/ast';\nexport { ParseTreeResult, TreeError, HtmlParser } from './ml_parser/html_parser';\nexport { HtmlTagDefinition, getHtmlTagDefinition } from './ml_parser/html_tags';\nexport { TagContentType, splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, NAMED_ENTITIES, NGSP_UNICODE } from './ml_parser/tags';\nexport { NgModuleCompiler } from './ng_module_compiler';\nexport { AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinVar, CastExpr, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, ExpressionStatement, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement } from './output/output_ast';\nexport { EmitterVisitorContext } from './output/abstract_emitter';\nexport { debugOutputAstAsTypeScript, TypeScriptEmitter } from './output/ts_emitter';\nexport { ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError, typeSourceSpan } from './parse_util';\nexport { DomElementSchemaRegistry } from './schema/dom_element_schema_registry';\nexport { CssSelector, SelectorMatcher, SelectorListContext, SelectorContext } from './selector';\nexport { StylesCompileDependency, CompiledStylesheet, StyleCompiler } from './style_compiler';\nexport { TemplateParseError, TemplateParseResult, TemplateParser, splitClasses, createElementCssSelector, removeSummaryDuplicates } from './template_parser/template_parser';\nexport { ViewCompiler } from './view_compiler/view_compiler';\nexport { getParseErrors, isSyntaxError, syntaxError } from './util';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=compiler.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/src/compiler.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the compiler package.\n */\nexport { VERSION, TEMPLATE_TRANSFORMS, CompilerConfig, preserveWhitespacesDefault, JitCompiler, DirectiveResolver, PipeResolver, NgModuleResolver, DEFAULT_INTERPOLATION_CONFIG, InterpolationConfig, NgModuleCompiler, AssertNotNull, BinaryOperator, BinaryOperatorExpr, BuiltinMethod, BuiltinVar, CastExpr, ClassStmt, CommaExpr, CommentStmt, ConditionalExpr, DeclareFunctionStmt, DeclareVarStmt, ExpressionStatement, ExternalExpr, ExternalReference, FunctionExpr, IfStmt, InstantiateExpr, InvokeFunctionExpr, InvokeMethodExpr, LiteralArrayExpr, LiteralExpr, LiteralMapExpr, NotExpr, ReadKeyExpr, ReadPropExpr, ReadVarExpr, ReturnStatement, ThrowStmt, TryCatchStmt, WriteKeyExpr, WritePropExpr, WriteVarExpr, StmtModifier, Statement, EmitterVisitorContext, ViewCompiler, getParseErrors, isSyntaxError, syntaxError, TextAst, BoundTextAst, AttrAst, BoundElementPropertyAst, BoundEventAst, ReferenceAst, VariableAst, ElementAst, EmbeddedTemplateAst, BoundDirectivePropertyAst, DirectiveAst, ProviderAst, ProviderAstType, NgContentAst, PropertyBindingType, NullTemplateVisitor, RecursiveTemplateAstVisitor, templateVisitAll, identifierName, identifierModuleUrl, viewClassName, rendererTypeName, hostViewClassName, componentFactoryName, CompileSummaryKind, tokenName, tokenReference, CompileStylesheetMetadata, CompileTemplateMetadata, CompileDirectiveMetadata, createHostComponentMeta, CompilePipeMetadata, CompileNgModuleMetadata, TransitiveCompileNgModuleMetadata, ProviderMeta, flatten, sourceUrl, templateSourceUrl, sharedStylesheetJitUrl, ngModuleJitUrl, templateJitUrl, createAotCompiler, AotCompiler, analyzeNgModules, analyzeAndValidateNgModules, extractProgramSymbols, GeneratedFile, toTypeScript, StaticReflector, StaticSymbol, StaticSymbolCache, ResolvedStaticSymbol, StaticSymbolResolver, unescapeIdentifier, AotSummaryResolver, AstPath, SummaryResolver, JitSummaryResolver, COMPILER_PROVIDERS, JitCompilerFactory, platformCoreDynamic, JitReflector, CompileReflector, createUrlResolverWithoutPackagePrefix, createOfflineCompileUrlResolver, DEFAULT_PACKAGE_URL_PROVIDER, UrlResolver, getUrlScheme, ResourceLoader, ElementSchemaRegistry, Extractor, I18NHtmlParser, MessageBundle, Serializer, Xliff, Xliff2, Xmb, Xtb, DirectiveNormalizer, ParserError, ParseSpan, AST, Quote, EmptyExpr, ImplicitReceiver, Chain, Conditional, PropertyRead, PropertyWrite, SafePropertyRead, KeyedRead, KeyedWrite, BindingPipe, LiteralPrimitive, LiteralArray, LiteralMap, Interpolation, Binary, PrefixNot, NonNullAssert, MethodCall, SafeMethodCall, FunctionCall, ASTWithSource, TemplateBinding, NullAstVisitor, RecursiveAstVisitor, AstTransformer, visitAstChildren, TokenType, Lexer, Token, EOF, isIdentifier, isQuote, SplitInterpolation, TemplateBindingParseResult, Parser, _ParseAST, ERROR_COLLECTOR_TOKEN, CompileMetadataResolver, Text, Expansion, ExpansionCase, Attribute, Element, Comment, visitAll, RecursiveVisitor, findNode, ParseTreeResult, TreeError, HtmlParser, HtmlTagDefinition, getHtmlTagDefinition, TagContentType, splitNsName, isNgContainer, isNgContent, isNgTemplate, getNsPrefix, mergeNsAndName, NAMED_ENTITIES, NGSP_UNICODE, debugOutputAstAsTypeScript, TypeScriptEmitter, ParseLocation, ParseSourceFile, ParseSourceSpan, ParseErrorLevel, ParseError, typeSourceSpan, DomElementSchemaRegistry, CssSelector, SelectorMatcher, SelectorListContext, SelectorContext, StylesCompileDependency, CompiledStylesheet, StyleCompiler, TemplateParseError, TemplateParseResult, TemplateParser, splitClasses, createElementCssSelector, removeSummaryDuplicates } from './src/compiler';\n// This file only reexports content of the `src` folder. Keep it that way.\n//# sourceMappingURL=index.js.map\n\n\n// WEBPACK FOOTER //\n// ../../../packages/compiler/index.js","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractControl} from '../model';\nimport {ValidationErrors} from './validators';\n/**\n * Base class for control directives.\n * \n * Only used internally in the forms module.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class AbstractControlDirective {\n/**\n * The {\\@link FormControl}, {\\@link FormGroup}, or {\\@link FormArray}\n * that backs this directive. Most properties fall through to that\n * instance.\n * @abstract\n * @return {?}\n */\ncontrol() {}\n/**\n * The value of the control.\n * @return {?}\n */\nget value(): any { return this.control ? this.control.value : null; }\n/**\n * A control is `valid` when its `status === VALID`.\n * \n * In order to have this status, the control must have passed all its\n * validation checks.\n * @return {?}\n */\nget valid(): boolean|null { return this.control ? this.control.valid : null; }\n/**\n * A control is `invalid` when its `status === INVALID`.\n * \n * In order to have this status, the control must have failed\n * at least one of its validation checks.\n * @return {?}\n */\nget invalid(): boolean|null { return this.control ? this.control.invalid : null; }\n/**\n * A control is `pending` when its `status === PENDING`.\n * \n * In order to have this status, the control must be in the\n * middle of conducting a validation check.\n * @return {?}\n */\nget pending(): boolean|null { return this.control ? this.control.pending : null; }\n/**\n * A control is `disabled` when its `status === DISABLED`.\n * \n * Disabled controls are exempt from validation checks and\n * are not included in the aggregate value of their ancestor\n * controls.\n * @return {?}\n */\nget disabled(): boolean|null { return this.control ? this.control.disabled : null; }\n/**\n * A control is `enabled` as long as its `status !== DISABLED`.\n * \n * In other words, it has a status of `VALID`, `INVALID`, or\n * `PENDING`.\n * @return {?}\n */\nget enabled(): boolean|null { return this.control ? this.control.enabled : null; }\n/**\n * Returns any errors generated by failing validation. If there\n * are no errors, it will return null.\n * @return {?}\n */\nget errors(): ValidationErrors|null { return this.control ? this.control.errors : null; }\n/**\n * A control is `pristine` if the user has not yet changed\n * the value in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget pristine(): boolean|null { return this.control ? this.control.pristine : null; }\n/**\n * A control is `dirty` if the user has changed the value\n * in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget dirty(): boolean|null { return this.control ? this.control.dirty : null; }\n/**\n * A control is marked `touched` once the user has triggered\n * a `blur` event on it.\n * @return {?}\n */\nget touched(): boolean|null { return this.control ? this.control.touched : null; }\n/**\n * A control is `untouched` if the user has not yet triggered\n * a `blur` event on it.\n * @return {?}\n */\nget untouched(): boolean|null { return this.control ? this.control.untouched : null; }\n/**\n * Emits an event every time the validation status of the control\n * is re-calculated.\n * @return {?}\n */\nget statusChanges(): Observable<any>|null {\n    return this.control ? this.control.statusChanges : null;\n  }\n/**\n * Emits an event every time the value of the control changes, in\n * the UI or programmatically.\n * @return {?}\n */\nget valueChanges(): Observable<any>|null {\n    return this.control ? this.control.valueChanges : null;\n  }\n/**\n * Returns an array that represents the path from the top-level form\n * to this control. Each index is the string name of the control on\n * that level.\n * @return {?}\n */\nget path(): string[]|null { return null; }\n/**\n * Resets the form control. This means by default:\n * \n * * it is marked as `pristine`\n * * it is marked as `untouched`\n * * value is set to null\n * \n * For more information, see {\\@link AbstractControl}.\n * @param {?=} value\n * @return {?}\n */\nreset(value: any = undefined): void {\n    if (this.control) this.control.reset(value);\n  }\n/**\n * Returns true if the control with the given path has the error specified. Otherwise\n * returns false.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\nhasError(errorCode: string, path?: string[]): boolean {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n/**\n * Returns error data if the control with the given path has the error specified. Otherwise\n * returns null or undefined.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\ngetError(errorCode: string, path?: string[]): any {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/abstract_control_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {Form} from './form_interface';\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n * \n * Only used by the forms module.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ControlContainer extends AbstractControlDirective {\n  name: string;\n/**\n * Get the form to which this container belongs.\n * @return {?}\n */\nget formDirective(): Form|null { return null; }\n/**\n * Get the path to this container.\n * @return {?}\n */\nget path(): string[]|null { return null; }\n}\n\nfunction ControlContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nControlContainer.prototype.name;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/control_container.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, ɵisObservable as isObservable, ɵisPromise as isPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {forkJoin} from 'rxjs/observable/forkJoin';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {map} from 'rxjs/operator/map';\nimport {AsyncValidatorFn, ValidationErrors, Validator, ValidatorFn} from './directives/validators';\nimport {AbstractControl, FormControl} from './model';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value: any): boolean {\n  // we don't check for string here so it also works with arrays\n  return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n * \n * Provide this using `multi: true` to add validators.\n * \n * \\@stable\n */\nexport const NG_VALIDATORS = new InjectionToken<Array<Validator|Function>>('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n * \n * Provide this using `multi: true` to add validators.\n * \n * See {\\@link NG_VALIDATORS} for more details.\n * \n * \\@stable\n */\nexport const NG_ASYNC_VALIDATORS =\n    new InjectionToken<Array<Validator|Function>>('NgAsyncValidators');\n\nconst /** @type {?} */ EMAIL_REGEXP =\n    /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n * \n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n * \n * ### Example\n * \n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n * \n * \\@stable\n */\nexport class Validators {\n/**\n * Validator that requires controls to have a value greater than a number.\n * @param {?} min\n * @return {?}\n */\nstatic min(min: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ value = parseFloat(control.value);\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return !isNaN(value) && value < min ? {'min': {'min': min, 'actual': control.value}} : null;\n    };\n  }\n/**\n * Validator that requires controls to have a value less than a number.\n * @param {?} max\n * @return {?}\n */\nstatic max(max: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ value = parseFloat(control.value);\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return !isNaN(value) && value > max ? {'max': {'max': max, 'actual': control.value}} : null;\n    };\n  }\n/**\n * Validator that requires controls to have a non-empty value.\n * @param {?} control\n * @return {?}\n */\nstatic required(control: AbstractControl): ValidationErrors|null {\n    return isEmptyInputValue(control.value) ? {'required': true} : null;\n  }\n/**\n * Validator that requires control value to be true.\n * @param {?} control\n * @return {?}\n */\nstatic requiredTrue(control: AbstractControl): ValidationErrors|null {\n    return control.value === true ? null : {'required': true};\n  }\n/**\n * Validator that performs email validation.\n * @param {?} control\n * @return {?}\n */\nstatic email(control: AbstractControl): ValidationErrors|null {\n    return EMAIL_REGEXP.test(control.value) ? null : {'email': true};\n  }\n/**\n * Validator that requires controls to have a value of a minimum length.\n * @param {?} minLength\n * @return {?}\n */\nstatic minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ length: number = control.value ? control.value.length : 0;\n      return length < minLength ?\n          {'minlength': {'requiredLength': minLength, 'actualLength': length}} :\n          null;\n    };\n  }\n/**\n * Validator that requires controls to have a value of a maximum length.\n * @param {?} maxLength\n * @return {?}\n */\nstatic maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const /** @type {?} */ length: number = control.value ? control.value.length : 0;\n      return length > maxLength ?\n          {'maxlength': {'requiredLength': maxLength, 'actualLength': length}} :\n          null;\n    };\n  }\n/**\n * Validator that requires a control to match a regex to its value.\n * @param {?} pattern\n * @return {?}\n */\nstatic pattern(pattern: string|RegExp): ValidatorFn {\n    if (!pattern) return Validators.nullValidator;\n    let /** @type {?} */ regex: RegExp;\n    let /** @type {?} */ regexStr: string;\n    if (typeof pattern === 'string') {\n      regexStr = `^${pattern}$`;\n      regex = new RegExp(regexStr);\n    } else {\n      regexStr = pattern.toString();\n      regex = pattern;\n    }\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ value: string = control.value;\n      return regex.test(value) ? null :\n                                 {'pattern': {'requiredPattern': regexStr, 'actualValue': value}};\n    };\n  }\n/**\n * No-op validator.\n * @param {?} c\n * @return {?}\n */\nstatic nullValidator(c: AbstractControl): ValidationErrors|null { return null; }\n\n  /**\n   * Compose multiple validators into a single function that returns the union\n   * of the individual error maps.\n   */\n  static compose(validators: null): null;\n  static compose(validators: (ValidatorFn|null|undefined)[]): ValidatorFn|null;\n/**\n * @param {?} validators\n * @return {?}\n */\nstatic compose(validators: (ValidatorFn|null|undefined)[]|null): ValidatorFn|null {\n    if (!validators) return null;\n    const /** @type {?} */ presentValidators: ValidatorFn[] = /** @type {?} */(( validators.filter(isPresent) as any));\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      return _mergeErrors(_executeValidators(control, presentValidators));\n    };\n  }\n/**\n * @param {?} validators\n * @return {?}\n */\nstatic composeAsync(validators: (AsyncValidatorFn|null)[]): AsyncValidatorFn|null {\n    if (!validators) return null;\n    const /** @type {?} */ presentValidators: AsyncValidatorFn[] = /** @type {?} */(( validators.filter(isPresent) as any));\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      const /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o: any): boolean {\n  return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nexport function toObservable(r: any): Observable<any> {\n  const /** @type {?} */ obs = isPromise(r) ? fromPromise(r) : r;\n  if (!(isObservable(obs))) {\n    throw new Error(`Expected validator to return Promise or Observable.`);\n  }\n  return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control: AbstractControl, validators: ValidatorFn[]): any[] {\n  return validators.map(v => v(control));\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control: AbstractControl, validators: AsyncValidatorFn[]): any[] {\n  return validators.map(v => v(control));\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors: ValidationErrors[]): ValidationErrors|null {\n  const /** @type {?} */ res: {[key: string]: any} =\n      arrayOfErrors.reduce((res: ValidationErrors | null, errors: ValidationErrors | null) => {\n        return errors != null ? {... /** @type {?} */((res)), ...errors} : /** @type {?} */(( res));\n      }, {});\n  return Object.keys(res).length === 0 ? null : res;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/validators.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * A `ControlValueAccessor` acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface if you want to create a custom form control directive\n * that integrates with Angular forms.\n *\n * @stable\n */\nexport interface ControlValueAccessor {\n  /**\n   * Writes a new value to the element.\n   *\n   * This method will be called by the forms API to write to the view when programmatic\n   * (model -> view) changes are requested.\n   *\n   * Example implementation of `writeValue`:\n   *\n   * ```ts\n   * writeValue(value: any): void {\n   *   this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n   * }\n   * ```\n   */\n  writeValue(obj: any): void;\n\n  /**\n   * Registers a callback function that should be called when the control's value\n   * changes in the UI.\n   *\n   * This is called by the forms API on initialization so it can update the form\n   * model when values propagate from the view (view -> model).\n   *\n   * If you are implementing `registerOnChange` in your own value accessor, you\n   * will typically want to save the given function so your class can call it\n   * at the appropriate time.\n   *\n   * ```ts\n   * registerOnChange(fn: (_: any) => void): void {\n   *   this._onChange = fn;\n   * }\n   * ```\n   *\n   * When the value changes in the UI, your class should call the registered\n   * function to allow the forms API to update itself:\n   *\n   * ```ts\n   * host: {\n   *    (change): '_onChange($event.target.value)'\n   * }\n   * ```\n   *\n   */\n  registerOnChange(fn: any): void;\n\n  /**\n   * Registers a callback function that should be called when the control receives\n   * a blur event.\n   *\n   * This is called by the forms API on initialization so it can update the form model\n   * on blur.\n   *\n   * If you are implementing `registerOnTouched` in your own value accessor, you\n   * will typically want to save the given function so your class can call it\n   * when the control should be considered blurred (a.k.a. \"touched\").\n   *\n   * ```ts\n   * registerOnTouched(fn: any): void {\n   *   this._onTouched = fn;\n   * }\n   * ```\n   *\n   * On blur (or equivalent), your class should call the registered function to allow\n   * the forms API to update itself:\n   *\n   * ```ts\n   * host: {\n   *    '(blur)': '_onTouched()'\n   * }\n   * ```\n   */\n  registerOnTouched(fn: any): void;\n\n  /**\n   * This function is called by the forms API when the control status changes to\n   * or from \"DISABLED\". Depending on the value, it should enable or disable the\n   * appropriate DOM element.\n   *\n   * Example implementation of `setDisabledState`:\n   *\n   * ```ts\n   * setDisabledState(isDisabled: boolean): void {\n   *   this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n   * }\n   * ```\n   *\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean): void;\n}\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n * \n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nexport const NG_VALUE_ACCESSOR = new InjectionToken<ControlValueAccessor>('NgValueAccessor');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Renderer2, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n * \n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n * \n *  \\@stable\n */\nexport class CheckboxControlValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n  host: {'(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()'},\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction CheckboxControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxControlValueAccessor.ctorParameters;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype.onChange;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype._renderer;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/checkbox_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Inject, InjectionToken, Optional, Renderer2, forwardRef} from '@angular/core';\nimport {ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ DEFAULT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid(): boolean {\n  const /** @type {?} */ userAgent = getDOM() ? getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nexport const COMPOSITION_BUFFER_MODE = new InjectionToken<boolean>('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n * \n *  \\@stable\n */\nexport class DefaultValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * Whether the user is creating a composition string (IME events).\n */\nprivate _composing = false;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _compositionMode\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _compositionMode: boolean) {\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_handleInput(value: any): void {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this.onChange(value);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_compositionStart(): void { this._composing = true; }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_compositionEnd(value: any): void {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n  // TODO: vsavkin replace the above selector with the one below it once\n  // https://github.com/angular/angular/issues/3011 is implemented\n  // selector: '[ngModel],[formControl],[formControlName]',\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)'\n  },\n  providers: [DEFAULT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\n}\n\nfunction DefaultValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefaultValueAccessor.ctorParameters;\n/** @type {?} */\nDefaultValueAccessor.prototype.onChange;\n/** @type {?} */\nDefaultValueAccessor.prototype.onTouched;\n/**\n * Whether the user is creating a composition string (IME events).\n * @type {?}\n */\nDefaultValueAccessor.prototype._composing;\n/** @type {?} */\nDefaultValueAccessor.prototype._renderer;\n/** @type {?} */\nDefaultValueAccessor.prototype._elementRef;\n/** @type {?} */\nDefaultValueAccessor.prototype._compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/default_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControl} from '../model';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} validator\n * @return {?}\n */\nexport function normalizeValidator(validator: ValidatorFn | Validator): ValidatorFn {\n  if (( /** @type {?} */((<Validator>validator))).validate) {\n    return (c: AbstractControl) => ( /** @type {?} */((<Validator>validator))).validate(c);\n  } else {\n    return /** @type {?} */(( <ValidatorFn>validator));\n  }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nexport function normalizeAsyncValidator(validator: AsyncValidatorFn | AsyncValidator):\n    AsyncValidatorFn {\n  if (( /** @type {?} */((<AsyncValidator>validator))).validate) {\n    return (c: AbstractControl) => ( /** @type {?} */((<AsyncValidator>validator))).validate(c);\n  } else {\n    return /** @type {?} */(( <AsyncValidatorFn>validator));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/normalize_validator.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Renderer2, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ NUMBER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nexport class NumberValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: number): void {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [NUMBER_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction NumberValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberValueAccessor.ctorParameters;\n/** @type {?} */\nNumberValueAccessor.prototype.onChange;\n/** @type {?} */\nNumberValueAccessor.prototype.onTouched;\n/** @type {?} */\nNumberValueAccessor.prototype._renderer;\n/** @type {?} */\nNumberValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/number_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @return {?}\n */\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n * \n * Used internally by Angular forms.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgControl extends AbstractControlDirective {\n/**\n * \\@internal\n */\n_parent: ControlContainer|null = null;\n  name: string|null = null;\n  valueAccessor: ControlValueAccessor|null = null;\n/**\n * \\@internal\n */\n_rawValidators: Array<Validator|ValidatorFn> = [];\n/**\n * \\@internal\n */\n_rawAsyncValidators: Array<AsyncValidator|AsyncValidatorFn> = [];\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return /** @type {?} */(( <ValidatorFn>unimplemented())); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null { return /** @type {?} */(( <AsyncValidatorFn>unimplemented())); }\n/**\n * @abstract\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any) {}\n}\n\nfunction NgControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._parent;\n/** @type {?} */\nNgControl.prototype.name;\n/** @type {?} */\nNgControl.prototype.valueAccessor;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawValidators;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawAsyncValidators;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_control.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Injectable, Injector, Input, OnDestroy, OnInit, Renderer2, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\n\nexport const /** @type {?} */ RADIO_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nexport class RadioControlRegistry {\nprivate _accessors: any[] = [];\n/**\n * @param {?} control\n * @param {?} accessor\n * @return {?}\n */\nadd(control: NgControl, accessor: RadioControlValueAccessor) {\n    this._accessors.push([control, accessor]);\n  }\n/**\n * @param {?} accessor\n * @return {?}\n */\nremove(accessor: RadioControlValueAccessor) {\n    for (let /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n/**\n * @param {?} accessor\n * @return {?}\n */\nselect(accessor: RadioControlValueAccessor) {\n    this._accessors.forEach((c) => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n/**\n * @param {?} controlPair\n * @param {?} accessor\n * @return {?}\n */\nprivate _isSameGroup(\n      controlPair: [NgControl, RadioControlValueAccessor],\n      accessor: RadioControlValueAccessor): boolean {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent &&\n        controlPair[1].name === accessor.name;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioControlRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioControlRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioControlRegistry.ctorParameters;\n/** @type {?} */\nRadioControlRegistry.prototype._accessors;\n}\n\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n * \n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n * \n * \\@howToUse \n * \n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n * \n * ### How to use radio buttons with form directives\n * \n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n * \n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n * \n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n * \n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n * \n *  * **npm package**: `\\@angular/forms`\n * \n *  \\@stable\n */\nexport class RadioControlValueAccessor implements ControlValueAccessor,\n    OnDestroy, OnInit {\n/**\n * \\@internal\n */\n_state: boolean;\n/**\n * \\@internal\n */\n_control: NgControl;\n/**\n * \\@internal\n */\n_fn: Function;\n  onChange = () => {};\n  onTouched = () => {};\n\n   name: string;\n   formControlName: string;\n   value: any;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _registry\n * @param {?} _injector\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _registry: RadioControlRegistry,\nprivate _injector: Injector) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this._registry.remove(this); }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._state = value === this.value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => {}): void {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nfireUncheck(value: any): void { this.writeValue(value); }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @return {?}\n */\nprivate _checkName(): void {\n    if (this.name && this.formControlName && this.name !== this.formControlName) {\n      this._throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n/**\n * @return {?}\n */\nprivate _throwNameError(): void {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n  host: {'(change)': 'onChange()', '(blur)': 'onTouched()'},\n  providers: [RADIO_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: RadioControlRegistry, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'formControlName': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction RadioControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioControlValueAccessor.ctorParameters;\n/** @type {?} */\nRadioControlValueAccessor.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._state;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._control;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._fn;\n/** @type {?} */\nRadioControlValueAccessor.prototype.onChange;\n/** @type {?} */\nRadioControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nRadioControlValueAccessor.prototype.name;\n/** @type {?} */\nRadioControlValueAccessor.prototype.formControlName;\n/** @type {?} */\nRadioControlValueAccessor.prototype.value;\n/** @type {?} */\nRadioControlValueAccessor.prototype._renderer;\n/** @type {?} */\nRadioControlValueAccessor.prototype._elementRef;\n/** @type {?} */\nRadioControlValueAccessor.prototype._registry;\n/** @type {?} */\nRadioControlValueAccessor.prototype._injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/radio_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Provider, Renderer2, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ RANGE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nexport class RangeValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number|null) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [RANGE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction RangeValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeValueAccessor.ctorParameters;\n/** @type {?} */\nRangeValueAccessor.prototype.onChange;\n/** @type {?} */\nRangeValueAccessor.prototype.onTouched;\n/** @type {?} */\nRangeValueAccessor.prototype._renderer;\n/** @type {?} */\nRangeValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/range_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Provider, Renderer2, forwardRef, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string | null, value: any): string {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n * \n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n * \n * \\@howToUse \n * \n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n * \n * ### How to use select controls with form directives\n * \n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n * \n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n * \n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n * \n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n * \n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n * \n * ### Caveat: Option selection\n * \n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class SelectControlValueAccessor implements ControlValueAccessor {\n  value: any;\n/**\n * \\@internal\n */\n_optionMap: Map<string, any> = new Map<string, any>();\n/**\n * \\@internal\n */\n_idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    const /** @type {?} */ id: string|null = this._getOptionId(value);\n    if (id == null) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n    }\n    const /** @type {?} */ valueString = _buildValueString(id, value);\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (valueString: string) => {\n      this.value = this._getOptionValue(valueString);\n      fn(this.value);\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_registerOption(): string { return (this._idCounter++).toString(); }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string|null {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'compareWith': [{ type: Input },],\n};\n}\n\nfunction SelectControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * \\@howToUse \n * \n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n * \n * \\@stable\n */\nexport class NgSelectOption implements OnDestroy {\n  id: string;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _select: SelectControlValueAccessor) {\n    if (this._select) this.id = this._select._registerOption();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectOption.ctorParameters;\n/** @type {?} */\nNgSelectOption.propDecorators;\n/** @type {?} */\nNgSelectOption.prototype.id;\n/** @type {?} */\nNgSelectOption.prototype._element;\n/** @type {?} */\nNgSelectOption.prototype._renderer;\n/** @type {?} */\nNgSelectOption.prototype._select;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/select_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Provider, Renderer2, forwardRef, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n\n/** Mock interface for HTML Options */\ninterface HTMLOption {\n  value: string;\n  selected: boolean;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nabstract class HTMLCollection {\n  length: number;\n/**\n * @abstract\n * @param {?} _\n * @return {?}\n */\nitem(_: number) {}\n}\n\nfunction HTMLCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLCollection.prototype.length;\n}\n\n/**\n * The accessor for writing a value and listening to changes on a select element.\n * \n *  ### Caveat: Options selection\n * \n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * \\@stable\n */\nexport class SelectMultipleControlValueAccessor implements ControlValueAccessor {\n  value: any;\n/**\n * \\@internal\n */\n_optionMap: Map<string, NgSelectMultipleOption> = new Map<string, NgSelectMultipleOption>();\n/**\n * \\@internal\n */\n_idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer2,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    let /** @type {?} */ optionSelectedStateSetter: (opt: NgSelectMultipleOption, o: any) => void;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const /** @type {?} */ ids = value.map((v) => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); };\n    } else {\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(false); };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (_: any) => {\n      const /** @type {?} */ selected: Array<any> = [];\n      if (_.hasOwnProperty('selectedOptions')) {\n        const /** @type {?} */ options: HTMLCollection = _.selectedOptions;\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: any = options.item(i);\n          const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade on IE\n      else {\n        const /** @type {?} */ options: HTMLCollection = /** @type {?} */(( <HTMLCollection>_.options));\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: HTMLOption = options.item(i);\n          if (opt.selected) {\n            const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_registerOption(value: NgSelectMultipleOption): string {\n    const /** @type {?} */ id: string = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string|null {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith( /** @type {?} */((this._optionMap.get(id)))._value, value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? /** @type {?} */(( this._optionMap.get(id)))._value : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n  host: {'(change)': 'onChange($event.target)', '(blur)': 'onTouched()'},\n  providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'compareWith': [{ type: Input },],\n};\n}\n\nfunction SelectMultipleControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectMultipleControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectMultipleControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectMultipleControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * ### Example\n * \n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nexport class NgSelectMultipleOption implements OnDestroy {\n  id: string;\n/**\n * \\@internal\n */\n_value: any;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _select: SelectMultipleControlValueAccessor) {\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * \\@internal\n * @param {?} selected\n * @return {?}\n */\n_setSelected(selected: boolean) {\n    this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectMultipleOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectMultipleOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectMultipleOption.ctorParameters;\n/** @type {?} */\nNgSelectMultipleOption.propDecorators;\n/** @type {?} */\nNgSelectMultipleOption.prototype.id;\n/**\n * \\@internal\n * @type {?}\n */\nNgSelectMultipleOption.prototype._value;\n/** @type {?} */\nNgSelectMultipleOption.prototype._element;\n/** @type {?} */\nNgSelectMultipleOption.prototype._renderer;\n/** @type {?} */\nNgSelectMultipleOption.prototype._select;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  return [... /** @type {?} */((parent.path)), name];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (!control) _throwError(dir, 'Cannot find control with');\n  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([ /** @type {?} */((control.validator)), dir.validator]);\n  control.asyncValidator = Validators.composeAsync([ /** @type {?} */((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */((\n  dir.valueAccessor)).writeValue(control.value); /** @type {?} */((\n\n  // view -> model\n  dir.valueAccessor)).registerOnChange((newValue: any) => {\n    dir.viewToModelUpdate(newValue);\n    control.markAsDirty();\n    control.setValue(newValue, {emitModelToViewChange: false});\n  }); /** @type {?} */((\n\n  // touched\n  dir.valueAccessor)).registerOnTouched(() => control.markAsTouched());\n\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => { /** @type {?} */((\n    // control -> view\n    dir.valueAccessor)).writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n\n  if ( /** @type {?} */((dir.valueAccessor)).setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { /** @type {?} */(( /** @type {?} */(( dir.valueAccessor)).setDisabledState))(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange) /** @type {?} */((\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange))(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: AsyncValidator | AsyncValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange) /** @type {?} */((\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange))(() => control.updateValueAndValidity());\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function cleanUpControl(control: FormControl, dir: NgControl) { /** @type {?} */((\n  dir.valueAccessor)).registerOnChange(() => _noControlError(dir)); /** @type {?} */((\n  dir.valueAccessor)).registerOnTouched(() => _noControlError(dir));\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (control == null) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let /** @type {?} */ messageEnd: string;\n  if ( /** @type {?} */((dir.path)).length > 1) {\n    messageEnd = `path: '${ /** @type {?} */((dir.path)).join(' -> ')}'`;\n  } else if ( /** @type {?} */((dir.path))[0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeValidators(validators: Array<Validator|Function>): ValidatorFn|null {\n  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeAsyncValidators(validators: Array<Validator|Function>): AsyncValidatorFn|\n    null {\n  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                              null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const /** @type {?} */ change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nconst /** @type {?} */ BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor|null {\n  if (!valueAccessors) return null;\n\n  let /** @type {?} */ defaultAccessor: ControlValueAccessor|undefined = undefined;\n  let /** @type {?} */ builtinAccessor: ControlValueAccessor|undefined = undefined;\n  let /** @type {?} */ customAccessor: ControlValueAccessor|undefined = undefined;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor)\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor)\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/shared.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n * \n * \\@stable\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n/**\n * \\@internal\n */\n_parent: ControlContainer;\n/**\n * \\@internal\n */\n_validators: any[];\n/**\n * \\@internal\n */\n_asyncValidators: any[];\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._checkParentType(); /** @type {?} */((\n    this.formDirective)).addFormGroup(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n/**\n * Get the {\\@link FormGroup} backing this binding.\n * @return {?}\n */\nget control(): FormGroup { return /** @type {?} */(( this.formDirective)).getFormGroup(this); }\n/**\n * Get the path to this control group.\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * Get the {\\@link Form} to which this group belongs.\n * @return {?}\n */\nget formDirective(): Form|null { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return composeValidators(this._validators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {}\n}\n\nfunction AbstractFormGroupDirective_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._parent;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._validators;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._asyncValidators;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/abstract_form_group_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nexport class AbstractControlStatus {\nprivate _cd: AbstractControlDirective;\n/**\n * @param {?} cd\n */\nconstructor(cd: AbstractControlDirective) { this._cd = cd; }\n/**\n * @return {?}\n */\nget ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n/**\n * @return {?}\n */\nget ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n/**\n * @return {?}\n */\nget ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n/**\n * @return {?}\n */\nget ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n/**\n * @return {?}\n */\nget ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n/**\n * @return {?}\n */\nget ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n/**\n * @return {?}\n */\nget ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nfunction AbstractControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractControlStatus.prototype._cd;\n}\n\n\nexport const /** @type {?} */ ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n * \n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n * \n * \\@stable\n */\nexport class NgControlStatus extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: NgControl) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatus.ctorParameters;\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatusGroup extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: ControlContainer) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatusGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatusGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatusGroup.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_control_status.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {EventEmitter} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {composeAsyncValidators, composeValidators} from './directives/shared';\nimport {AsyncValidatorFn, ValidationErrors, ValidatorFn} from './directives/validators';\nimport {toObservable} from './validators';\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexport const VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexport const INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexport const PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nexport const DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control: AbstractControl, path: Array<string|number>| string, delimiter: string) {\n  if (path == null) return null;\n\n  if (!(path instanceof Array)) {\n    path = ( /** @type {?} */((<string>path))).split(delimiter);\n  }\n  if (path instanceof Array && (path.length === 0)) return null;\n\n  return ( /** @type {?} */((<Array<string|number>>path))).reduce((v: AbstractControl, name) => {\n    if (v instanceof FormGroup) {\n      return v.controls[name] || null;\n    }\n\n    if (v instanceof FormArray) {\n      return v.at( /** @type {?} */((<number>name))) || null;\n    }\n\n    return null;\n  }, control);\n}\n/**\n * @param {?=} validator\n * @return {?}\n */\nfunction coerceToValidator(validator?: ValidatorFn | ValidatorFn[] | null): ValidatorFn|null {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null):\n    AsyncValidatorFn|null {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n                                         asyncValidator || null;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n * \n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class AbstractControl {\n/**\n * \\@internal\n */\n_value: any;\n/**\n * \\@internal\n */\n_onCollectionChange = () => {};\nprivate _valueChanges: EventEmitter<any>;\nprivate _statusChanges: EventEmitter<any>;\nprivate _status: string;\nprivate _errors: ValidationErrors|null;\nprivate _pristine: boolean = true;\nprivate _touched: boolean = false;\nprivate _parent: FormGroup|FormArray;\nprivate _asyncValidationSubscription: any;\n/**\n * @param {?} validator\n * @param {?} asyncValidator\n */\nconstructor(public validator: ValidatorFn|null,\npublic asyncValidator: AsyncValidatorFn|null) {}\n/**\n * The value of the control.\n * @return {?}\n */\nget value(): any { return this._value; }\n/**\n * The parent control.\n * @return {?}\n */\nget parent(): FormGroup|FormArray { return this._parent; }\n/**\n * The validation status of the control. There are four possible\n * validation statuses:\n * \n * * **VALID**:  control has passed all validation checks\n * * **INVALID**: control has failed at least one validation check\n * * **PENDING**: control is in the midst of conducting a validation check\n * * **DISABLED**: control is exempt from validation checks\n * \n * These statuses are mutually exclusive, so a control cannot be\n * both valid AND invalid or invalid AND disabled.\n * @return {?}\n */\nget status(): string { return this._status; }\n/**\n * A control is `valid` when its `status === VALID`.\n * \n * In order to have this status, the control must have passed all its\n * validation checks.\n * @return {?}\n */\nget valid(): boolean { return this._status === VALID; }\n/**\n * A control is `invalid` when its `status === INVALID`.\n * \n * In order to have this status, the control must have failed\n * at least one of its validation checks.\n * @return {?}\n */\nget invalid(): boolean { return this._status === INVALID; }\n/**\n * A control is `pending` when its `status === PENDING`.\n * \n * In order to have this status, the control must be in the\n * middle of conducting a validation check.\n * @return {?}\n */\nget pending(): boolean { return this._status == PENDING; }\n/**\n * A control is `disabled` when its `status === DISABLED`.\n * \n * Disabled controls are exempt from validation checks and\n * are not included in the aggregate value of their ancestor\n * controls.\n * @return {?}\n */\nget disabled(): boolean { return this._status === DISABLED; }\n/**\n * A control is `enabled` as long as its `status !== DISABLED`.\n * \n * In other words, it has a status of `VALID`, `INVALID`, or\n * `PENDING`.\n * @return {?}\n */\nget enabled(): boolean { return this._status !== DISABLED; }\n/**\n * Returns any errors generated by failing validation. If there\n * are no errors, it will return null.\n * @return {?}\n */\nget errors(): ValidationErrors|null { return this._errors; }\n/**\n * A control is `pristine` if the user has not yet changed\n * the value in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget pristine(): boolean { return this._pristine; }\n/**\n * A control is `dirty` if the user has changed the value\n * in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget dirty(): boolean { return !this.pristine; }\n/**\n * A control is marked `touched` once the user has triggered\n * a `blur` event on it.\n * @return {?}\n */\nget touched(): boolean { return this._touched; }\n/**\n * A control is `untouched` if the user has not yet triggered\n * a `blur` event on it.\n * @return {?}\n */\nget untouched(): boolean { return !this._touched; }\n/**\n * Emits an event every time the value of the control changes, in\n * the UI or programmatically.\n * @return {?}\n */\nget valueChanges(): Observable<any> { return this._valueChanges; }\n/**\n * Emits an event every time the validation status of the control\n * is re-calculated.\n * @return {?}\n */\nget statusChanges(): Observable<any> { return this._statusChanges; }\n/**\n * Sets the synchronous validators that are active on this control.  Calling\n * this will overwrite any existing sync validators.\n * @param {?} newValidator\n * @return {?}\n */\nsetValidators(newValidator: ValidatorFn|ValidatorFn[]|null): void {\n    this.validator = coerceToValidator(newValidator);\n  }\n/**\n * Sets the async validators that are active on this control. Calling this\n * will overwrite any existing async validators.\n * @param {?} newValidator\n * @return {?}\n */\nsetAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]): void {\n    this.asyncValidator = coerceToAsyncValidator(newValidator);\n  }\n/**\n * Empties out the sync validator list.\n * @return {?}\n */\nclearValidators(): void { this.validator = null; }\n/**\n * Empties out the async validator list.\n * @return {?}\n */\nclearAsyncValidators(): void { this.asyncValidator = null; }\n/**\n * Marks the control as `touched`.\n * \n * This will also mark all direct ancestors as `touched` to maintain\n * the model.\n * @param {?=} opts\n * @return {?}\n */\nmarkAsTouched(opts: {onlySelf?: boolean} = {}): void {\n    this._touched = true;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n/**\n * Marks the control as `untouched`.\n * \n * If the control has any children, it will also mark all children as `untouched`\n * to maintain the model, and re-calculate the `touched` status of all parent\n * controls.\n * @param {?=} opts\n * @return {?}\n */\nmarkAsUntouched(opts: {onlySelf?: boolean} = {}): void {\n    this._touched = false;\n\n    this._forEachChild(\n        (control: AbstractControl) => { control.markAsUntouched({onlySelf: true}); });\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n/**\n * Marks the control as `dirty`.\n * \n * This will also mark all direct ancestors as `dirty` to maintain\n * the model.\n * @param {?=} opts\n * @return {?}\n */\nmarkAsDirty(opts: {onlySelf?: boolean} = {}): void {\n    this._pristine = false;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n/**\n * Marks the control as `pristine`.\n * \n * If the control has any children, it will also mark all children as `pristine`\n * to maintain the model, and re-calculate the `pristine` status of all parent\n * controls.\n * @param {?=} opts\n * @return {?}\n */\nmarkAsPristine(opts: {onlySelf?: boolean} = {}): void {\n    this._pristine = true;\n\n    this._forEachChild((control: AbstractControl) => { control.markAsPristine({onlySelf: true}); });\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n/**\n * Marks the control as `pending`.\n * @param {?=} opts\n * @return {?}\n */\nmarkAsPending(opts: {onlySelf?: boolean} = {}): void {\n    this._status = PENDING;\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n/**\n * Disables the control. This means the control will be exempt from validation checks and\n * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n * \n * If the control has children, all children will be disabled to maintain the model.\n * @param {?=} opts\n * @return {?}\n */\ndisable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._status = DISABLED;\n    this._errors = null;\n    this._forEachChild((control: AbstractControl) => { control.disable({onlySelf: true}); });\n    this._updateValue();\n\n    if (opts.emitEvent !== false) {\n      this._valueChanges.emit(this._value);\n      this._statusChanges.emit(this._status);\n    }\n\n    this._updateAncestors(!!opts.onlySelf);\n    this._onDisabledChange.forEach((changeFn) => changeFn(true));\n  }\n/**\n * Enables the control. This means the control will be included in validation checks and\n * the aggregate value of its parent. Its status is re-calculated based on its value and\n * its validators.\n * \n * If the control has children, all children will be enabled.\n * @param {?=} opts\n * @return {?}\n */\nenable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._status = VALID;\n    this._forEachChild((control: AbstractControl) => { control.enable({onlySelf: true}); });\n    this.updateValueAndValidity({onlySelf: true, emitEvent: opts.emitEvent});\n\n    this._updateAncestors(!!opts.onlySelf);\n    this._onDisabledChange.forEach((changeFn) => changeFn(false));\n  }\n/**\n * @param {?} onlySelf\n * @return {?}\n */\nprivate _updateAncestors(onlySelf: boolean) {\n    if (this._parent && !onlySelf) {\n      this._parent.updateValueAndValidity();\n      this._parent._updatePristine();\n      this._parent._updateTouched();\n    }\n  }\n/**\n * @param {?} parent\n * @return {?}\n */\nsetParent(parent: FormGroup|FormArray): void { this._parent = parent; }\n/**\n * Sets the value of the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nsetValue(value: any, options?: Object) {}\n/**\n * Patches the value of the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: any, options?: Object) {}\n/**\n * Resets the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?=} value\n * @param {?=} options\n * @return {?}\n */\nreset(value?: any, options?: Object) {}\n/**\n * Re-calculates the value and validation status of the control.\n * \n * By default, it will also update the value and validity of its ancestors.\n * @param {?=} opts\n * @return {?}\n */\nupdateValueAndValidity(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._setInitialStatus();\n    this._updateValue();\n\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this._errors = this._runValidator();\n      this._status = this._calculateStatus();\n\n      if (this._status === VALID || this._status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n\n    if (opts.emitEvent !== false) {\n      this._valueChanges.emit(this._value);\n      this._statusChanges.emit(this._status);\n    }\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n/**\n * \\@internal\n * @param {?=} opts\n * @return {?}\n */\n_updateTreeValidity(opts: {emitEvent?: boolean} = {emitEvent: true}) {\n    this._forEachChild((ctrl: AbstractControl) => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({onlySelf: true, emitEvent: opts.emitEvent});\n  }\n/**\n * @return {?}\n */\nprivate _setInitialStatus() { this._status = this._allControlsDisabled() ? DISABLED : VALID; }\n/**\n * @return {?}\n */\nprivate _runValidator(): ValidationErrors|null {\n    return this.validator ? this.validator(this) : null;\n  }\n/**\n * @param {?=} emitEvent\n * @return {?}\n */\nprivate _runAsyncValidator(emitEvent?: boolean): void {\n    if (this.asyncValidator) {\n      this._status = PENDING;\n      const /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription =\n          obs.subscribe((errors: ValidationErrors | null) => this.setErrors(errors, {emitEvent}));\n    }\n  }\n/**\n * @return {?}\n */\nprivate _cancelExistingSubscription(): void {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n    }\n  }\n/**\n * Sets errors on a form control.\n * \n * This is used when validations are run manually by the user, rather than automatically.\n * \n * Calling `setErrors` will also update the validity of the parent control.\n * \n * ### Example\n * \n * ```\n * const login = new FormControl(\"someLogin\");\n * login.setErrors({\n *   \"notUnique\": true\n * });\n * \n * expect(login.valid).toEqual(false);\n * expect(login.errors).toEqual({\"notUnique\": true});\n * \n * login.setValue(\"someOtherLogin\");\n * \n * expect(login.valid).toEqual(true);\n * ```\n * @param {?} errors\n * @param {?=} opts\n * @return {?}\n */\nsetErrors(errors: ValidationErrors|null, opts: {emitEvent?: boolean} = {}): void {\n    this._errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n/**\n * Retrieves a child control given the control's name or path.\n * \n * Paths can be passed in as an array or a string delimited by a dot.\n * \n * To get a control nested within a `person` sub-group:\n * \n * * `this.form.get('person.name');`\n * \n * -OR-\n * \n * * `this.form.get(['person', 'name']);`\n * @param {?} path\n * @return {?}\n */\nget(path: Array<string|number>|string): AbstractControl|null { return _find(this, path, '.'); }\n/**\n * Returns error data if the control with the given path has the error specified. Otherwise\n * returns null or undefined.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\ngetError(errorCode: string, path?: string[]): any {\n    const /** @type {?} */ control = path ? this.get(path) : this;\n    return control && control._errors ? control._errors[errorCode] : null;\n  }\n/**\n * Returns true if the control with the given path has the error specified. Otherwise\n * returns false.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\nhasError(errorCode: string, path?: string[]): boolean { return !!this.getError(errorCode, path); }\n/**\n * Retrieves the top-level ancestor of this control.\n * @return {?}\n */\nget root(): AbstractControl {\n    let /** @type {?} */ x: AbstractControl = this;\n\n    while (x._parent) {\n      x = x._parent;\n    }\n\n    return x;\n  }\n/**\n * \\@internal\n * @param {?} emitEvent\n * @return {?}\n */\n_updateControlsErrors(emitEvent: boolean): void {\n    this._status = this._calculateStatus();\n\n    if (emitEvent) {\n      this._statusChanges.emit(this._status);\n    }\n\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_initObservables() {\n    this._valueChanges = new EventEmitter();\n    this._statusChanges = new EventEmitter();\n  }\n/**\n * @return {?}\n */\nprivate _calculateStatus(): string {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this._errors) return INVALID;\n    if (this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n/**\n * \\@internal\n * @abstract\n * @return {?}\n */\n_updateValue() {}\n/**\n * \\@internal\n * @abstract\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function) {}\n/**\n * \\@internal\n * @abstract\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function) {}\n/**\n * \\@internal\n * @abstract\n * @return {?}\n */\n_allControlsDisabled() {}\n/**\n * \\@internal\n * @param {?} status\n * @return {?}\n */\n_anyControlsHaveStatus(status: string): boolean {\n    return this._anyControls((control: AbstractControl) => control.status === status);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_anyControlsDirty(): boolean {\n    return this._anyControls((control: AbstractControl) => control.dirty);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_anyControlsTouched(): boolean {\n    return this._anyControls((control: AbstractControl) => control.touched);\n  }\n/**\n * \\@internal\n * @param {?=} opts\n * @return {?}\n */\n_updatePristine(opts: {onlySelf?: boolean} = {}): void {\n    this._pristine = !this._anyControlsDirty();\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n/**\n * \\@internal\n * @param {?=} opts\n * @return {?}\n */\n_updateTouched(opts: {onlySelf?: boolean} = {}): void {\n    this._touched = this._anyControlsTouched();\n\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n/**\n * \\@internal\n */\n_onDisabledChange: Function[] = [];\n/**\n * \\@internal\n * @param {?} formState\n * @return {?}\n */\n_isBoxedValue(formState: any): boolean {\n    return typeof formState === 'object' && formState !== null &&\n        Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n  }\n/**\n * \\@internal\n * @param {?} fn\n * @return {?}\n */\n_registerOnCollectionChange(fn: () => void): void { this._onCollectionChange = fn; }\n}\n\nfunction AbstractControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._value;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._onCollectionChange;\n/** @type {?} */\nAbstractControl.prototype._valueChanges;\n/** @type {?} */\nAbstractControl.prototype._statusChanges;\n/** @type {?} */\nAbstractControl.prototype._status;\n/** @type {?} */\nAbstractControl.prototype._errors;\n/** @type {?} */\nAbstractControl.prototype._pristine;\n/** @type {?} */\nAbstractControl.prototype._touched;\n/** @type {?} */\nAbstractControl.prototype._parent;\n/** @type {?} */\nAbstractControl.prototype._asyncValidationSubscription;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._onDisabledChange;\n/** @type {?} */\nAbstractControl.prototype.validator;\n/** @type {?} */\nAbstractControl.prototype.asyncValidator;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n * \n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n * \n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n * \n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n * \n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n * \n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n * \n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n * \n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormControl extends AbstractControl {\n/**\n * \\@internal\n */\n_onChange: Function[] = [];\n/**\n * @param {?=} formState\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\n      formState: any = null, validator?: ValidatorFn|ValidatorFn[]|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null) {\n    super(coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n    this._applyFormState(formState);\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n    this._initObservables();\n  }\n/**\n * Set the value of the form control to `value`.\n * \n * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n * and not its parent component. This defaults to false.\n * \n * If `emitEvent` is `true`, this\n * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n * to true (as it falls through to `updateValueAndValidity`).\n * \n * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n * specified.\n * \n * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nsetValue(value: any, options: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    this._value = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(\n          (changeFn) => changeFn(this._value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n/**\n * Patches the value of a control.\n * \n * This function is functionally the same as {\\@link FormControl#setValue} at this level.\n * It exists for symmetry with {\\@link FormGroup#patchValue} on `FormGroups` and `FormArrays`,\n * where it does behave differently.\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: any, options: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    this.setValue(value, options);\n  }\n/**\n * Resets the form control. This means by default:\n * \n * * it is marked as `pristine`\n * * it is marked as `untouched`\n * * value is set to null\n * \n * You can also reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n * \n * Ex:\n * \n * ```ts\n * this.control.reset('Nancy');\n * \n * console.log(this.control.value);  // 'Nancy'\n * ```\n * \n * OR\n * \n * ```\n * this.control.reset({value: 'Nancy', disabled: true});\n * \n * console.log(this.control.value);  // 'Nancy'\n * console.log(this.control.status);  // 'DISABLED'\n * ```\n * @param {?=} formState\n * @param {?=} options\n * @return {?}\n */\nreset(formState: any = null, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this._value, options);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue() {}\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean { return false; }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean { return this.disabled; }\n/**\n * Register a listener for change events.\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void { this._onChange.push(fn); }\n/**\n * \\@internal\n * @return {?}\n */\n_clearChangeFns(): void {\n    this._onChange = [];\n    this._onDisabledChange = [];\n    this._onCollectionChange = () => {};\n  }\n/**\n * Register a listener for disabled events.\n * @param {?} fn\n * @return {?}\n */\nregisterOnDisabledChange(fn: (isDisabled: boolean) => void): void {\n    this._onDisabledChange.push(fn);\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function): void {}\n/**\n * @param {?} formState\n * @return {?}\n */\nprivate _applyFormState(formState: any) {\n    if (this._isBoxedValue(formState)) {\n      this._value = formState.value;\n      formState.disabled ? this.disable({onlySelf: true, emitEvent: false}) :\n                           this.enable({onlySelf: true, emitEvent: false});\n    } else {\n      this._value = formState;\n    }\n  }\n}\n\nfunction FormControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nFormControl.prototype._onChange;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n * \n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n * \n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n * \n * ### Example\n * \n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n * \n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n * \n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n * \n * ### Example\n * \n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n * \n * \n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormGroup extends AbstractControl {\n/**\n * @param {?} controls\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\npublic controls: {[key: string]: AbstractControl}, validator?: ValidatorFn|null,\n      asyncValidator?: AsyncValidatorFn|null) {\n    super(validator || null, asyncValidator || null);\n    this._initObservables();\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n/**\n * Registers a control with the group's list of controls.\n * \n * This method does not update value or validity of the control, so for\n * most cases you'll want to use {\\@link FormGroup#addControl} instead.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\nregisterControl(name: string, control: AbstractControl): AbstractControl {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n/**\n * Add a control to this group.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\naddControl(name: string, control: AbstractControl): void {\n    this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Remove a control from this group.\n * @param {?} name\n * @return {?}\n */\nremoveControl(name: string): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Replace an existing control.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\nsetControl(name: string, control: AbstractControl): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Check whether there is an enabled control with the given name in the group.\n * \n * It will return false for disabled controls. If you'd like to check for\n * existence in the group only, use {\\@link AbstractControl#get} instead.\n * @param {?} controlName\n * @return {?}\n */\ncontains(controlName: string): boolean {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n/**\n *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n *  the structure of the group, with control names as keys.\n * \n * This method performs strict checks, so it will throw an error if you try\n * to set the value of a control that doesn't exist or if you exclude the\n * value of a control.\n * \n *  ### Example\n * \n *  ```\n *  const form = new FormGroup({\n *     first: new FormControl(),\n *     last: new FormControl()\n *  });\n *  console.log(form.value);   // {first: null, last: null}\n * \n *  form.setValue({first: 'Nancy', last: 'Drew'});\n *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n * \n *  ```\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nsetValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._checkAllValuesPresent(value);\n    Object.keys(value).forEach(name => {\n      this._throwIfControlMissing(name);\n      this.controls[name].setValue(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n  }\n/**\n *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n *  names as keys, and will do its best to match the values to the correct controls\n *  in the group.\n * \n *  It accepts both super-sets and sub-sets of the group without throwing an error.\n * \n *  ### Example\n * \n *  ```\n *  const form = new FormGroup({\n *     first: new FormControl(),\n *     last: new FormControl()\n *  });\n *  console.log(form.value);   // {first: null, last: null}\n * \n *  form.patchValue({first: 'Nancy'});\n *  console.log(form.value);   // {first: 'Nancy', last: null}\n * \n *  ```\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    Object.keys(value).forEach(name => {\n      if (this.controls[name]) {\n        this.controls[name].patchValue(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n/**\n * Resets the {\\@link FormGroup}. This means by default:\n * \n * * The group and all descendants are marked `pristine`\n * * The group and all descendants are marked `untouched`\n * * The value of all descendants will be null or null maps\n * \n * You can also reset to a specific form state by passing in a map of states\n * that matches the structure of your form, with control names as keys. The state\n * can be a standalone value or a form state object with both a value and a disabled\n * status.\n * \n * ### Example\n * \n * ```ts\n * this.form.reset({first: 'name', last: 'last name'});\n * \n * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n * ```\n * \n * - OR -\n * \n * ```\n * this.form.reset({\n *   first: {value: 'name', disabled: true},\n *   last: 'last'\n * });\n * \n * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n * console.log(this.form.get('first').status);  // 'DISABLED'\n * ```\n * @param {?=} value\n * @param {?=} options\n * @return {?}\n */\nreset(value: any = {}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      control.reset(value[name], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n    this._updatePristine(options);\n    this._updateTouched(options);\n  }\n/**\n * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n * \n * If you'd like to include all values regardless of disabled status, use this method.\n * Otherwise, the `value` property is the best way to get the value of the group.\n * @return {?}\n */\ngetRawValue(): any {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          acc[name] = control instanceof FormControl ? control.value : ( /** @type {?} */((<any>control))).getRawValue();\n          return acc;\n        });\n  }\n/**\n * \\@internal\n * @param {?} name\n * @return {?}\n */\n_throwIfControlMissing(name: string): void {\n    if (!Object.keys(this.controls).length) {\n      throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.controls[name]) {\n      throw new Error(`Cannot find form control with name: ${name}.`);\n    }\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: (v: any, k: string) => void): void {\n    Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue(): void { this._value = this._reduceValue(); }\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean {\n    let /** @type {?} */ res = false;\n    this._forEachChild((control: AbstractControl, name: string) => {\n      res = res || (this.contains(name) && condition(control));\n    });\n    return res;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reduceValue() {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          if (control.enabled || this.disabled) {\n            acc[name] = control.value;\n          }\n          return acc;\n        });\n  }\n/**\n * \\@internal\n * @param {?} initValue\n * @param {?} fn\n * @return {?}\n */\n_reduceChildren(initValue: any, fn: Function) {\n    let /** @type {?} */ res = initValue;\n    this._forEachChild(\n        (control: AbstractControl, name: string) => { res = fn(res, control, name); });\n    return res;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean {\n    for (const /** @type {?} */ controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      if (value[name] === undefined) {\n        throw new Error(`Must supply a value for form control with name: '${name}'.`);\n      }\n    });\n  }\n}\n\nfunction FormGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroup.prototype.controls;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n * \n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n * \n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n * \n * ### Example\n * \n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n * \n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n * \n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n * \n * ### Adding or removing controls\n * \n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormArray extends AbstractControl {\n/**\n * @param {?} controls\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\npublic controls: AbstractControl[], validator?: ValidatorFn|null,\n      asyncValidator?: AsyncValidatorFn|null) {\n    super(validator || null, asyncValidator || null);\n    this._initObservables();\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n/**\n * Get the {\\@link AbstractControl} at the given `index` in the array.\n * @param {?} index\n * @return {?}\n */\nat(index: number): AbstractControl { return this.controls[index]; }\n/**\n * Insert a new {\\@link AbstractControl} at the end of the array.\n * @param {?} control\n * @return {?}\n */\npush(control: AbstractControl): void {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n * @param {?} index\n * @param {?} control\n * @return {?}\n */\ninsert(index: number, control: AbstractControl): void {\n    this.controls.splice(index, 0, control);\n\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Remove the control at the given `index` in the array.\n * @param {?} index\n * @return {?}\n */\nremoveAt(index: number): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Replace an existing control.\n * @param {?} index\n * @param {?} control\n * @return {?}\n */\nsetControl(index: number, control: AbstractControl): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n\n    if (control) {\n      this.controls.splice(index, 0, control);\n      this._registerControl(control);\n    }\n\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Length of the control array.\n * @return {?}\n */\nget length(): number { return this.controls.length; }\n/**\n *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n *  the structure of the control.\n * \n * This method performs strict checks, so it will throw an error if you try\n * to set the value of a control that doesn't exist or if you exclude the\n * value of a control.\n * \n *  ### Example\n * \n *  ```\n *  const arr = new FormArray([\n *     new FormControl(),\n *     new FormControl()\n *  ]);\n *  console.log(arr.value);   // [null, null]\n * \n *  arr.setValue(['Nancy', 'Drew']);\n *  console.log(arr.value);   // ['Nancy', 'Drew']\n *  ```\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nsetValue(value: any[], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._checkAllValuesPresent(value);\n    value.forEach((newValue: any, index: number) => {\n      this._throwIfControlMissing(index);\n      this.at(index).setValue(newValue, {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n  }\n/**\n *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n *  structure of the control, and will do its best to match the values to the correct\n *  controls in the group.\n * \n *  It accepts both super-sets and sub-sets of the array without throwing an error.\n * \n *  ### Example\n * \n *  ```\n *  const arr = new FormArray([\n *     new FormControl(),\n *     new FormControl()\n *  ]);\n *  console.log(arr.value);   // [null, null]\n * \n *  arr.patchValue(['Nancy']);\n *  console.log(arr.value);   // ['Nancy', null]\n *  ```\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: any[], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    value.forEach((newValue: any, index: number) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {onlySelf: true, emitEvent: options.emitEvent});\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n/**\n * Resets the {\\@link FormArray}. This means by default:\n * \n * * The array and all descendants are marked `pristine`\n * * The array and all descendants are marked `untouched`\n * * The value of all descendants will be null or null maps\n * \n * You can also reset to a specific form state by passing in an array of states\n * that matches the structure of the control. The state can be a standalone value\n * or a form state object with both a value and a disabled status.\n * \n * ### Example\n * \n * ```ts\n * this.arr.reset(['name', 'last name']);\n * \n * console.log(this.arr.value);  // ['name', 'last name']\n * ```\n * \n * - OR -\n * \n * ```\n * this.arr.reset([\n *   {value: 'name', disabled: true},\n *   'last'\n * ]);\n * \n * console.log(this.arr.value);  // ['name', 'last name']\n * console.log(this.arr.get(0).status);  // 'DISABLED'\n * ```\n * @param {?=} value\n * @param {?=} options\n * @return {?}\n */\nreset(value: any = [], options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._forEachChild((control: AbstractControl, index: number) => {\n      control.reset(value[index], {onlySelf: true, emitEvent: options.emitEvent});\n    });\n    this.updateValueAndValidity(options);\n    this._updatePristine(options);\n    this._updateTouched(options);\n  }\n/**\n * The aggregate value of the array, including any disabled controls.\n * \n * If you'd like to include all values regardless of disabled status, use this method.\n * Otherwise, the `value` property is the best way to get the value of the array.\n * @return {?}\n */\ngetRawValue(): any[] {\n    return this.controls.map((control: AbstractControl) => {\n      return control instanceof FormControl ? control.value : ( /** @type {?} */((<any>control))).getRawValue();\n    });\n  }\n/**\n * \\@internal\n * @param {?} index\n * @return {?}\n */\n_throwIfControlMissing(index: number): void {\n    if (!this.controls.length) {\n      throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.at(index)) {\n      throw new Error(`Cannot find form control at index ${index}`);\n    }\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function): void {\n    this.controls.forEach((control: AbstractControl, index: number) => { cb(control, index); });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue(): void {\n    this._value = this.controls.filter((control) => control.enabled || this.disabled)\n                      .map((control) => control.value);\n  }\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean {\n    return this.controls.some((control: AbstractControl) => control.enabled && condition(control));\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => this._registerControl(control));\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, i: number) => {\n      if (value[i] === undefined) {\n        throw new Error(`Must supply a value for form control at index: ${i}.`);\n      }\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean {\n    for (const /** @type {?} */ control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nprivate _registerControl(control: AbstractControl) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n}\n\nfunction FormArray_tsickle_Closure_declarations() {\n/** @type {?} */\nFormArray.prototype.controls;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/model.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Optional, Self, forwardRef} from '@angular/core';\n\nimport {AbstractControl, FormControl, FormGroup} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {NgControl} from './ng_control';\nimport {NgModel} from './ng_model';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from './shared';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\n\nconst /** @type {?} */ resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n * \n * \\@howToUse \n * \n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n * \n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n * \n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n * \n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * If you want to import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n * \n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `FormsModule`\n * \n *  \\@stable\n */\nexport class NgForm extends ControlContainer implements Form {\nprivate _submitted: boolean = false;\n\n  form: FormGroup;\n  ngSubmit = new EventEmitter();\n/**\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this.form =\n        new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @return {?}\n */\nget controls(): {[key: string]: AbstractControl} { return this.form.controls; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      dir._control = /** @type {?} */(( <FormControl>container.registerControl(dir.name, dir.control)));\n      setUpControl(dir.control, dir);\n      dir.control.updateValueAndValidity({emitEvent: false});\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: NgModel): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      const /** @type {?} */ group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({emitEvent: false});\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: NgModelGroup): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: NgControl, value: any): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ ctrl = /** @type {?} */(( <FormControl>this.form.get( /** @type {?} */((dir.path)))));\n      ctrl.setValue(value);\n    });\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nsetValue(value: {[key: string]: any}): void { this.control.setValue(value); }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @param {?} path\n * @return {?}\n */\n_findContainer(path: string[]): FormGroup {\n    path.pop();\n    return path.length ? /** @type {?} */(( <FormGroup>this.form.get(path))) : this.form;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\nfunction NgForm_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForm.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForm.ctorParameters;\n/** @type {?} */\nNgForm.prototype._submitted;\n/** @type {?} */\nNgForm.prototype.form;\n/** @type {?} */\nNgForm.prototype.ngSubmit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_form.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const FormErrorExamples = {\n  formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n\n  formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n\n  formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n\n  ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n\n  ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/error_examples.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {FormErrorExamples as Examples} from './error_examples';\nexport class TemplateDrivenErrors {\n/**\n * @return {?}\n */\nstatic modelParentException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${Examples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${Examples.ngModelWithFormGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic formGroupNameException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic missingNameException() {\n    throw new Error(\n        `If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n  }\n/**\n * @return {?}\n */\nstatic modelGroupParentException() {\n    throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/template_driven_errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {NgForm} from './ng_form';\nimport {TemplateDrivenErrors} from './template_driven_errors';\n\nexport const /** @type {?} */ modelGroupProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n * \n * \\@howToUse \n * \n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n * \n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n * \n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n * \n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `FormsModule`\n * \n * \\@stable\n */\nexport class NgModelGroup extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n        parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n      TemplateDrivenErrors.modelGroupParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['ngModelGroup', ] },],\n};\n}\n\nfunction NgModelGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModelGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModelGroup.ctorParameters;\n/** @type {?} */\nNgModelGroup.propDecorators;\n/** @type {?} */\nNgModelGroup.prototype.name;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_model_group.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {NgForm} from './ng_form';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl} from './shared';\nimport {TemplateDrivenErrors} from './template_driven_errors';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\nexport const /** @type {?} */ formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n * \n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n * \n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n * \n * \\@howToUse \n * \n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n * \n * It accepts a domain model as an optional {\\@link Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n * \n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n * \n * The following is an example of a simple standalone control using `ngModel`:\n * \n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n * \n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n * \n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n * \n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n * \n * Take a look at an example of using `ngModel` within a form:\n * \n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n * \n * To see `ngModel` examples with different form control types, see:\n * \n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: `FormsModule`\n * \n *  \\@stable\n */\nexport class NgModel extends NgControl implements OnChanges,\n    OnDestroy {\n/**\n * \\@internal\n */\n_control = new FormControl();\n/**\n * \\@internal\n */\n_registered = false;\n  viewModel: any;\n\n   name: string;\n   isDisabled: boolean;\n   model: any;\n   options: {name?: string, standalone?: boolean};\n\n   update = new EventEmitter();\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(  parent: ControlContainer,\n                 validators: Array<Validator|ValidatorFn>,\n                 asyncValidators: Array<AsyncValidator|AsyncValidatorFn>,\n                \n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this._parent = parent;\n                this._rawValidators = validators || [];\n                this._rawAsyncValidators = asyncValidators || [];\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n                this._checkForErrors();\n                if (!this._registered) this._setUpControl();\n                if ('isDisabled' in changes) {\n                  this._updateDisabled(changes);\n                }\n\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this._updateValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.formDirective && this.formDirective.removeControl(this); }\n/**\n * @return {?}\n */\nget control(): FormControl { return this._control; }\n/**\n * @return {?}\n */\nget path(): string[] {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n              }\n/**\n * @return {?}\n */\nget formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null {\n                return composeAsyncValidators(this._rawAsyncValidators);\n              }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                this.update.emit(newValue);\n              }\n/**\n * @return {?}\n */\nprivate _setUpControl(): void {\n                this._isStandalone() ? this._setUpStandalone() :\n                                       this.formDirective.addControl(this);\n                this._registered = true;\n              }\n/**\n * @return {?}\n */\nprivate _isStandalone(): boolean {\n                return !this._parent || !!(this.options && this.options.standalone);\n              }\n/**\n * @return {?}\n */\nprivate _setUpStandalone(): void {\n                setUpControl(this._control, this);\n                this._control.updateValueAndValidity({emitEvent: false});\n              }\n/**\n * @return {?}\n */\nprivate _checkForErrors(): void {\n                if (!this._isStandalone()) {\n                  this._checkParentType();\n                }\n                this._checkName();\n              }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n                if (!(this._parent instanceof NgModelGroup) &&\n                    this._parent instanceof AbstractFormGroupDirective) {\n                  TemplateDrivenErrors.formGroupNameException();\n                } else if (\n                    !(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                  TemplateDrivenErrors.modelParentException();\n                }\n              }\n/**\n * @return {?}\n */\nprivate _checkName(): void {\n                if (this.options && this.options.name) this.name = this.options.name;\n\n                if (!this._isStandalone() && !this.name) {\n                  TemplateDrivenErrors.missingNameException();\n                }\n              }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _updateValue(value: any): void {\n                resolvedPromise.then(\n                    () => { this.control.setValue(value, {emitViewToModelChange: false}); });\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _updateDisabled(changes: SimpleChanges) {\n                const /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n\n                const /** @type {?} */ isDisabled =\n                    disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\n                resolvedPromise.then(() => {\n                  if (isDisabled && !this.control.disabled) {\n                    this.control.disable();\n                  } else if (!isDisabled && this.control.disabled) {\n                    this.control.enable();\n                  }\n                });\n              }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngModel]:not([formControlName]):not([formControl])',\n  providers: [formControlBinding],\n  exportAs: 'ngModel'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'options': [{ type: Input, args: ['ngModelOptions', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n};\n}\n\nfunction NgModel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModel.ctorParameters;\n/** @type {?} */\nNgModel.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nNgModel.prototype._control;\n/**\n * \\@internal\n * @type {?}\n */\nNgModel.prototype._registered;\n/** @type {?} */\nNgModel.prototype.viewModel;\n/** @type {?} */\nNgModel.prototype.name;\n/** @type {?} */\nNgModel.prototype.isDisabled;\n/** @type {?} */\nNgModel.prototype.model;\n/** @type {?} */\nNgModel.prototype.options;\n/** @type {?} */\nNgModel.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_model.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {FormErrorExamples as Examples} from './error_examples';\nexport class ReactiveErrors {\n/**\n * @return {?}\n */\nstatic controlParentException(): void {\n    throw new Error(\n        `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formControlName}`);\n  }\n/**\n * @return {?}\n */\nstatic ngModelGroupException(): void {\n    throw new Error(\n        `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${Examples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${Examples.ngModelGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic missingFormException(): void {\n    throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${Examples.formControlName}`);\n  }\n/**\n * @return {?}\n */\nstatic groupParentException(): void {\n    throw new Error(\n        `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formGroupName}`);\n  }\n/**\n * @return {?}\n */\nstatic arrayParentException(): void {\n    throw new Error(\n        `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${Examples.formArrayName}`);\n  }\n/**\n * @return {?}\n */\nstatic disabledAttrWarning(): void {\n    console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nexport const /** @type {?} */ formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n * \n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n * \n * \\@howToUse \n * \n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n * \n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n * \n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n *  \\@stable\n */\nexport class FormControlDirective extends NgControl implements OnChanges {\n  viewModel: any;\n\n   form: FormControl;\n   model: any;\n   update = new EventEmitter();\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset isDisabled(isDisabled: boolean) { ReactiveErrors.disabledAttrWarning(); }\n/**\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(   validators: Array<Validator|ValidatorFn>,\n                 asyncValidators: Array<AsyncValidator|AsyncValidatorFn>,\n                \n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this._rawValidators = validators || [];\n                this._rawAsyncValidators = asyncValidators || [];\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n                if (this._isControlChanged(changes)) {\n                  setUpControl(this.form, this);\n                  if (this.control.disabled && /** @type {?} */(( this.valueAccessor)).setDisabledState) { /** @type {?} */(( /** @type {?} */((\n                    this.valueAccessor)).setDisabledState))(true);\n                  }\n                  this.form.updateValueAndValidity({emitEvent: false});\n                }\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this.form.setValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null {\n                return composeAsyncValidators(this._rawAsyncValidators);\n              }\n/**\n * @return {?}\n */\nget control(): FormControl { return this.form; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                this.update.emit(newValue);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _isControlChanged(changes: {[key: string]: any}): boolean {\n                return changes.hasOwnProperty('form');\n              }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input, args: ['formControl', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction FormControlDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormControlDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormControlDirective.ctorParameters;\n/** @type {?} */\nFormControlDirective.propDecorators;\n/** @type {?} */\nFormControlDirective.prototype.viewModel;\n/** @type {?} */\nFormControlDirective.prototype.form;\n/** @type {?} */\nFormControlDirective.prototype.model;\n/** @type {?} */\nFormControlDirective.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_control_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n * \n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}\n * methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n * \n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormGroupDirective extends ControlContainer implements Form,\n    OnChanges {\nprivate _submitted: boolean = false;\nprivate _oldForm: FormGroup;\n  directives: FormControlName[] = [];\n\n   form: FormGroup = /** @type {?} */(( null));\n   ngSubmit = new EventEmitter();\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor(\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: FormControlName): FormControl {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: FormControlName): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: FormControlName): void { remove(this.directives, dir); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: FormGroupName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: FormGroupName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: FormGroupName): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormArray(dir: FormArrayName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormArray(dir: FormArrayName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormArray(dir: FormArrayName): FormArray { return /** @type {?} */(( <FormArray>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: FormControlName, value: any): void {\n    const /** @type {?} */ ctrl  = /** @type {?} */(( <FormControl>this.form.get(dir.path)));\n    ctrl.setValue(value);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateDomValue() {\n    this.directives.forEach(dir => {\n      const /** @type {?} */ newCtrl: any = this.form.get(dir.path);\n      if (dir._control !== newCtrl) {\n        cleanUpControl(dir._control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        dir._control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n/**\n * @return {?}\n */\nprivate _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n/**\n * @return {?}\n */\nprivate _updateValidators() {\n    const /** @type {?} */ sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([ /** @type {?} */((this.form.validator)), /** @type {?} */(( sync))]);\n\n    const /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([ /** @type {?} */((this.form.asyncValidator)), /** @type {?} */(( async))]);\n  }\n/**\n * @return {?}\n */\nprivate _checkFormPresent() {\n    if (!this.form) {\n      ReactiveErrors.missingFormException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input, args: ['formGroup', ] },],\n'ngSubmit': [{ type: Output },],\n};\n}\n\nfunction FormGroupDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupDirective.ctorParameters;\n/** @type {?} */\nFormGroupDirective.propDecorators;\n/** @type {?} */\nFormGroupDirective.prototype._submitted;\n/** @type {?} */\nFormGroupDirective.prototype._oldForm;\n/** @type {?} */\nFormGroupDirective.prototype.directives;\n/** @type {?} */\nFormGroupDirective.prototype.form;\n/** @type {?} */\nFormGroupDirective.prototype.ngSubmit;\n/** @type {?} */\nFormGroupDirective.prototype._validators;\n/** @type {?} */\nFormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormArray} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath} from '../shared';\nimport {AsyncValidatorFn, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\n\nexport const /** @type {?} */ formGroupNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n * \n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n * \n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl#get} method. Ex: `this.form.get('name')`.\n * \n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n * \n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n * \\@stable\n */\nexport class FormGroupName extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.groupParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formGroupName]', providers: [formGroupNameProvider]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formGroupName', ] },],\n};\n}\n\nfunction FormGroupName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupName.ctorParameters;\n/** @type {?} */\nFormGroupName.propDecorators;\n/** @type {?} */\nFormGroupName.prototype.name;\n}\n\n\nexport const /** @type {?} */ formArrayNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n * \n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n * \n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl#get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n * \n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl#setValue} or {\\@link AbstractControl#patchValue}\n * methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl#valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges} event to be notified when the validation\n * status is re-calculated.\n * \n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray#push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n * \n * ### Example\n * \n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n * \\@stable\n */\nexport class FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n/**\n * \\@internal\n */\n_parent: ControlContainer;\n/**\n * \\@internal\n */\n_validators: any[];\n/**\n * \\@internal\n */\n_asyncValidators: any[];\n\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._checkParentType(); /** @type {?} */((\n    this.formDirective)).addFormArray(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n/**\n * @return {?}\n */\nget control(): FormArray { return /** @type {?} */(( this.formDirective)).getFormArray(this); }\n/**\n * @return {?}\n */\nget formDirective(): FormGroupDirective|null {\n    return this._parent ? /** @type {?} */(( <FormGroupDirective>this._parent.formDirective)) : null;\n  }\n/**\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return composeValidators(this._validators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn|null {\n    return composeAsyncValidators(this._asyncValidators);\n  }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.arrayParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formArrayName]', providers: [formArrayNameProvider]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formArrayName', ] },],\n};\n}\n\nfunction FormArrayName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormArrayName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormArrayName.ctorParameters;\n/** @type {?} */\nFormArrayName.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._parent;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._validators;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._asyncValidators;\n/** @type {?} */\nFormArrayName.prototype.name;\n}\n\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent: ControlContainer): boolean {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n      !(parent instanceof FormArrayName);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_group_name.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ controlNameBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n * \n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n * \n * \\@howToUse \n * \n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n * \n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl#get get} method.\n * Ex: `this.form.get('first');`\n * \n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n * \n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * To see `formControlName` examples with different form control types, see:\n * \n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormControlName extends NgControl implements OnChanges, OnDestroy {\nprivate _added = false;\n/**\n * \\@internal\n */\nviewModel: any;\n/**\n * \\@internal\n */\n_control: FormControl;\n\n   name: string;\n\n  // TODO(kara):  Replace ngModel with reactive API\n   model: any;\n   update = new EventEmitter();\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset isDisabled(isDisabled: boolean) { ReactiveErrors.disabledAttrWarning(); }\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(\n         parent: ControlContainer,\n         validators: Array<Validator|ValidatorFn>,\n         asyncValidators:\n          Array<AsyncValidator|AsyncValidatorFn>,\n         valueAccessors: ControlValueAccessor[]) {\n    super();\n    this._parent = parent;\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n/**\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, /** @type {?} */(( this._parent))); }\n/**\n * @return {?}\n */\nget formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn|null { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn {\n    return /** @type {?} */(( composeAsyncValidators(this._rawAsyncValidators)));\n  }\n/**\n * @return {?}\n */\nget control(): FormControl { return this._control; }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n    if (!(this._parent instanceof FormGroupName) &&\n        this._parent instanceof AbstractFormGroupDirective) {\n      ReactiveErrors.ngModelGroupException();\n    } else if (\n        !(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n        !(this._parent instanceof FormArrayName)) {\n      ReactiveErrors.controlParentException();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _setUpControl() {\n    this._checkParentType();\n    this._control = this.formDirective.addControl(this);\n    if (this.control.disabled && /** @type {?} */(( this.valueAccessor)).setDisabledState) { /** @type {?} */(( /** @type {?} */((\n      this.valueAccessor)).setDisabledState))(true);\n    }\n    this._added = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName]', providers: [controlNameBinding]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formControlName', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction FormControlName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormControlName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormControlName.ctorParameters;\n/** @type {?} */\nFormControlName.propDecorators;\n/** @type {?} */\nFormControlName.prototype._added;\n/**\n * \\@internal\n * @type {?}\n */\nFormControlName.prototype.viewModel;\n/**\n * \\@internal\n * @type {?}\n */\nFormControlName.prototype._control;\n/** @type {?} */\nFormControlName.prototype.name;\n/** @type {?} */\nFormControlName.prototype.model;\n/** @type {?} */\nFormControlName.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_control_name.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input, OnChanges, Provider, SimpleChanges, forwardRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractControl} from '../model';\nimport {NG_VALIDATORS, Validators} from '../validators';\n\n/** @experimental */\nexport type ValidationErrors = {\n  [key: string]: any\n};\n\n/**\n * An interface that can be implemented by classes that can act as validators.\n *\n * ## Usage\n *\n * ```typescript\n * @Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(c: Control): {[key: string]: any} {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * @stable\n */\nexport interface Validator {\n  validate(c: AbstractControl): ValidationErrors|null;\n  registerOnValidatorChange?(fn: () => void): void;\n}\n\n/** @experimental */\nexport interface AsyncValidator extends Validator {\n  validate(c: AbstractControl): Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n\nexport const /** @type {?} */ REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n\nexport const /** @type {?} */ CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n * \n * \\@stable\n */\nexport class RequiredValidator implements Validator {\nprivate _required: boolean;\nprivate _onChange: () => void;\n/**\n * @return {?}\n */\nget required(): boolean|string { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean|string) {\n    this._required = value != null && value !== false && `${value}` !== 'false';\n    if (this._onChange) this._onChange();\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.required(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n  providers: [REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'required': [{ type: Input },],\n};\n}\n\nfunction RequiredValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nRequiredValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRequiredValidator.ctorParameters;\n/** @type {?} */\nRequiredValidator.propDecorators;\n/** @type {?} */\nRequiredValidator.prototype._required;\n/** @type {?} */\nRequiredValidator.prototype._onChange;\n}\n\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n * \n * \\@experimental\n */\nexport class CheckboxRequiredValidator extends RequiredValidator {\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.requiredTrue(c) : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n  providers: [CHECKBOX_REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxRequiredValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxRequiredValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxRequiredValidator.ctorParameters;\n}\n\n/**\n * Provider which adds {\\@link EmailValidator} to {\\@link NG_VALIDATORS}.\n */\nexport const EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n * \n * \\@experimental\n */\nexport class EmailValidator implements Validator {\nprivate _enabled: boolean;\nprivate _onChange: () => void;\n/**\n * @param {?} value\n * @return {?}\n */\nset email(value: boolean|string) {\n    this._enabled = value === '' || value === true || value === 'true';\n    if (this._onChange) this._onChange();\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this._enabled ? Validators.email(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'email': [{ type: Input },],\n};\n}\n\nfunction EmailValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nEmailValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEmailValidator.ctorParameters;\n/** @type {?} */\nEmailValidator.propDecorators;\n/** @type {?} */\nEmailValidator.prototype._enabled;\n/** @type {?} */\nEmailValidator.prototype._onChange;\n}\n\n\n/**\n * @stable\n */\nexport interface ValidatorFn { (c: AbstractControl): ValidationErrors|null; }\n\n/**\n * @stable\n */\nexport interface AsyncValidatorFn {\n  (c: AbstractControl): Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n/**\n * Provider which adds {\\@link MinLengthValidator} to {\\@link NG_VALIDATORS}.\n * \n * ## Example:\n * \n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n */\nexport const MIN_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n * \n * \\@stable\n */\nexport class MinLengthValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   minlength: string;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('minlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.minlength == null ? null : this._validator(c);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void {\n    this._validator = Validators.minLength(parseInt(this.minlength, 10));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n  providers: [MIN_LENGTH_VALIDATOR],\n  host: {'[attr.minlength]': 'minlength ? minlength : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minlength': [{ type: Input },],\n};\n}\n\nfunction MinLengthValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nMinLengthValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMinLengthValidator.ctorParameters;\n/** @type {?} */\nMinLengthValidator.propDecorators;\n/** @type {?} */\nMinLengthValidator.prototype._validator;\n/** @type {?} */\nMinLengthValidator.prototype._onChange;\n/** @type {?} */\nMinLengthValidator.prototype.minlength;\n}\n\n/**\n * Provider which adds {\\@link MaxLengthValidator} to {\\@link NG_VALIDATORS}.\n * \n * ## Example:\n * \n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n */\nexport const MAX_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n * \n * \\@stable\n */\nexport class MaxLengthValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   maxlength: string;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('maxlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.maxlength != null ? this._validator(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void {\n    this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n  providers: [MAX_LENGTH_VALIDATOR],\n  host: {'[attr.maxlength]': 'maxlength ? maxlength : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'maxlength': [{ type: Input },],\n};\n}\n\nfunction MaxLengthValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nMaxLengthValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaxLengthValidator.ctorParameters;\n/** @type {?} */\nMaxLengthValidator.propDecorators;\n/** @type {?} */\nMaxLengthValidator.prototype._validator;\n/** @type {?} */\nMaxLengthValidator.prototype._onChange;\n/** @type {?} */\nMaxLengthValidator.prototype.maxlength;\n}\n\n\n\nexport const /** @type {?} */ PATTERN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n * \n * ### Example\n * \n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nexport class PatternValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   pattern: string|RegExp;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('pattern' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null { return this._validator(c); }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void { this._validator = Validators.pattern(this.pattern); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n  providers: [PATTERN_VALIDATOR],\n  host: {'[attr.pattern]': 'pattern ? pattern : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pattern': [{ type: Input },],\n};\n}\n\nfunction PatternValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nPatternValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPatternValidator.ctorParameters;\n/** @type {?} */\nPatternValidator.propDecorators;\n/** @type {?} */\nPatternValidator.prototype._validator;\n/** @type {?} */\nPatternValidator.prototype._onChange;\n/** @type {?} */\nPatternValidator.prototype.pattern;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/validators.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\nimport {AsyncValidatorFn, ValidatorFn} from './directives/validators';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from './model';\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n * \n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n * \n * \\@howToUse \n * \n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n * \n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n * \n *  * **npm package**: `\\@angular/forms`\n * \n *  * **NgModule**: {\\@link ReactiveFormsModule}\n * \n * \\@stable\n */\nexport class FormBuilder {\n/**\n * Construct a new {\\@link FormGroup} with the given map of configuration.\n * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n * \n * See the {\\@link FormGroup} constructor for more details.\n * @param {?} controlsConfig\n * @param {?=} extra\n * @return {?}\n */\ngroup(controlsConfig: {[key: string]: any}, extra: {[key: string]: any}|null = null): FormGroup {\n    const /** @type {?} */ controls = this._reduceControls(controlsConfig);\n    const /** @type {?} */ validator: ValidatorFn = extra != null ? extra['validator'] : null;\n    const /** @type {?} */ asyncValidator: AsyncValidatorFn = extra != null ? extra['asyncValidator'] : null;\n    return new FormGroup(controls, validator, asyncValidator);\n  }\n/**\n * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n * `asyncValidator`.\n * \n * `formState` can either be a standalone value for the form control or an object\n * that contains both a value and a disabled status.\n * \n * @param {?} formState\n * @param {?=} validator\n * @param {?=} asyncValidator\n * @return {?}\n */\ncontrol(\n      formState: Object, validator?: ValidatorFn|ValidatorFn[]|null,\n      asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null): FormControl {\n    return new FormControl(formState, validator, asyncValidator);\n  }\n/**\n * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n * configuration, with the given optional `validator` and `asyncValidator`.\n * @param {?} controlsConfig\n * @param {?=} validator\n * @param {?=} asyncValidator\n * @return {?}\n */\narray(\n      controlsConfig: any[], validator?: ValidatorFn|null,\n      asyncValidator?: AsyncValidatorFn|null): FormArray {\n    const /** @type {?} */ controls = controlsConfig.map(c => this._createControl(c));\n    return new FormArray(controls, validator, asyncValidator);\n  }\n/**\n * \\@internal\n * @param {?} controlsConfig\n * @return {?}\n */\n_reduceControls(controlsConfig: {[k: string]: any}): {[key: string]: AbstractControl} {\n    const /** @type {?} */ controls: {[key: string]: AbstractControl} = {};\n    Object.keys(controlsConfig).forEach(controlName => {\n      controls[controlName] = this._createControl(controlsConfig[controlName]);\n    });\n    return controls;\n  }\n/**\n * \\@internal\n * @param {?} controlConfig\n * @return {?}\n */\n_createControl(controlConfig: any): AbstractControl {\n    if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n        controlConfig instanceof FormArray) {\n      return controlConfig;\n\n    } else if (Array.isArray(controlConfig)) {\n      const /** @type {?} */ value = controlConfig[0];\n      const /** @type {?} */ validator: ValidatorFn = controlConfig.length > 1 ? controlConfig[1] : null;\n      const /** @type {?} */ asyncValidator: AsyncValidatorFn = controlConfig.length > 2 ? controlConfig[2] : null;\n      return this.control(value, validator, asyncValidator);\n\n    } else {\n      return this.control(controlConfig);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FormBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nFormBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormBuilder.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/form_builder.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive} from '@angular/core';\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n * \n * `novalidate` is used to disable browser's native form validation.\n * \n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n * \n * ```\n * <form ngNativeValidate></form>\n * ```\n * \n * \\@experimental\n */\nexport class NgNoValidate {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n  host: {'novalidate': ''},\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgNoValidate_tsickle_Closure_declarations() {\n/** @type {?} */\nNgNoValidate.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgNoValidate.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_no_validate_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, Type} from '@angular/core';\n\nimport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nimport {DefaultValueAccessor} from './directives/default_value_accessor';\nimport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nimport {NgForm} from './directives/ng_form';\nimport {NgModel} from './directives/ng_model';\nimport {NgModelGroup} from './directives/ng_model_group';\nimport {NgNoValidate} from './directives/ng_no_validate_directive';\nimport {NumberValueAccessor} from './directives/number_value_accessor';\nimport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nimport {RangeValueAccessor} from './directives/range_value_accessor';\nimport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nimport {FormControlName} from './directives/reactive_directives/form_control_name';\nimport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nimport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nimport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nimport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nimport {CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlValueAccessor} from './directives/control_value_accessor';\nexport {DefaultValueAccessor} from './directives/default_value_accessor';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {RangeValueAccessor} from './directives/range_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\n\nexport const /** @type {?} */ SHARED_FORM_DIRECTIVES: Type<any>[] = [\n  NgNoValidate,\n  NgSelectOption,\n  NgSelectMultipleOption,\n  DefaultValueAccessor,\n  NumberValueAccessor,\n  RangeValueAccessor,\n  CheckboxControlValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n  NgControlStatus,\n  NgControlStatusGroup,\n  RequiredValidator,\n  MinLengthValidator,\n  MaxLengthValidator,\n  PatternValidator,\n  CheckboxRequiredValidator,\n  EmailValidator,\n];\n\nexport const /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES: Type<any>[] = [NgModel, NgModelGroup, NgForm];\n\nexport const /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES: Type<any>[] =\n    [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nexport class InternalFormsSharedModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: SHARED_FORM_DIRECTIVES,\n  exports: SHARED_FORM_DIRECTIVES,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InternalFormsSharedModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalFormsSharedModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInternalFormsSharedModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES} from './directives';\nimport {RadioControlRegistry} from './directives/radio_control_value_accessor';\nimport {FormBuilder} from './form_builder';\n/**\n * The ng module for forms.\n * \\@stable\n */\nexport class FormsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n  providers: [RadioControlRegistry],\n  exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FormsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFormsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormsModule.ctorParameters;\n}\n\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nexport class ReactiveFormsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n  providers: [FormBuilder, RadioControlRegistry],\n  exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReactiveFormsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReactiveFormsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReactiveFormsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/form_providers.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n\nexport {AbstractControlDirective} from './directives/abstract_control_directive';\nexport {AbstractFormGroupDirective} from './directives/abstract_form_group_directive';\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlContainer} from './directives/control_container';\nexport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './directives/control_value_accessor';\nexport {COMPOSITION_BUFFER_MODE, DefaultValueAccessor} from './directives/default_value_accessor';\nexport {Form} from './directives/form_interface';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName} from './directives/reactive_directives/form_group_name';\nexport {FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nexport {AsyncValidator, AsyncValidatorFn, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, ValidationErrors, Validator, ValidatorFn} from './directives/validators';\nexport {FormBuilder} from './form_builder';\nexport {AbstractControl, FormArray, FormControl, FormGroup} from './model';\nexport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from './validators';\nexport {VERSION} from './version';\n\nexport {FormsModule,ReactiveFormsModule} from './form_providers';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/forms.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\nexport {AbstractControlDirective,AbstractFormGroupDirective,CheckboxControlValueAccessor,ControlContainer,ControlValueAccessor,NG_VALUE_ACCESSOR,COMPOSITION_BUFFER_MODE,DefaultValueAccessor,Form,NgControl,NgControlStatus,NgControlStatusGroup,NgForm,NgModel,NgModelGroup,RadioControlValueAccessor,FormControlDirective,FormControlName,FormGroupDirective,FormArrayName,FormGroupName,NgSelectOption,SelectControlValueAccessor,SelectMultipleControlValueAccessor,AsyncValidator,AsyncValidatorFn,CheckboxRequiredValidator,EmailValidator,MaxLengthValidator,MinLengthValidator,PatternValidator,RequiredValidator,ValidationErrors,Validator,ValidatorFn,FormBuilder,AbstractControl,FormArray,FormControl,FormGroup,NG_ASYNC_VALIDATORS,NG_VALIDATORS,Validators,VERSION,FormsModule,ReactiveFormsModule} from './src/forms';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/public_api.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ResourceLoader} from '@angular/compiler';\nimport {Injectable} from '@angular/core';\n\n\n\nexport class ResourceLoaderImpl extends ResourceLoader {\n  get(url: string): Promise<string> {\n    let resolve: (result: any) => void;\n    let reject: (error: any) => void;\n    const promise = new Promise<string>((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n      // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n      // by IE10)\n      const response = xhr.response || xhr.responseText;\n\n      // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n      let status = xhr.status === 1223 ? 204 : xhr.status;\n\n      // fix status code when it is 0 (0 status is undocumented).\n      // Occurs when accessing file resources or on Android 4.1 stock browser\n      // while retrieving files from application cache.\n      if (status === 0) {\n        status = response ? 200 : 0;\n      }\n\n      if (200 <= status && status <= 300) {\n        resolve(response);\n      } else {\n        reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() { reject(`Failed to load ${url}`); };\n\n    xhr.send();\n    return promise;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_impl.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {ResourceLoader} from '@angular/compiler';\nimport {COMPILER_OPTIONS, PLATFORM_ID, Provider} from '@angular/core';\n\nimport {ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS as INTERNAL_BROWSER_PLATFORM_PROVIDERS} from '@angular/platform-browser';\n\nimport {ResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\nexport const INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: Provider[] = [\n  INTERNAL_BROWSER_PLATFORM_PROVIDERS,\n  {\n    provide: COMPILER_OPTIONS,\n    useValue: {providers: [{provide: ResourceLoader, useClass: ResourceLoaderImpl}]},\n    multi: true\n  },\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n];\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/platform_providers.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader} from '@angular/compiler';\nimport {ɵglobal as global} from '@angular/core';\n\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n */\nexport class CachedResourceLoader extends ResourceLoader {\n  private _cache: {[url: string]: string};\n\n  constructor() {\n    super();\n    this._cache = (<any>global).$templateCache;\n    if (this._cache == null) {\n      throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n    }\n  }\n\n  get(url: string): Promise<string> {\n    if (this._cache.hasOwnProperty(url)) {\n      return Promise.resolve(this._cache[url]);\n    } else {\n      return <Promise<any>>Promise.reject(\n          'CachedResourceLoader: Did not find cached template for ' + url);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/resource_loader/resource_loader_cache.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nexport {ResourceLoaderImpl as ɵResourceLoaderImpl} from './resource_loader/resource_loader_impl';\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/private_export.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('4.4.7');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/version.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ResourceLoader, platformCoreDynamic} from '@angular/compiler';\nimport {PlatformRef, Provider, createPlatformFactory} from '@angular/core';\n\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './platform_providers';\nimport {CachedResourceLoader} from './resource_loader/resource_loader_cache';\n\nexport * from './private_export';\nexport {VERSION} from './version';\n/**\n * @experimental\n */\nexport const RESOURCE_CACHE_PROVIDER: Provider[] =\n    [{provide: ResourceLoader, useClass: CachedResourceLoader}];\n\n/**\n * @stable\n */\nexport const platformBrowserDynamic = createPlatformFactory(\n    platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/src/platform-browser-dynamic.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser-dynamic package.\n */\nexport * from './src/platform-browser-dynamic';\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/platform-browser-dynamic/index.ts","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, ISubscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<ISubscription>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/BehaviorSubject.ts","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/InnerSubscriber.ts","import { PartialObserver } from './Observer';\nimport { Observable } from './Observable';\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: string, public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return Observable.of(this.value);\n      case 'E':\n        return Observable.throw(this.error);\n      case 'C':\n        return Observable.empty<T>();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/Notification.ts","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/SubjectSubscription.ts","\nimport { Observable } from '../../Observable';\nimport { map } from '../../operator/map';\n\nObservable.prototype.map = map;\n\ndeclare module '../../Observable' {\n  interface Observable<T> {\n    map: typeof map;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../../../src/add/operator/map.ts","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayLikeObservable<T> extends Observable<T> {\n\n  static create<T>(arrayLike: ArrayLike<T>, scheduler?: IScheduler): Observable<T> {\n    const length = arrayLike.length;\n    if (length === 0) {\n      return new EmptyObservable<T>();\n    } else if (length === 1) {\n      return new ScalarObservable<T>(<any>arrayLike[0], scheduler);\n    } else {\n      return new ArrayLikeObservable(arrayLike, scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n    const { arrayLike, index, length, subscriber } = state;\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    if (index >= length) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(arrayLike[index]);\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  private value: any;\n\n  constructor(private arrayLike: ArrayLike<T>, private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && arrayLike.length === 1) {\n      this._isScalar = true;\n      this.value = arrayLike[0];\n    }\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const { arrayLike, scheduler } = this;\n    const length = arrayLike.length;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\n        arrayLike, index, length, subscriber\n      });\n    } else {\n      for (let i = 0; i < length && !subscriber.closed; i++) {\n        subscriber.next(arrayLike[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/ArrayLikeObservable.ts","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  /** @deprecated internal use only */ public _subject: Subject<T>;\n  /** @deprecated internal use only */ public _refCount: number = 0;\n  /** @deprecated internal use only */ public _connection: Subscription;\n  _isComplete = false;\n\n  constructor(/** @deprecated internal use only */ public source: Observable<T>,\n              /** @deprecated internal use only */ public subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  /** @deprecated internal use only */ public getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nconst connectableProto = <any>ConnectableObservable.prototype;\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subject: { value: null, writable: true },\n  _connection: { value: null, writable: true },\n  _subscribe: { value: connectableProto._subscribe },\n  _isComplete: { value: connectableProto._isComplete, writable: true },\n  getSubject: { value: connectableProto.getSubject },\n  connect: { value: connectableProto.connect },\n  refCount: { value: connectableProto.refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  /** @deprecated internal use only */ _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  /** @deprecated internal use only */ _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/ConnectableObservable.ts","import { Observable, SubscribableOrPromise } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { EmptyObservable } from './EmptyObservable';\nimport { isArray } from '../util/isArray';\n\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ForkJoinObservable<T> extends Observable<T> {\n  constructor(private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super();\n  }\n\n  /* tslint:disable:max-line-length */\n  static create<T, T2>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>): Observable<[T, T2]>;\n  static create<T, T2, T3>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>): Observable<[T, T2, T3]>;\n  static create<T, T2, T3, T4>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>): Observable<[T, T2, T3, T4]>;\n  static create<T, T2, T3, T4, T5>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>): Observable<[T, T2, T3, T4, T5]>;\n  static create<T, T2, T3, T4, T5, T6>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n  static create<T, R>(v1: SubscribableOrPromise<T>, project: (v1: T) => R): Observable<R>;\n  static create<T, T2, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, project: (v1: T, v2: T2) => R): Observable<R>;\n  static create<T, T2, T3, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, project: (v1: T, v2: T2, v3: T3) => R): Observable<R>;\n  static create<T, T2, T3, T4, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): Observable<R>;\n  static create<T, T2, T3, T4, T5, T6, R>(v1: SubscribableOrPromise<T>, v2: SubscribableOrPromise<T2>, v3: SubscribableOrPromise<T3>, v4: SubscribableOrPromise<T4>, v5: SubscribableOrPromise<T5>, v6: SubscribableOrPromise<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): Observable<R>;\n  static create<T>(sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(sources: SubscribableOrPromise<any>[]): Observable<R>;\n  static create<T, R>(sources: SubscribableOrPromise<T>[], project: (...values: Array<T>) => R): Observable<R>;\n  static create<R>(sources: SubscribableOrPromise<any>[], project: (...values: Array<any>) => R): Observable<R>;\n  static create<T>(...sources: SubscribableOrPromise<T>[]): Observable<T[]>;\n  static create<R>(...sources: SubscribableOrPromise<any>[]): Observable<R>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Joins last values emitted by passed Observables.\n   *\n   * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n   *\n   * <img src=\"./img/forkJoin.png\" width=\"100%\">\n   *\n   * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n   * or directly as arguments. If no input Observables are provided, resulting stream will complete\n   * immediately.\n   *\n   * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n   * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n   * array will have `n` values, where first value is the last thing emitted by the first Observable,\n   * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n   * not emit more than once and it will complete after that. If you need to emit combined values not only\n   * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n   * or {@link zip} instead.\n   *\n   * In order for resulting array to have the same length as the number of input Observables, whenever any of\n   * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n   * and it will not emit anything either, even if it already has some last values from other Observables.\n   * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n   * unless at any point some other Observable completes without emitting value, which brings us back to\n   * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n   * have to emit something at least once and complete.\n   *\n   * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n   * will be immediately unsubscribed.\n   *\n   * Optionally `forkJoin` accepts project function, that will be called with values which normally\n   * would land in emitted array. Whatever is returned by project function, will appear in output\n   * Observable instead. This means that default project can be thought of as a function that takes\n   * all its arguments and puts them into an array. Note that project function will be called only\n   * when output Observable is supposed to emit a result.\n   *\n   * @example <caption>Use forkJoin with operator emitting immediately</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.of(1, 2, 3, 4),\n   *   Rx.Observable.of(5, 6, 7, 8)\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [4, 8]\n   * // \"This is how it ends!\"\n   *\n   *\n   * @example <caption>Use forkJoin with operator emitting after some time</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // [2, 3] after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   *\n   * @example <caption>Use forkJoin with project function</caption>\n   * const observable = Rx.Observable.forkJoin(\n   *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n   *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n   *   (n, m) => n + m\n   * );\n   * observable.subscribe(\n   *   value => console.log(value),\n   *   err => {},\n   *   () => console.log('This is how it ends!')\n   * );\n   *\n   * // Logs:\n   * // 5 after 3 seconds\n   * // \"This is how it ends!\" immediately after\n   *\n   * @see {@link combineLatest}\n   * @see {@link zip}\n   *\n   * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n   * passed directly to the operator.\n   * @param {function} [project] Function that takes values emitted by input Observables and returns value\n   * that will appear in resulting Observable instead of default array.\n   * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n   * or value from project function.\n   * @static true\n   * @name forkJoin\n   * @owner Observable\n   */\n  static create<T>(...sources: Array<SubscribableOrPromise<any> |\n                                  Array<SubscribableOrPromise<any>> |\n                                  ((...values: Array<any>) => any)>): Observable<T> {\n    if (sources === null || arguments.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    let resultSelector: (...values: Array<any>) => any = null;\n    if (typeof sources[sources.length - 1] === 'function') {\n      resultSelector = <(...values: Array<any>) => any>sources.pop();\n    }\n\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n    if (sources.length === 1 && isArray(sources[0])) {\n      sources = <Array<SubscribableOrPromise<any>>>sources[0];\n    }\n\n    if (sources.length === 0) {\n      return new EmptyObservable<T>();\n    }\n\n    return new ForkJoinObservable(<Array<SubscribableOrPromise<any>>>sources, resultSelector);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<any>): Subscription {\n    return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber<T> extends OuterSubscriber<T, T> {\n  private completed = 0;\n  private total: number;\n  private values: any[];\n  private haveValues = 0;\n\n  constructor(destination: Subscriber<T>,\n              private sources: Array<SubscribableOrPromise<any>>,\n              private resultSelector?: (...values: Array<any>) => T) {\n    super(destination);\n\n    const len = sources.length;\n    this.total = len;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      const source = sources[i];\n      const innerSubscription = subscribeToResult(this, source, null, i);\n\n      if (innerSubscription) {\n        (<any> innerSubscription).outerIndex = i;\n        this.add(innerSubscription);\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    this.values[outerIndex] = innerValue;\n    if (!(<any>innerSub)._hasValue) {\n      (<any>innerSub)._hasValue = true;\n      this.haveValues++;\n    }\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, T>): void {\n    const destination = this.destination;\n    const { haveValues, resultSelector, values } = this;\n    const len = values.length;\n\n    if (!(<any>innerSub)._hasValue) {\n      destination.complete();\n      return;\n    }\n\n    this.completed++;\n\n    if (this.completed !== len) {\n      return;\n    }\n\n    if (haveValues === len) {\n      const value = resultSelector ? resultSelector.apply(this, values) : values;\n      destination.next(value);\n    }\n\n    destination.complete();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/ForkJoinObservable.ts","import { isArray } from '../util/isArray';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { PromiseObservable } from './PromiseObservable';\nimport { IteratorObservable } from'./IteratorObservable';\nimport { ArrayObservable } from './ArrayObservable';\nimport { ArrayLikeObservable } from './ArrayLikeObservable';\n\nimport { IScheduler } from '../Scheduler';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { Observable, ObservableInput } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObserveOnSubscriber } from '../operators/observeOn';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class FromObservable<T> extends Observable<T> {\n  constructor(private ish: ObservableInput<T>, private scheduler?: IScheduler) {\n    super(null);\n  }\n\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\n  static create<T, R>(ish: ArrayLike<T>, scheduler?: IScheduler): Observable<R>;\n\n  /**\n   * Creates an Observable from an Array, an array-like object, a Promise, an\n   * iterable object, or an Observable-like object.\n   *\n   * <span class=\"informal\">Converts almost anything to an Observable.</span>\n   *\n   * <img src=\"./img/from.png\" width=\"100%\">\n   *\n   * Convert various other objects and data types into Observables. `from`\n   * converts a Promise or an array-like or an\n   * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n   * object into an Observable that emits the items in that promise or array or\n   * iterable. A String, in this context, is treated as an array of characters.\n   * Observable-like objects (contains a function named with the ES2015 Symbol\n   * for Observable) can also be converted through this operator.\n   *\n   * @example <caption>Converts an array to an Observable</caption>\n   * var array = [10, 20, 30];\n   * var result = Rx.Observable.from(array);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 10 20 30\n   *\n   * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n   * function* generateDoubles(seed) {\n   *   var i = seed;\n   *   while (true) {\n   *     yield i;\n   *     i = 2 * i; // double it\n   *   }\n   * }\n   *\n   * var iterator = generateDoubles(3);\n   * var result = Rx.Observable.from(iterator).take(10);\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following:\n   * // 3 6 12 24 48 96 192 384 768 1536\n   *\n   * @see {@link create}\n   * @see {@link fromEvent}\n   * @see {@link fromEventPattern}\n   * @see {@link fromPromise}\n   *\n   * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n   * Observable-like, an Array, an iterable or an array-like object to be\n   * converted.\n   * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n   * emissions of values.\n   * @return {Observable<T>} The Observable whose values are originally from the\n   * input object that was converted.\n   * @static true\n   * @name from\n   * @owner Observable\n   */\n  static create<T>(ish: ObservableInput<T>, scheduler?: IScheduler): Observable<T> {\n    if (ish != null) {\n      if (typeof ish[Symbol_observable] === 'function') {\n        if (ish instanceof Observable && !scheduler) {\n          return ish;\n        }\n        return new FromObservable<T>(ish, scheduler);\n      } else if (isArray(ish)) {\n        return new ArrayObservable<T>(ish, scheduler);\n      } else if (isPromise<T>(ish)) {\n        return new PromiseObservable<T>(ish, scheduler);\n      } else if (typeof ish[Symbol_iterator] === 'function' || typeof ish === 'string') {\n        return new IteratorObservable<T>(ish, scheduler);\n      } else if (isArrayLike(ish)) {\n        return new ArrayLikeObservable(ish, scheduler);\n      }\n    }\n\n    throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>) {\n    const ish = this.ish;\n    const scheduler = this.scheduler;\n    if (scheduler == null) {\n      return ish[Symbol_observable]().subscribe(subscriber);\n    } else {\n      return ish[Symbol_observable]().subscribe(new ObserveOnSubscriber(subscriber, scheduler, 0));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/FromObservable.ts","import { root } from '../util/root';\nimport { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { TeardownLogic } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class IteratorObservable<T> extends Observable<T> {\n  private iterator: any;\n\n  static create<T>(iterator: any, scheduler?: IScheduler): IteratorObservable<T> {\n    return new IteratorObservable(iterator, scheduler);\n  }\n\n  static dispatch(state: any) {\n\n    const { index, hasError, iterator, subscriber } = state;\n\n    if (hasError) {\n      subscriber.error(state.error);\n      return;\n    }\n\n    let result = iterator.next();\n    if (result.done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(result.value);\n    state.index = index + 1;\n\n    if (subscriber.closed) {\n      if (typeof iterator.return === 'function') {\n        iterator.return();\n      }\n      return;\n    }\n\n    (<any> this).schedule(state);\n  }\n\n  constructor(iterator: any, private scheduler?: IScheduler) {\n    super();\n\n    if (iterator == null) {\n      throw new Error('iterator cannot be null.');\n    }\n\n    this.iterator = getIterator(iterator);\n  }\n\n  /** @deprecated internal use only */ _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    let index = 0;\n    const { iterator, scheduler } = this;\n\n    if (scheduler) {\n      return scheduler.schedule(IteratorObservable.dispatch, 0, {\n        index, iterator, subscriber\n      });\n    } else {\n      do {\n        let result = iterator.next();\n        if (result.done) {\n          subscriber.complete();\n          break;\n        } else {\n          subscriber.next(result.value);\n        }\n        if (subscriber.closed) {\n          if (typeof iterator.return === 'function') {\n            iterator.return();\n          }\n          break;\n        }\n      } while (true);\n    }\n  }\n}\n\nclass StringIterator {\n  constructor(private str: string,\n              private idx: number = 0,\n              private len: number = str.length) {\n  }\n  [Symbol_iterator]() { return (this); }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.str.charAt(this.idx++)\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nclass ArrayIterator {\n  constructor(private arr: Array<any>,\n              private idx: number = 0,\n              private len: number = toLength(arr)) {\n  }\n  [Symbol_iterator]() { return this; }\n  next() {\n    return this.idx < this.len ? {\n        done: false,\n        value: this.arr[this.idx++]\n    } : {\n        done: true,\n        value: undefined\n    };\n  }\n}\n\nfunction getIterator(obj: any) {\n  const i = obj[Symbol_iterator];\n  if (!i && typeof obj === 'string') {\n    return new StringIterator(obj);\n  }\n  if (!i && obj.length !== undefined) {\n    return new ArrayIterator(obj);\n  }\n  if (!i) {\n    throw new TypeError('object is not iterable');\n  }\n  return obj[Symbol_iterator]();\n}\n\nconst maxSafeInteger = Math.pow(2, 53) - 1;\n\nfunction toLength(o: any) {\n  let len = +o.length;\n  if (isNaN(len)) {\n      return 0;\n  }\n  if (len === 0 || !numberIsFinite(len)) {\n      return len;\n  }\n  len = sign(len) * Math.floor(Math.abs(len));\n  if (len <= 0) {\n      return 0;\n  }\n  if (len > maxSafeInteger) {\n      return maxSafeInteger;\n  }\n  return len;\n}\n\nfunction numberIsFinite(value: any) {\n  return typeof value === 'number' && root.isFinite(value);\n}\n\nfunction sign(value: any) {\n  let valueAsNumber = +value;\n  if (valueAsNumber === 0) {\n    return valueAsNumber;\n  }\n  if (isNaN(valueAsNumber)) {\n    return valueAsNumber;\n  }\n  return valueAsNumber < 0 ? -1 : 1;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/IteratorObservable.ts","import {  ForkJoinObservable  } from './ForkJoinObservable';\n\nexport const forkJoin = ForkJoinObservable.create;\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/forkJoin.ts","import {  FromObservable  } from './FromObservable';\n\nexport const from = FromObservable.create;\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/from.ts","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from './ArrayObservable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll(concurrent)(new ArrayObservable(<any>observables, scheduler)) as Observable<R>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/merge.ts","import {  ArrayObservable  } from './ArrayObservable';\n\nexport const of = ArrayObservable.of;\n\n\n// WEBPACK FOOTER //\n// ../../src/observable/of.ts","\nimport { Observable, ObservableInput } from '../Observable';\nimport { catchError as higherOrder } from '../operators/catchError';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @name catch\n * @owner Observable\n */\nexport function _catch<T, R>(this: Observable<T>, selector: (err: any, caught: Observable<T>) => ObservableInput<R>): Observable<T | R> {\n  return higherOrder(selector)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/catch.ts","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { concatAll as higherOrder } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\nexport function concatAll<T>(this: Observable<T>): T;\nexport function concatAll<T, R>(this: Observable<T>): Subscribable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(this: Observable<T>): T {\n  return <any>higherOrder()(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/concatAll.ts","import { concatMap as higherOrderConcatMap } from '../operators/concatMap';\nimport { Observable, ObservableInput } from '../Observable';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<R>): Observable<R>;\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return higherOrderConcatMap(project, resultSelector)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/concatMap.ts","\nimport { Observable } from '../Observable';\nimport { every as higherOrder } from '../operators/every';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(this: Observable<T>, predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): Observable<boolean> {\n  return higherOrder(predicate, thisArg)(this);\n}\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/every.ts","\nimport { Observable } from '../Observable';\nimport { filter as higherOrderFilter } from '../operators/filter';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(this: Observable<T>,\n                                       predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): Observable<S>;\nexport function filter<T>(this: Observable<T>,\n                          predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(this: Observable<T>, predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): Observable<T> {\n  return higherOrderFilter(predicate, thisArg)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/filter.ts","import { Observable } from '../Observable';\nimport { first as higherOrder } from '../operators/first';\n\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function first<T, S extends T, R>(this: Observable<T>,\n                                         predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function first<T, S extends T>(this: Observable<T>,\n                                      predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): Observable<S>;\nexport function first<T>(this: Observable<T>,\n                         predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function first<T, R>(this: Observable<T>,\n                            predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): Observable<R>;\nexport function first<T>(this: Observable<T>,\n                         predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): Observable<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/first.ts","import { Observable } from '../Observable';\nimport { last as higherOrder } from '../operators/last';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S): Observable<S>;\nexport function last<T, S extends T, R>(this: Observable<T>,\n                                        predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): Observable<R>;\nexport function last<T, S extends T>(this: Observable<T>,\n                                     predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): Observable<S>;\nexport function last<T>(this: Observable<T>,\n                        predicate?: (value: T, index: number, source: Observable<T>) => boolean): Observable<T>;\nexport function last<T, R>(this: Observable<T>,\n                           predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): Observable<R>;\nexport function last<T>(this: Observable<T>,\n                        predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(this: Observable<T>, predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): Observable<T | R> {\n  return higherOrder(predicate, resultSelector as any, defaultValue)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/last.ts","import { Observable } from '../Observable';\nimport { Subscribable } from '../Observable';\nimport { mergeAll as higherOrder } from '../operators/mergeAll';\n\nexport function mergeAll<T>(this: Observable<T>, concurrent?: number): T;\nexport function mergeAll<T, R>(this: Observable<T>, concurrent?: number): Subscribable<R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(this: Observable<T>, concurrent: number = Number.POSITIVE_INFINITY): Observable<T> {\n  return higherOrder(concurrent)(this) as Observable<T>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/mergeAll.ts","import { Observable, ObservableInput } from '../Observable';\nimport { mergeMap as higherOrderMergeMap } from '../operators/mergeMap';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<R>, concurrent?: number): Observable<R>;\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R, concurrent?: number): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, I, R>(this: Observable<T>, project: (value: T, index: number) => ObservableInput<I>,\n                                  resultSelector?: ((outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) | number,\n                                  concurrent: number = Number.POSITIVE_INFINITY): Observable<I | R> {\n  return higherOrderMergeMap(project, <any>resultSelector, concurrent)(this) as Observable<I | R>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/mergeMap.ts","import { Observable } from '../Observable';\nimport { reduce as higherOrderReduce } from '../operators/reduce';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T, value: T, index: number) => T, seed?: T): Observable<T>;\nexport function reduce<T>(this: Observable<T>, accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): Observable<T[]>;\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index: number) => R, seed: R): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(this: Observable<T>, accumulator: (acc: R, value: T, index?: number) => R, seed?: R): Observable<R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return higherOrderReduce(accumulator, seed)(this);\n  }\n\n  return higherOrderReduce(accumulator)(this);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/reduce.ts","import { Observable } from '../Observable';\nimport { share as higherOrder } from '../operators/share';\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return higherOrder()(this) as Observable<T>;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operator/share.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\n\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, R>(selector: (err: any, caught: Observable<T>) => ObservableInput<R>): OperatorFunction<T, T | R> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | R> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends OuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      this.add(subscribeToResult(this, result));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/catchError.ts","\nimport { mergeAll } from './mergeAll';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): MonoTypeOperatorFunction<T> {\n  return mergeAll(1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/concatAll.ts","import { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, R>(project: (value: T, index: number) =>  ObservableInput<R>): OperatorFunction<T, R>;\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, I, R>(project: (value: T, index: number) =>  ObservableInput<I>,\n                                   resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R) {\n  return mergeMap(project, resultSelector, 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/concatMap.ts","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/defaultIfEmpty.ts","import { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/every.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/filter.ts","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n/* tslint:disable:max-line-length */\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function first<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                         resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                      resultSelector: void,\n                                      defaultValue?: S): OperatorFunction<T, S>;\nexport function first<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function first<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: (value: T, index: number) => R,\n                            defaultValue?: R): OperatorFunction<T, R>;\nexport function first<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         resultSelector: void,\n                         defaultValue?: T): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                            resultSelector?: ((value: T, index: number) => R) | void,\n                            defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass FirstOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FirstSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n  private hasCompleted: boolean = false;\n  private _emitted: boolean = false;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  }\n\n  private _emit(value: any, index: number) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  }\n\n  private _emitFinal(value: any) {\n    const destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/first.ts","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S): OperatorFunction<T, S>;\nexport function last<T, S extends T, R>(predicate: (value: T | S, index: number, source: Observable<T>) => value is S,\n                                        resultSelector: (value: S, index: number) => R, defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     resultSelector: void,\n                                     defaultValue?: S): OperatorFunction<T, S>;\nexport function last<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\nexport function last<T, R>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: (value: T, index: number) => R,\n                           defaultValue?: R): OperatorFunction<T, R>;\nexport function last<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        resultSelector: void,\n                        defaultValue?: T): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - The condition any source emitted item has to satisfy.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nexport function last<T, R>(predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n                           resultSelector?: ((value: T, index: number) => R) | void,\n                           defaultValue?: R): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new LastOperator(predicate, resultSelector, defaultValue, source));\n}\n\nclass LastOperator<T, R> implements Operator<T, R> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass LastSubscriber<T, R> extends Subscriber<T> {\n  private lastValue: T | R;\n  private hasValue: boolean = false;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private resultSelector?: ((value: T, index: number) => R) | void,\n              private defaultValue?: any,\n              private source?: Observable<T>) {\n    super(destination);\n    if (typeof defaultValue !== 'undefined') {\n      this.lastValue = defaultValue;\n      this.hasValue = true;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryPredicate(value: T, index: number) {\n    let result: any;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      if (this.resultSelector) {\n        this._tryResultSelector(value, index);\n        return;\n      }\n      this.lastValue = value;\n      this.hasValue = true;\n    }\n  }\n\n  private _tryResultSelector(value: T, index: number) {\n    let result: any;\n    try {\n      result = (<any>this).resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.lastValue = result;\n    this.hasValue = true;\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    if (this.hasValue) {\n      destination.next(this.lastValue);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/last.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../interfaces';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/map.ts","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { FactoryOrValue, MonoTypeOperatorFunction, OperatorFunction, UnaryFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subjectOrSubjectFactory: FactoryOrValue<Subject<T>>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\nexport function multicast<T, R>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: OperatorFunction<T, R>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/multicast.ts","import { Observable } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { Operator } from '../Operator';\nimport { PartialObserver } from '../Observer';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { TeardownLogic } from '../Subscription';\nimport { Action } from '../scheduler/Action';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: IScheduler, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: IScheduler, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  static dispatch(this: Action<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: IScheduler,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    this.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/observeOn.ts","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed: T[]): OperatorFunction<T, T[]>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index?: number) => R, seed?: R): OperatorFunction<T, R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<R> {\n    return pipe(scan<T, T | R>((acc, value, index) => {\n      return accumulator(<R>acc, value, index + 1);\n    }), takeLast(1))(source) as Observable<R>;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/reduce.ts","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../interfaces';\n\n/* tslint:disable:max-line-length */\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T>(accumulator: (acc: T[], value: T, index: number) => T[], seed?: T[]): OperatorFunction<T, T[]>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/scan.ts","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/share.ts","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { EmptyObservable } from '../observable/EmptyObservable';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../interfaces';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.takeLast(3);\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return new EmptyObservable<T>();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/operators/takeLast.ts","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n  constructor() {\n    const err: any = super('argument out of range');\n    (<any> this).name = err.name = 'ArgumentOutOfRangeError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/ArgumentOutOfRangeError.ts","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/UnsubscriptionError.ts","export function identity<T>(x: T): T {\n  return x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/identity.ts","/* tslint:disable:no-empty */\nexport function noop() { }\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/noop.ts","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/toSubscriber.ts","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../src/util/tryCatch.ts"],"sourceRoot":""}